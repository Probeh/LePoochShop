var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.708,1,1.133]],["body/components/AboutComponent.html",[0,1.097,1,1.888,2,1.632,3,0.202,4,0.202,5,1.519,6,1.519,7,1.519,8,1.519,9,0.202,10,2.974,11,1.731,12,2.53,13,1.519,14,3.004,15,2.655,16,2.08,17,5.451,18,2.08,19,4.78,20,0.472,21,1.294,22,2.721,23,1.031,24,0.744,25,3.491,26,3.491,27,0.892,28,0.022,29,1.264,30,0.343,31,0.507,32,0.229,33,0.102,34,2.977,35,1.061,36,2.08,37,2.08,38,1.519,39,2.551,40,1.519,41,0.694,42,1.519,43,1.192,44,1.519,45,1.192,46,1.519,47,1.124,48,1.519,49,1.061,50,1.519,51,1.192,52,1.519,53,1.124,54,1.519,55,1.124,56,1.519,57,1.124,58,1.519,59,1.192,60,1.427,61,1.519,62,1.519,63,0.011,64,0.015,65,0.011]],["title/classes/Account.html",[33,0.103,66,1.531]],["body/classes/Account.html",[3,0.179,4,0.179,9,0.179,20,0.417,23,0.583,24,1.029,28,0.023,30,0.303,32,0.202,33,0.09,41,0.741,63,0.01,64,0.014,65,0.01,66,1.908,67,1.644,68,2.627,69,3.306,70,3.238,71,1.412,72,2.154,73,4.366,74,4.366,75,4.153,76,2.731,77,2.336,78,2.731,79,2.731,80,2.731,81,3.735,82,2.528,83,4.385,84,0.835,85,1.029,86,0.7,87,3.177,88,3.085,89,3.085,90,2.336,91,4.598,92,2.326,93,2.326,94,2.326,95,2.177,96,2.326,97,2.326,98,2.326,99,2.326,100,2.627,101,3.085,102,3.085,103,3.085]],["title/components/AppComponent.html",[0,0.708,43,1.201]],["body/components/AppComponent.html",[0,0.997,1,0.943,2,1.442,3,0.17,4,0.17,5,1.274,6,1.838,7,1.274,8,1.274,9,0.17,13,1.274,14,2.912,15,2.573,16,1.838,18,1.838,28,0.022,30,0.487,31,0.425,32,0.192,33,0.086,35,0.89,36,1.838,37,1.838,38,1.274,39,2.361,40,1.274,41,0.614,42,1.274,43,1.852,44,1.274,45,1,46,1.274,47,0.943,48,1.274,49,0.89,50,1.274,51,1,52,1.274,53,0.943,54,1.274,55,0.943,56,1.274,57,0.943,58,1.274,59,1,60,1.197,61,1.274,62,1.274,63,0.009,64,0.013,65,0.009,104,2.495,105,4.225,106,4.956,107,4.225,108,2.929,109,5.426,110,2.929,111,4.221,112,4.225,113,4.956,114,5.993,115,4.225,116,4.221,117,5.262,118,2.929,119,4.221,120,3.599,121,4.225,122,3.599,123,4.225,124,2.929,125,2.929,126,2.929,127,5.752,128,2.929,129,4.621,130,2.929,131,3.599,132,4.225,133,2.495,134,2.495,135,2.929,136,2.495,137,2.632,138,2.495,139,1.995,140,2.929,141,2.929,142,2.495,143,2.209,144,2.495,145,2.929]],["title/modules/AppModule.html",[146,1.274,147,2.397]],["body/modules/AppModule.html",[3,0.215,4,0.215,9,0.215,15,1.428,28,0.023,30,0.635,31,0.539,32,0.244,33,0.109,35,1.129,43,2.381,63,0.012,64,0.015,65,0.012,146,1.345,147,4.716,148,1.428,149,1.844,150,3.232,151,2.998,152,2.863,153,1.844,154,3.164,155,3.164,156,3.164,157,3.164,158,4.023,159,3.907,160,2.863,161,2.134,162,1.979,163,3.715,164,2.656,165,4.986,166,3.164,167,2.801,168,2.656,169,3.715,170,3.715,171,3.715,172,3.396,173,4.986,174,3.715,175,3.715]],["title/modules/AppRoutingModule.html",[146,1.274,158,2.192]],["body/modules/AppRoutingModule.html",[3,0.234,4,0.234,9,0.234,28,0.023,30,0.612,31,0.588,32,0.265,33,0.118,49,1.23,60,1.654,63,0.013,64,0.016,65,0.013,66,1.761,148,1.556,153,2.01,158,3.287,164,2.157,168,2.812,176,4.048,177,4.048,178,3.594,179,3.657,180,2.01,181,3.448,182,3.031,183,3.448,184,2.01,185,5.299,186,3.448,187,4.048,188,3.448,189,5.277,190,4.048,191,4.048,192,4.048,193,4.048,194,3.448,195,3.448,196,3.448,197,4.048]],["title/classes/AppSettings.html",[33,0.103,198,1.747]],["body/classes/AppSettings.html",[3,0.259,4,0.259,9,0.259,20,0.606,24,0.876,28,0.022,30,0.44,32,0.294,33,0.131,63,0.014,64,0.017,65,0.014,67,2.387,71,1.813,72,2.065,82,1.622,85,1.005,86,1.278,95,2.224,172,4.194,198,2.795,199,3.815,200,4.232,201,3.507,202,4.48,203,4.48,204,3.835,205,4.48,206,3.815,207,3.378]],["title/components/AppointmentComponent.html",[0,0.708,45,1.201]],["body/components/AppointmentComponent.html",[0,1.1,1,1.131,2,1.638,3,0.203,4,0.203,5,1.528,6,1.528,7,1.528,8,1.528,9,0.203,11,1.738,12,2.538,13,1.528,14,3.007,15,2.657,16,2.088,18,2.088,20,0.475,21,1.299,22,2.728,23,1.034,24,0.747,27,0.897,28,0.022,29,1.272,30,0.345,31,0.51,32,0.23,33,0.103,34,2.989,35,1.067,36,2.088,37,2.088,38,1.528,39,2.557,40,1.528,41,0.697,42,1.528,43,1.199,44,1.528,45,2.006,46,1.528,47,1.131,48,1.528,49,1.067,50,1.528,51,1.199,52,1.528,53,1.131,54,1.528,55,1.131,56,1.528,57,1.131,58,1.528,59,1.199,60,1.435,61,1.528,62,1.528,63,0.011,64,0.015,65,0.011,208,2.991,209,5.877,210,5.468,211,4.799,212,3.512,213,3.512]],["title/modules/AppointmentModule.html",[146,1.274,214,2.397]],["body/modules/AppointmentModule.html",[3,0.259,4,0.259,9,0.259,28,0.022,30,0.605,31,0.651,32,0.294,33,0.131,35,1.361,45,2.32,63,0.014,64,0.017,65,0.014,146,1.622,148,1.722,149,2.224,150,3.537,151,2.387,152,2.573,153,2.224,160,3.234,161,2.573,162,2.387,164,2.387,168,3,214,4.628,215,3.815,216,3.815,217,4.48,218,3.507,219,2.79,220,4.48]],["title/components/DialogComponent.html",[0,0.708,47,1.133]],["body/components/DialogComponent.html",[0,0.999,1,0.946,2,1.445,3,0.17,4,0.17,5,1.278,6,1.278,7,1.278,8,1.278,9,0.17,11,1.533,12,2.304,13,1.278,14,2.913,15,2.575,16,1.842,18,1.842,20,0.397,21,1.146,22,2.521,23,0.555,24,0.845,27,1.267,28,0.023,29,1.797,30,0.416,31,0.426,32,0.192,33,0.086,35,0.892,36,1.842,37,1.842,38,1.278,39,2.363,40,1.278,41,0.721,42,1.278,43,1.002,44,1.278,45,1.002,46,1.278,47,1.749,48,1.278,49,0.892,50,1.278,51,1.002,52,1.278,53,0.946,54,1.278,55,0.946,56,1.278,57,0.946,58,1.278,59,1.002,60,1.2,61,1.278,62,1.278,63,0.009,64,0.013,65,0.009,72,1.823,84,0.795,85,0.457,86,0.667,184,2.101,221,2.501,222,4.626,223,4.963,224,4.233,225,4.626,226,4.626,227,2.936,228,2.696,229,2.936,230,4.233,231,2.936,232,2.936,233,2.936,234,2.214,235,1.002,236,2.936,237,1.965,238,2.936,239,2.936,240,2.936,241,4.233,242,4.233,243,2.936,244,2.936,245,2.936]],["title/injectables/DialogService.html",[228,1.747,246,1.009]],["body/injectables/DialogService.html",[3,0.217,4,0.217,9,0.217,20,0.507,21,1.358,23,1.069,24,0.979,27,1.281,28,0.023,29,1.817,30,0.493,31,0.544,32,0.246,33,0.11,63,0.012,64,0.016,65,0.012,71,1.616,72,2.122,85,0.781,225,5.633,226,5.633,228,2.49,246,1.439,247,1.997,248,3.193,249,5.017,250,3.749,251,3.749,252,4.635,253,3.124,254,2.49,255,2.467,256,3.749,257,1.861,258,3.749,259,3.749]],["title/injectables/ErrorService.html",[246,1.009,260,2.021]],["body/injectables/ErrorService.html",[3,0.271,4,0.271,9,0.271,23,0.886,24,0.729,28,0.023,30,0.569,31,0.681,32,0.307,33,0.137,41,0.681,63,0.015,64,0.018,65,0.015,84,1.268,85,0.729,86,1.064,235,1.6,246,1.661,247,2.497,260,3.326,261,3.991,262,3.991,263,4.95,264,4.686,265,4.367,266,2.691]],["title/components/HomeComponent.html",[0,0.708,49,1.069]],["body/components/HomeComponent.html",[0,1.09,1,1.112,2,1.619,3,0.2,4,0.2,5,1.502,6,1.502,7,1.502,8,1.502,9,0.2,11,1.718,12,2.515,13,1.502,14,2.999,15,2.65,16,2.064,18,2.064,20,0.467,21,1.284,22,2.708,23,1.025,24,0.738,27,0.882,28,0.022,29,1.25,30,0.339,31,0.501,32,0.226,33,0.101,34,2.954,35,1.049,36,2.064,37,2.064,38,1.502,39,2.539,40,1.502,41,0.689,42,1.502,43,1.178,44,1.502,45,1.178,46,1.502,47,1.112,48,1.502,49,1.773,50,1.502,51,1.178,52,1.502,53,1.112,54,1.502,55,1.112,56,1.502,57,1.112,58,1.502,59,1.178,60,1.411,61,1.502,62,1.502,63,0.011,64,0.015,65,0.011,186,4.969,267,2.94,268,5.419,269,4.743,270,3.452,271,3.452]],["title/interfaces/IEndpoint.html",[204,2.397,272,1.438]],["body/interfaces/IEndpoint.html",[3,0.3,4,0.3,9,0.3,28,0.022,32,0.404,63,0.016,64,0.019,65,0.016,82,1.878,85,0.807,200,3.229,204,4.473,272,2.119,273,3.229,274,3.909,275,3.909]],["title/interfaces/IKeyValue.html",[272,1.438,276,2.192]],["body/interfaces/IKeyValue.html",[3,0.29,4,0.29,9,0.29,24,0.78,28,0.023,32,0.329,63,0.016,64,0.019,65,0.016,82,2.186,272,2.049,273,3.123,275,4.551,276,3.759,277,4.27,278,5.014,279,6.035,280,5.014]],["title/interfaces/ILoggerModel.html",[272,1.438,281,2.192]],["body/interfaces/ILoggerModel.html",[3,0.183,4,0.259,9,0.183,20,0.428,28,0.023,30,0.439,32,0.293,33,0.13,41,0.816,63,0.01,64,0.014,65,0.01,71,1.438,72,1.961,77,1.686,82,2.409,85,1.004,86,1.541,90,1.686,137,3.691,139,3.041,201,2.781,255,1.294,272,1.294,273,1.971,281,3.222,282,2.387,283,4.786,284,4.786,285,4.036,286,4.786,287,4.036,288,2.387,289,3.367,290,2.387,291,1.971,292,2.696,293,2.696,294,2.696,295,2.156,296,2.696,297,2.696,298,2.696,299,2.696,300,2.387,301,2.696,302,2.156,303,2.156,304,2.156]],["title/interfaces/IModelBase.html",[272,1.438,305,2.397]],["body/interfaces/IModelBase.html",[3,0.204,4,0.204,9,0.204,20,0.476,28,0.023,32,0.315,33,0.103,41,0.894,63,0.011,64,0.015,65,0.011,70,1.748,71,1.549,72,1.932,76,2.193,77,3.282,78,3.836,79,3.836,80,3.836,82,2.399,85,0.958,86,1.543,90,3.282,95,3.289,272,1.439,273,2.193,295,2.399,302,2.399,303,3.275,304,2.399,305,3.729,306,2.655,307,2.399,308,2.999]],["title/classes/Identity.html",[33,0.103,309,1.438]],["body/classes/Identity.html",[3,0.144,4,0.144,9,0.144,20,0.336,23,0.469,24,1.064,27,0.634,28,0.022,29,0.899,30,0.244,32,0.163,33,0.073,41,0.82,63,0.008,64,0.012,65,0.008,66,2.815,67,1.322,69,2.819,70,2.803,71,1.204,72,2.164,73,3.845,74,2.547,75,3.064,76,3.119,77,2.668,78,3.119,79,3.119,80,3.119,81,3.185,82,2.5,84,1.012,85,1.058,86,0.849,90,2.668,91,5.026,92,1.871,93,1.871,94,1.871,95,2.486,96,1.871,97,1.871,98,1.871,254,1.856,309,1.528,310,2.114,311,1.73,312,4.499,313,3.739,314,4.99,315,3.739,316,2.482,317,2.482,318,2.482,319,2.482,320,2.482,321,2.482,322,2.482,323,2.482,324,2.482,325,2.482,326,2.482,327,2.482,328,2.482,329,1.871,330,2.482,331,2.114,332,4.499,333,1.322,334,2.482,335,2.482]],["title/components/IdentityComponent.html",[0,0.708,51,1.201]],["body/components/IdentityComponent.html",[0,1.1,1,1.131,2,1.638,3,0.203,4,0.203,5,1.528,6,1.528,7,1.528,8,1.528,9,0.203,11,1.738,12,2.538,13,1.528,14,3.007,15,2.657,16,2.088,18,2.088,20,0.475,21,1.299,22,2.728,23,1.034,24,0.747,27,0.897,28,0.022,29,1.272,30,0.345,31,0.51,32,0.23,33,0.103,34,2.989,35,1.067,36,2.088,37,2.088,38,1.528,39,2.557,40,1.528,41,0.697,42,1.528,43,1.199,44,1.528,45,1.199,46,1.528,47,1.131,48,1.528,49,1.067,50,1.528,51,2.006,52,1.528,53,1.131,54,1.528,55,1.131,56,1.528,57,1.131,58,1.528,59,1.199,60,1.435,61,1.528,62,1.528,63,0.011,64,0.015,65,0.011,309,2.402,336,2.991,337,5.468,338,4.799,339,3.512,340,3.512]],["title/guards/IdentityGuard.html",[182,2.021,341,2.653]],["body/guards/IdentityGuard.html",[3,0.225,4,0.225,9,0.225,11,1.405,20,0.525,21,1.389,23,0.734,24,0.799,27,0.991,28,0.023,30,0.565,31,0.564,32,0.254,33,0.113,41,0.745,63,0.012,64,0.016,65,0.012,84,1.389,85,0.799,86,1.165,95,1.926,180,1.926,182,2.948,188,5.213,235,1.325,246,1.472,309,2.098,311,1.492,333,2.735,342,2.926,343,3.305,344,2.926,345,2.216,346,3.831,347,3.881,348,5.133,349,5.213,350,5.751,351,6.12,352,3.881,353,3.305,354,1.926,355,3.881,356,3.881,357,2.926,358,2.643]],["title/modules/IdentityModule.html",[146,1.274,359,2.397]],["body/modules/IdentityModule.html",[3,0.223,4,0.223,9,0.223,28,0.023,30,0.654,31,0.558,32,0.252,33,0.112,35,1.168,51,2.227,53,2.1,57,2.1,63,0.012,64,0.016,65,0.012,146,1.392,148,1.478,149,1.908,150,3.288,151,2.048,152,2.208,153,1.908,160,2.929,161,2.208,162,2.048,164,2.717,168,2.717,218,3.177,219,2.394,359,4.775,360,3.274,361,3.274,362,3.274,363,4.062,364,3.844,365,5.101,366,2.618,367,3.844,368,3.274,369,3.274,370,3.844]],["title/guards/IdentityResolver.html",[341,2.653,371,2.653]],["body/guards/IdentityResolver.html",[3,0.227,4,0.227,9,0.227,11,1.419,20,0.53,21,1.398,23,0.741,24,0.804,27,1.001,28,0.023,30,0.604,31,0.569,32,0.257,33,0.114,41,0.75,63,0.012,64,0.016,65,0.012,84,1.398,85,0.804,86,1.173,180,1.945,235,1.338,246,1.481,257,1.945,309,2.111,311,1.506,342,2.954,344,2.954,345,2.225,346,3.84,349,5.232,353,3.337,354,1.945,371,3.895,372,3.337,373,6.143,374,3.918,375,5.165,376,3.918,377,4.357,378,4.399]],["title/modules/IdentityRoutingModule.html",[146,1.274,363,2.192]],["body/modules/IdentityRoutingModule.html",[0,1.1,3,0.248,4,0.248,9,0.248,28,0.023,30,0.624,31,0.621,32,0.28,33,0.125,53,1.76,57,1.76,63,0.013,64,0.017,65,0.013,148,1.644,153,2.122,164,2.278,168,2.912,178,3.723,179,3.753,180,2.122,184,2.122,185,5.133,194,3.641,195,3.641,196,3.641,363,3.405,368,3.641,369,3.641,379,4.275,380,4.122,381,3.224,382,4.275]],["title/injectables/IdentityService.html",[246,1.009,345,1.274]],["body/injectables/IdentityService.html",[3,0.14,4,0.14,9,0.14,20,0.328,21,0.994,23,0.458,24,0.972,27,1.358,28,0.023,29,0.877,30,0.55,31,0.352,32,0.159,33,0.071,41,0.718,63,0.014,64,0.011,65,0.008,66,2.763,71,1.182,72,2.115,82,1.33,84,1.339,85,0.931,86,1.123,95,1.823,184,1.203,235,0.827,237,1.124,246,1.053,247,1.291,252,3.62,253,2.761,254,2.201,255,1.501,257,1.203,263,3.73,265,3.343,266,1.391,309,2.712,311,1.902,329,1.827,331,2.063,333,2.362,345,1.33,357,2.768,358,1.65,383,2.063,384,4.433,385,3.776,386,4.433,387,4.433,388,4.947,389,3.672,390,3.672,391,4.947,392,3.672,393,2.423,394,2.635,395,3.672,396,4.008,397,2.423,398,3.672,399,2.423,400,3.672,401,2.423,402,2.423,403,3.672,404,2.423,405,2.423,406,3.672,407,2.423,408,2.423,409,2.063,410,2.063,411,2.423,412,3.672,413,2.423,414,2.423,415,2.423,416,2.423,417,2.423,418,3.672,419,2.423,420,2.423,421,2.423,422,2.423]],["title/classes/LoggerModel.html",[33,0.103,291,2.192]],["body/classes/LoggerModel.html",[3,0.168,4,0.312,9,0.168,20,0.391,23,0.547,24,0.999,28,0.023,30,0.412,32,0.275,33,0.158,41,0.608,63,0.009,64,0.013,65,0.009,67,1.542,71,1.349,72,2.157,77,2.623,82,2.441,84,0.783,85,1.015,86,0.657,87,1.803,90,2.232,137,3.36,139,2.853,201,1.803,255,1.183,272,1.183,281,3.36,282,2.182,283,2.465,284,2.465,285,3.675,286,2.465,287,3.675,288,2.182,289,3.159,290,2.182,291,2.609,292,4.193,293,4.193,294,4.193,295,2.853,296,2.465,297,2.465,298,2.465,299,2.465,300,2.182,301,2.465,302,1.971,303,1.971,304,1.971,307,1.971,423,4.189,424,2.894,425,2.894,426,2.894,427,2.894,428,2.894,429,2.894,430,2.894]],["title/injectables/LoggerService.html",[246,1.009,431,2.021]],["body/injectables/LoggerService.html",[3,0.16,4,0.16,9,0.16,20,0.373,21,1.094,23,0.521,24,0.943,27,1.223,28,0.023,29,1.734,30,0.552,31,0.4,32,0.181,33,0.081,41,0.695,63,0.009,64,0.013,65,0.009,71,1.302,72,1.928,82,1.734,84,1.296,85,0.913,86,1.087,87,1.717,198,2.618,235,0.941,237,1.28,246,1.16,247,1.469,252,2.754,253,2.982,254,2.787,255,1.652,257,1.369,276,3.497,281,3.284,285,2.754,291,2.518,307,1.878,311,2.44,431,2.322,432,2.348,433,5.868,434,4.787,435,4.043,436,4.043,437,5.273,438,1.878,439,4.043,440,2.518,441,4.043,442,2.757,443,4.043,444,2.757,445,2.757,446,2.757,447,2.757,448,1.717,449,2.348,450,2.757,451,2.757,452,4.043,453,2.348,454,4.043,455,2.757,456,2.757,457,2.757,458,2.757,459,2.757,460,2.757,461,2.079,462,2.757,463,2.757,464,2.757,465,2.757,466,2.757,467,2.757,468,2.757]],["title/components/LoginComponent.html",[0,0.708,53,1.133]],["body/components/LoginComponent.html",[0,0.961,1,0.884,2,1.376,3,0.159,4,0.159,5,1.194,6,1.194,7,1.194,8,1.194,9,0.159,11,1.459,12,2.216,13,1.194,14,2.875,15,2.541,16,1.753,18,1.753,20,0.371,21,1.091,22,2.442,23,0.519,24,0.819,27,1.029,28,0.022,29,1.459,30,0.517,31,0.399,32,0.18,33,0.08,35,0.834,36,1.753,37,1.753,38,1.194,39,2.289,40,1.194,41,0.693,42,1.194,43,0.937,44,1.194,45,0.937,46,1.194,47,0.884,48,1.194,49,0.834,50,1.194,51,0.937,52,1.194,53,1.694,54,1.194,55,0.884,56,1.194,57,0.884,58,1.194,59,0.937,60,1.122,61,1.194,62,1.194,63,0.013,64,0.013,65,0.009,66,1.753,71,1.298,72,1.78,74,3.252,75,3.252,84,0.743,85,0.627,86,0.623,180,1.362,235,0.937,237,1.274,255,1.951,311,1.055,345,1.905,346,3.477,354,1.362,366,1.869,380,4.683,381,3.038,461,2.069,469,2.338,470,4.775,471,4.03,472,4.775,473,2.338,474,4.03,475,2.745,476,2.745,477,4.481,478,4.067,479,2.338,480,2.745,481,3.432,482,2.745,483,2.745,484,3.038,485,2.338,486,3.432,487,3.432,488,3.432]],["title/classes/ModelBase.html",[33,0.103,70,1.747]],["body/classes/ModelBase.html",[3,0.192,4,0.192,9,0.192,20,0.448,23,0.626,24,0.996,28,0.023,32,0.302,33,0.097,41,0.875,63,0.01,64,0.014,65,0.01,67,1.764,70,2.288,71,1.484,72,2.149,76,3.302,77,3.054,78,3.57,79,3.57,80,3.57,82,2.259,84,0.896,85,0.996,86,0.752,87,2.062,90,3.21,95,3.097,272,1.353,295,3.139,302,2.255,303,3.139,304,2.255,305,3.904,306,2.497,307,3.139,308,2.82,489,4.609,490,3.311,491,3.311,492,3.311,493,3.311,494,3.311]],["title/components/NavigationComponent.html",[0,0.708,55,1.133]],["body/components/NavigationComponent.html",[0,0.881,1,0.765,2,1.235,3,0.138,4,0.138,5,1.034,6,1.034,7,1.034,8,1.034,9,0.138,11,1.31,12,2.033,13,1.034,14,2.788,15,2.464,16,1.574,18,1.574,20,0.321,21,0.979,22,2.273,23,0.449,24,0.762,27,0.924,28,0.023,29,1.31,30,0.518,31,0.345,32,0.156,33,0.069,35,0.722,36,1.574,37,1.574,38,1.034,39,2.131,40,1.034,41,0.636,42,1.034,43,0.811,44,1.034,45,0.811,46,1.034,47,0.765,48,1.034,49,0.722,50,1.034,51,0.811,52,1.034,53,0.765,54,1.034,55,1.577,56,1.034,57,0.765,58,1.034,59,0.811,60,0.971,61,1.034,62,1.034,63,0.014,64,0.011,65,0.007,66,2.416,71,1.165,72,1.687,84,0.643,85,0.563,86,0.539,111,2.023,116,3.731,117,4.728,119,2.023,120,3.081,122,2.023,129,2.023,131,3.081,133,2.023,134,2.023,136,3.731,137,2.728,138,3.731,142,2.023,143,1.791,144,3.081,222,3.731,228,2.431,234,1.791,235,0.811,237,1.103,309,1.478,311,0.913,329,1.791,344,1.791,345,1.773,354,1.179,495,2.023,496,4.38,497,4.38,498,3.617,499,4.897,500,3.617,501,2.375,502,2.375,503,2.375,504,2.375,505,3.617,506,2.375,507,2.375,508,2.375,509,3.617,510,3.617,511,3.617,512,3.617,513,2.375,514,3.617,515,3.617,516,2.375,517,2.375,518,2.375,519,3.617,520,5.552,521,2.375,522,2.023,523,2.375,524,3.617,525,2.375,526,2.375,527,2.375,528,2.023,529,2.375,530,3.617,531,3.617,532,2.375,533,2.375,534,2.375,535,2.375,536,2.375]],["title/injectables/NetworkService.html",[246,1.009,537,2.653]],["body/injectables/NetworkService.html",[3,0.271,4,0.271,9,0.271,23,0.886,24,0.729,28,0.023,30,0.569,31,0.681,32,0.307,33,0.137,41,0.681,63,0.015,64,0.018,65,0.015,84,1.268,85,0.729,86,1.064,235,1.6,246,1.661,247,2.497,262,3.991,263,4.95,265,4.367,266,2.691,537,4.367,538,3.991,539,4.686]],["title/classes/Profile.html",[33,0.103,540,2.653]],["body/classes/Profile.html",[3,0.191,4,0.191,9,0.191,20,0.446,23,1.001,24,1.055,28,0.022,30,0.325,32,0.216,33,0.096,41,0.668,63,0.01,64,0.014,65,0.01,67,1.759,69,3.469,70,3.289,71,1.481,72,2.185,73,3.605,76,2.865,77,2.451,78,2.865,79,2.865,80,2.865,82,2.43,85,1.044,90,2.451,91,4.7,92,2.49,93,2.49,94,2.49,95,2.284,96,2.49,97,2.49,98,2.49,99,2.49,100,2.813,540,3.469,541,2.813,542,5.293,543,5.293,544,5.293,545,4.6,546,3.302,547,3.302,548,3.302]],["title/components/RegisterComponent.html",[0,0.708,57,1.133]],["body/components/RegisterComponent.html",[0,0.952,1,0.87,2,1.36,3,0.156,4,0.156,5,1.176,6,1.176,7,1.176,8,1.176,9,0.156,11,1.443,12,2.196,13,1.176,14,2.866,15,2.533,16,1.733,18,1.733,20,0.365,21,1.078,22,2.424,23,0.511,24,0.813,27,1.017,28,0.022,29,1.443,30,0.513,31,0.392,32,0.177,33,0.079,35,0.821,36,1.733,37,1.733,38,1.176,39,2.272,40,1.176,41,0.687,42,1.176,43,0.922,44,1.176,45,0.922,46,1.176,47,0.87,48,1.176,49,0.821,50,1.176,51,0.922,52,1.176,53,0.87,54,1.176,55,0.87,56,1.176,57,1.682,58,1.176,59,0.922,60,1.104,61,1.176,62,1.176,63,0.012,64,0.012,65,0.008,66,1.733,71,1.283,72,1.77,73,3.223,74,3.223,75,3.223,84,0.731,85,0.62,86,0.613,180,1.341,235,0.922,237,1.254,255,2.134,311,1.039,345,1.891,346,3.46,354,1.341,366,1.84,380,3.004,381,4.662,461,2.037,473,2.301,477,4.448,478,4.448,479,2.301,481,4.03,484,3.004,485,2.301,486,3.393,487,3.393,488,3.393,549,2.301,550,4.732,551,3.984,552,4.732,553,3.984,554,2.702,555,2.702,556,2.702,557,2.702,558,2.702,559,2.702]],["title/interceptors/RequestInterceptor.html",[560,2.653,561,2.397]],["body/interceptors/RequestInterceptor.html",[3,0.208,4,0.208,9,0.208,11,1.302,20,0.486,21,1.32,23,0.68,24,0.759,27,0.918,28,0.023,30,0.61,31,0.522,32,0.236,33,0.105,41,0.708,63,0.011,64,0.015,65,0.011,84,1.32,85,0.861,86,1.107,184,1.784,198,2.946,235,1.227,237,2.569,246,1.398,255,1.469,257,1.784,266,2.064,309,2.262,311,1.382,333,1.915,345,2.149,354,1.784,377,4.173,438,2.448,440,3.037,448,2.239,561,3.321,562,3.061,563,3.061,564,4.153,565,3.594,566,4.153,567,5.054,568,5.054,569,3.594,570,3.061,571,3.061,572,3.594,573,4.153,574,3.594,575,3.594,576,3.594,577,3.594,578,3.594,579,3.594,580,3.594,581,3.594,582,3.594,583,3.594]],["title/components/ScheduleComponent.html",[0,0.708,59,1.201]],["body/components/ScheduleComponent.html",[0,1.1,1,1.131,2,1.638,3,0.203,4,0.203,5,1.528,6,1.528,7,1.528,8,1.528,9,0.203,11,1.738,12,2.538,13,1.528,14,3.007,15,2.657,16,2.088,18,2.088,20,0.475,21,1.299,22,2.728,23,1.034,24,0.747,27,0.897,28,0.022,29,1.272,30,0.345,31,0.51,32,0.23,33,0.103,34,2.989,35,1.067,36,2.088,37,2.088,38,1.528,39,2.557,40,1.528,41,0.697,42,1.528,43,1.199,44,1.528,45,1.199,46,1.528,47,1.131,48,1.528,49,1.067,50,1.528,51,1.199,52,1.528,53,1.131,54,1.528,55,1.131,56,1.528,57,1.131,58,1.528,59,2.006,60,2.515,61,1.528,62,1.528,63,0.011,64,0.015,65,0.011,584,2.991,585,5.468,586,4.799,587,3.512,588,3.512]],["title/modules/ScheduleModule.html",[146,1.274,589,2.397]],["body/modules/ScheduleModule.html",[3,0.259,4,0.259,9,0.259,28,0.022,30,0.605,31,0.651,32,0.294,33,0.131,35,1.361,59,2.32,63,0.014,64,0.017,65,0.014,146,1.622,148,1.722,149,2.224,150,3.537,151,2.387,152,2.573,153,2.224,160,3.234,161,2.573,162,2.387,164,2.387,168,3,218,3.507,219,2.79,589,4.628,590,3.815,591,3.815,592,4.48,593,4.48]],["title/modules/SharedModule.html",[146,1.274,159,2.192]],["body/modules/SharedModule.html",[1,1.987,2,1.408,3,0.125,4,0.125,9,0.125,21,0.584,24,0.336,27,0.551,28,0.023,30,0.654,31,0.313,32,0.141,33,0.063,35,0.655,41,0.313,47,1.987,49,1.875,55,1.987,63,0.007,64,0.01,65,0.007,84,0.584,85,0.336,86,0.49,137,1.343,146,0.781,148,1.789,149,1.071,150,2.368,151,1.149,152,2.673,153,2.047,159,4.318,160,1.929,161,1.239,162,1.149,164,1.149,168,2.197,178,2.287,180,1.071,181,1.837,182,1.929,183,1.837,184,2.047,198,2.504,218,2.091,219,1.343,228,2.651,234,1.626,235,0.736,237,1.001,254,2.047,260,3.067,266,1.239,285,1.469,287,1.469,288,1.626,311,0.829,333,1.149,345,1.934,346,2.368,354,1.071,358,2.287,394,2.845,410,1.837,431,3.202,440,2.091,448,1.343,561,2.287,594,1.837,595,1.837,596,1.837,597,1.837,598,1.626,599,3.358,600,2.157,601,3.358,602,2.157,603,4.123,604,4.123,605,2.86,606,2.157,607,2.157,608,2.157,609,2.157,610,2.157,611,2.157,612,2.287,613,2.157,614,1.837,615,3.109,616,2.157,617,2.157,618,2.157,619,2.157,620,4.123,621,2.157,622,3.358,623,3.358]],["title/injectables/StorageService.html",[246,1.009,394,1.875]],["body/injectables/StorageService.html",[3,0.128,4,0.128,9,0.128,20,0.567,21,0.928,23,0.419,24,0.876,27,1.206,28,0.023,30,0.502,31,0.322,32,0.145,33,0.065,41,0.742,63,0.007,64,0.011,65,0.007,70,1.1,71,1.104,72,1.815,82,2.284,84,1.617,85,0.966,86,1.159,87,1.38,99,1.671,139,1.509,184,2.344,198,2.344,235,0.756,246,0.983,247,1.18,252,3.478,253,2.136,254,2.344,255,1.401,257,1.1,275,3.56,276,3.507,311,2.296,333,3,378,4.599,385,4.599,394,1.827,396,2.585,438,1.509,440,2.136,448,1.38,449,1.887,453,1.887,624,1.887,625,5.4,626,3.429,627,3.429,628,3.429,629,3.429,630,3.429,631,2.216,632,2.216,633,6.461,634,2.216,635,2.216,636,2.216,637,5.818,638,2.216,639,2.216,640,2.216,641,2.216,642,2.216,643,4.194,644,2.216,645,2.216,646,2.216,647,2.216,648,2.216,649,2.216,650,2.216,651,3.429,652,3.429,653,2.216,654,2.216,655,2.216,656,2.216,657,2.216,658,2.216,659,3.429,660,2.216,661,2.216,662,2.216,663,2.216,664,2.216,665,2.216,666,3.429,667,2.216,668,4.194,669,2.216,670,2.216,671,2.216,672,2.216,673,2.216]],["title/interceptors/TokenInterceptor.html",[560,2.653,612,2.397]],["body/interceptors/TokenInterceptor.html",[3,0.195,4,0.195,9,0.195,11,1.222,20,0.456,21,1.264,23,0.638,24,0.727,27,0.862,28,0.023,30,0.632,31,0.49,32,0.221,33,0.099,41,0.678,63,0.01,64,0.015,65,0.01,84,1.264,85,0.727,86,1.06,184,2.659,198,2.869,235,1.152,237,2.486,246,1.34,257,1.676,266,1.939,309,2.362,311,1.298,314,3.978,333,1.798,345,2.093,354,1.676,377,4.038,409,2.875,438,2.299,440,2.909,448,2.102,562,2.875,564,3.978,566,3.978,567,4.922,568,4.922,570,2.875,571,2.875,573,3.978,612,3.181,674,2.875,675,3.375,676,3.375,677,3.375,678,3.375,679,4.671,680,2.875,681,3.375,682,3.375,683,3.375,684,3.375,685,3.375,686,3.375,687,3.375,688,3.375,689,3.375,690,3.375,691,3.375,692,3.375]],["title/coverage.html",[693,4.093]],["body/coverage.html",[0,1.287,1,0.857,2,0.908,9,0.154,10,2.266,28,0.023,33,0.169,43,0.908,45,0.908,47,0.857,49,0.809,51,0.908,53,0.857,55,0.857,57,0.857,59,0.908,63,0.008,64,0.012,65,0.008,66,1.158,68,2.266,70,1.321,85,0.414,104,2.266,148,1.023,172,2.682,182,1.528,198,1.321,199,2.266,200,2.453,204,1.812,208,2.266,221,2.266,228,1.321,246,1.662,248,2.266,255,1.087,260,1.528,261,2.266,267,2.266,272,2.118,274,2.006,276,1.657,277,2.266,281,1.657,282,2.97,291,1.657,300,5.456,305,1.812,306,2.97,309,1.087,310,2.266,336,2.266,341,2.97,343,2.266,345,0.964,371,2.006,372,2.266,383,2.266,394,1.418,431,1.528,432,2.266,469,2.266,495,2.266,537,2.006,538,2.266,540,2.006,541,2.266,549,2.266,560,2.97,561,1.812,563,2.266,584,2.266,598,3.536,612,1.812,615,2.006,624,2.266,674,2.266,693,2.266,694,2.661,695,2.661,696,2.661,697,5.183,698,6.396,699,6.567,700,2.661,701,2.661,702,3.939,703,4.689,704,3.939,705,2.661,706,2.661,707,3.939,708,6.287,709,3.354,710,3.354,711,3.354,712,2.006,713,2.266,714,2.661,715,2.661]],["title/dependencies.html",[149,2.102,716,2.937]],["body/dependencies.html",[28,0.023,31,0.658,63,0.014,64,0.018,65,0.014,149,2.249,151,2.413,166,4.829,167,4.275,180,2.249,219,2.821,257,2.249,289,3.415,290,3.415,366,3.085,522,3.858,717,4.53,718,5.954,719,4.53,720,4.53,721,4.53,722,4.53,723,4.53,724,4.53,725,4.53,726,4.53,727,4.53,728,4.53,729,4.53,730,4.53,731,4.53,732,4.53,733,4.53]],["title/miscellaneous/enumerations.html",[734,1.687,735,3.605]],["body/miscellaneous/enumerations.html",[3,0.314,20,0.572,28,0.022,63,0.013,64,0.017,65,0.013,66,2.363,206,4.625,254,3.561,287,3.698,309,2.219,346,3.119,396,4.094,484,4.771,712,4.094,734,2.43,735,3.603,736,4.231,737,5.43,738,4.231,739,4.231,740,4.231,741,4.231,742,4.231,743,5.43,744,5.43,745,4.231,746,5.43,747,5.43,748,5.43,749,4.231,750,4.625]],["title/index.html",[20,0.397,680,2.501,751,2.937]],["body/index.html",[0,1.165,4,0.228,15,1.511,28,0.016,41,0.571,63,0.012,64,0.016,65,0.012,162,2.094,207,2.964,255,1.606,528,5.239,718,3.348,750,4.409,752,3.931,753,5.176,754,3.931,755,5.788,756,5.788,757,3.931,758,3.931,759,6.392,760,6.691,761,3.931,762,3.931,763,3.931,764,3.931,765,3.931,766,3.931,767,3.931,768,3.931,769,3.931,770,3.931,771,5.788,772,5.788,773,3.931,774,6.392,775,3.931,776,3.931,777,3.931,778,3.931,779,3.931,780,3.931,781,5.176,782,5.176,783,6.151,784,3.931,785,5.176,786,5.176,787,3.931,788,3.931,789,3.931,790,3.931,791,5.788,792,3.931,793,3.931,794,3.931,795,2.964,796,3.931,797,3.931,798,3.931]],["title/modules.html",[148,1.848]],["body/modules.html",[28,0.018,63,0.015,64,0.018,65,0.015,147,3.333,148,1.881,158,3.048,159,3.048,167,5.149,214,3.333,359,3.333,363,3.048,589,3.333,799,6.829,800,6.829,801,7.027,802,5.947,803,5.947]],["title/overview.html",[795,3.624]],["body/overview.html",[1,2.01,2,1.035,28,0.022,35,0.921,43,2.131,45,1.725,47,2.01,49,1.897,51,1.725,53,1.627,55,2.01,57,1.627,59,1.725,63,0.009,64,0.013,65,0.009,67,1.615,143,3.265,146,1.098,147,4.424,148,1.165,149,1.505,150,1.741,151,1.615,152,1.741,153,1.505,154,2.582,155,2.582,156,2.582,157,2.582,158,3.147,159,4.453,160,2.487,161,1.741,162,1.615,179,1.888,214,3.754,215,2.582,216,2.582,228,2.508,247,1.615,260,2.902,273,1.888,342,2.286,345,1.83,359,4.488,360,2.582,361,2.582,362,2.582,363,3.147,394,2.692,431,2.902,589,3.754,590,2.582,591,2.582,594,2.582,595,2.582,596,2.582,597,2.582,795,2.286,804,3.031,805,4.33,806,3.031,807,3.031]],["title/routes.html",[179,2.993]],["body/routes.html",[28,0.02,63,0.018,64,0.02,65,0.018,179,3.513]],["title/miscellaneous/typealiases.html",[734,1.687,808,4.233]],["body/miscellaneous/typealiases.html",[20,0.732,28,0.02,63,0.017,64,0.02,65,0.017,85,0.983,200,3.934,201,3.373,274,4.083,734,3.11,809,5.415,810,5.415]],["title/miscellaneous/variables.html",[734,1.687,811,3.605]],["body/miscellaneous/variables.html",[1,1.144,2,1.651,20,0.48,28,0.023,47,1.144,49,1.08,55,1.144,63,0.011,64,0.015,65,0.011,85,1.047,148,1.86,172,4.022,178,2.42,182,2.04,200,4.239,201,2.213,207,3.648,218,2.213,228,1.764,253,4.134,254,3.295,260,2.04,345,1.287,357,2.679,358,3.295,394,1.893,431,2.04,598,2.679,605,3.026,614,3.026,615,3.648,709,3.026,710,3.026,711,3.026,712,3.648,713,4.12,734,2.04,811,3.026,812,5.501,813,4.837,814,4.837,815,4.837,816,3.553,817,3.553,818,4.837,819,4.837]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":300,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"coverage.html":{}}}],["0.10.2",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":517,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1",{"_index":659,"title":{},"body":{"injectables/StorageService.html":{}}}],["1.1.0",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{},"overview.html":{}}}],["100vh",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["100vw",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["11.0.0",{"_index":718,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2",{"_index":806,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":524,"title":{},"body":{"components/NavigationComponent.html":{}}}],["250px",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["3.5.1",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":518,"title":{},"body":{"components/NavigationComponent.html":{}}}],["4",{"_index":807,"title":{},"body":{"overview.html":{}}}],["4.5.0",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["50px",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["5px",{"_index":536,"title":{},"body":{"components/NavigationComponent.html":{}}}],["6",{"_index":805,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":804,"title":{},"body":{"overview.html":{}}}],["_token",{"_index":312,"title":{},"body":{"classes/Identity.html":{}}}],["about'},{'name",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":313,"title":{},"body":{"classes/Identity.html":{}}}],["account",{"_index":66,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"modules/AppRoutingModule.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["account:11",{"_index":321,"title":{},"body":{"classes/Identity.html":{}}}],["account:12",{"_index":319,"title":{},"body":{"classes/Identity.html":{}}}],["account:13",{"_index":320,"title":{},"body":{"classes/Identity.html":{}}}],["account:14",{"_index":322,"title":{},"body":{"classes/Identity.html":{}}}],["account:15",{"_index":323,"title":{},"body":{"classes/Identity.html":{}}}],["account:16",{"_index":324,"title":{},"body":{"classes/Identity.html":{}}}],["account:4",{"_index":318,"title":{},"body":{"classes/Identity.html":{}}}],["account:5",{"_index":317,"title":{},"body":{"classes/Identity.html":{}}}],["account:6",{"_index":316,"title":{},"body":{"classes/Identity.html":{}}}],["action",{"_index":529,"title":{},"body":{"components/NavigationComponent.html":{}}}],["action:hover",{"_index":532,"title":{},"body":{"components/NavigationComponent.html":{}}}],["actions",{"_index":525,"title":{},"body":{"components/NavigationComponent.html":{}}}],["activatedroutesnapshot",{"_index":349,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{}}}],["actual_component",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["aliases",{"_index":809,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["amount",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["angular",{"_index":755,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":219,"title":{},"body":{"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":266,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/NetworkService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["angular/compiler",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":366,"title":{},"body":{"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["api",{"_index":511,"title":{},"body":{"components/NavigationComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"index.html":{}}}],["app.component",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":43,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append('content",{"_index":581,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["application/json",{"_index":582,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["appmodule",{"_index":147,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointment",{"_index":209,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointment'},{'name",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["appointment.component",{"_index":220,"title":{},"body":{"modules/AppointmentModule.html":{}}}],["appointment.component.html",{"_index":211,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointment.component.scss",{"_index":210,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointmentcomponent",{"_index":45,"title":{"components/AppointmentComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appointmentmodule",{"_index":214,"title":{"modules/AppointmentModule.html":{}},"body":{"modules/AppointmentModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":158,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":198,"title":{"classes/AppSettings.html":{}},"body":{"classes/AppSettings.html":{},"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["args",{"_index":307,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{}}}],["args[key",{"_index":304,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["array",{"_index":453,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/StorageService.html":{}}}],["artifacts",{"_index":775,"title":{},"body":{"index.html":{}}}],["async",{"_index":387,"title":{},"body":{"injectables/IdentityService.html":{}}}],["authentication",{"_index":746,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authorization",{"_index":578,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authreq",{"_index":574,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authstate",{"_index":384,"title":{},"body":{"injectables/IdentityService.html":{}}}],["auto",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["automatically",{"_index":765,"title":{},"body":{"index.html":{}}}],["available",{"_index":803,"title":{},"body":{"modules.html":{}}}],["await",{"_index":651,"title":{},"body":{"injectables/StorageService.html":{}}}],["awesome",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["baseurl",{"_index":386,"title":{},"body":{"injectables/IdentityService.html":{}}}],["bearer",{"_index":579,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["between",{"_index":526,"title":{},"body":{"components/NavigationComponent.html":{}}}],["bg",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["block",{"_index":243,"title":{},"body":{"components/DialogComponent.html":{}}}],["boolean",{"_index":95,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["bootstrap",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brand",{"_index":521,"title":{},"body":{"components/NavigationComponent.html":{}}}],["browse",{"_index":801,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":534,"title":{},"body":{"components/NavigationComponent.html":{}}}],["build",{"_index":774,"title":{},"body":{"index.html":{}}}],["caller",{"_index":294,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["canactivate",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/IdentityGuard.html":{}}}],["canactivate(route",{"_index":348,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["center",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["change",{"_index":767,"title":{},"body":{"index.html":{}}}],["check",{"_index":794,"title":{},"body":{"index.html":{}}}],["checkidentity",{"_index":388,"title":{},"body":{"injectables/IdentityService.html":{}}}],["class",{"_index":33,"title":{"classes/Account.html":{},"classes/AppSettings.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["classes",{"_index":67,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"overview.html":{}}}],["cli",{"_index":756,"title":{},"body":{"index.html":{}}}],["click",{"_index":487,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["client",{"_index":752,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appointmentmodule",{"_index":215,"title":{},"body":{"modules/AppointmentModule.html":{},"overview.html":{}}}],["cluster_appointmentmodule_declarations",{"_index":216,"title":{},"body":{"modules/AppointmentModule.html":{},"overview.html":{}}}],["cluster_identitymodule",{"_index":360,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_identitymodule_declarations",{"_index":362,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_identitymodule_imports",{"_index":361,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_schedulemodule",{"_index":590,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_schedulemodule_declarations",{"_index":591,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":594,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":596,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":597,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":595,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":769,"title":{},"body":{"index.html":{}}}],["collection",{"_index":625,"title":{},"body":{"injectables/StorageService.html":{}}}],["color",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["column",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":796,"title":{},"body":{"index.html":{}}}],["common/shared.module",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":218,"title":{},"body":{"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:homecomponent",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["components/dialog/dialog.component",{"_index":606,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/navigation/navigation.component",{"_index":607,"title":{},"body":{"modules/SharedModule.html":{}}}],["config",{"_index":440,"title":{},"body":{"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["console.clear",{"_index":464,"title":{},"body":{"injectables/LoggerService.html":{}}}],["console.groupcollapsed(`%c",{"_index":466,"title":{},"body":{"injectables/LoggerService.html":{}}}],["console.log(error",{"_index":485,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(result",{"_index":504,"title":{},"body":{"components/NavigationComponent.html":{}}}],["console.log(this.account",{"_index":506,"title":{},"body":{"components/NavigationComponent.html":{}}}],["const",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DialogComponent.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(account",{"_index":473,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(args",{"_index":295,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["constructor(config",{"_index":438,"title":{},"body":{"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(http",{"_index":262,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/NetworkService.html":{}}}],["constructor(identity",{"_index":344,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/NavigationComponent.html":{}}}],["constructor(private",{"_index":235,"title":{},"body":{"components/DialogComponent.html":{},"injectables/ErrorService.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(service",{"_index":227,"title":{},"body":{"components/DialogComponent.html":{}}}],["constructor(storage",{"_index":393,"title":{},"body":{"injectables/IdentityService.html":{}}}],["constructor(username",{"_index":81,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{}}}],["content",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["context",{"_index":712,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":693,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":76,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["createdat",{"_index":293,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["current",{"_index":661,"title":{},"body":{"injectables/StorageService.html":{}}}],["current.name",{"_index":658,"title":{},"body":{"injectables/StorageService.html":{}}}],["current?.id",{"_index":656,"title":{},"body":{"injectables/StorageService.html":{}}}],["darken($color",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["date().valueof",{"_index":297,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["date.now",{"_index":681,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["debug",{"_index":743,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["default",{"_index":253,"title":{},"body":{"injectables/DialogService.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IKeyValue.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["dependencies",{"_index":149,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":77,"title":{},"body":{"classes/Account.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["descriptor",{"_index":283,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["dev",{"_index":762,"title":{},"body":{"index.html":{}}}],["development",{"_index":758,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":222,"title":{},"body":{"components/DialogComponent.html":{},"components/NavigationComponent.html":{}}}],["dialog'},{'name",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["dialog.component.html",{"_index":224,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialog.component.scss",{"_index":223,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialog.style.display",{"_index":242,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialogcomponent",{"_index":47,"title":{"components/DialogComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dialogservice",{"_index":228,"title":{"injectables/DialogService.html":{}},"body":{"components/DialogComponent.html":{},"injectables/DialogService.html":{},"components/NavigationComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["direction",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["directives",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":773,"title":{},"body":{"index.html":{}}}],["directory",{"_index":778,"title":{},"body":{"index.html":{}}}],["display",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["dist",{"_index":777,"title":{},"body":{"index.html":{}}}],["docs",{"_index":512,"title":{},"body":{"components/NavigationComponent.html":{}}}],["document.getelementbyid(\"dialog",{"_index":241,"title":{},"body":{"components/DialogComponent.html":{}}}],["documentation",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["dynamic",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":788,"title":{},"body":{"index.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["email",{"_index":73,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{}}}],["end",{"_index":528,"title":{},"body":{"components/NavigationComponent.html":{},"index.html":{}}}],["endpoints",{"_index":200,"title":{},"body":{"classes/AppSettings.html":{},"interfaces/IEndpoint.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":735,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/log.scope.enum",{"_index":288,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"modules/SharedModule.html":{}}}],["env",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["env/environment",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":484,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["errorservice",{"_index":260,"title":{"injectables/ErrorService.html":{}},"body":{"injectables/ErrorService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["evenly",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["event",{"_index":684,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["event.body",{"_index":689,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["event.headers.get('authorization').replace('bearer",{"_index":687,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["event.headers.has('authorization",{"_index":686,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["execute",{"_index":785,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["exports",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["extends",{"_index":69,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["false",{"_index":357,"title":{},"body":{"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["files",{"_index":768,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":542,"title":{},"body":{"classes/Profile.html":{}}}],["flag",{"_index":780,"title":{},"body":{"index.html":{}}}],["flex",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["font",{"_index":522,"title":{},"body":{"components/NavigationComponent.html":{},"dependencies.html":{}}}],["forchild",{"_index":614,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["foreach(key",{"_index":302,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["formcontrol",{"_index":478,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":477,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["forroot",{"_index":600,"title":{},"body":{"modules/SharedModule.html":{}}}],["forroot(config",{"_index":601,"title":{},"body":{"modules/SharedModule.html":{}}}],["fsevents",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["further",{"_index":790,"title":{},"body":{"index.html":{}}}],["generate",{"_index":771,"title":{},"body":{"index.html":{}}}],["generated",{"_index":754,"title":{},"body":{"index.html":{}}}],["getcollection",{"_index":626,"title":{},"body":{"injectables/StorageService.html":{}}}],["getcollection$(key",{"_index":631,"title":{},"body":{"injectables/StorageService.html":{}}}],["getcollection$>(key",{"_index":667,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstorage",{"_index":627,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstorage(key",{"_index":634,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstorage>(key",{"_index":642,"title":{},"body":{"injectables/StorageService.html":{}}}],["getting",{"_index":751,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":325,"title":{},"body":{"classes/Identity.html":{}}}],["go",{"_index":793,"title":{},"body":{"index.html":{}}}],["graph",{"_index":802,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":341,"title":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":342,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"overview.html":{}}}],["guid",{"_index":289,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"dependencies.html":{}}}],["guid.newguid().tostring().split",{"_index":299,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["headers",{"_index":576,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["height",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["help",{"_index":791,"title":{},"body":{"index.html":{}}}],["helpers/app.settings",{"_index":448,"title":{},"body":{"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["helpers/endpoint.interface",{"_index":205,"title":{},"body":{"classes/AppSettings.html":{}}}],["helpers/key.value",{"_index":449,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/StorageService.html":{}}}],["helpers/logger.model",{"_index":450,"title":{},"body":{"injectables/LoggerService.html":{}}}],["here",{"_index":488,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["hidden",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["hidedialog",{"_index":225,"title":{},"body":{"components/DialogComponent.html":{},"injectables/DialogService.html":{}}}],["home",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["home.component.html",{"_index":269,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":268,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":49,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["hover",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["http",{"_index":265,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/NetworkService.html":{}}}],["http://localhost:4200",{"_index":764,"title":{},"body":{"index.html":{}}}],["http://localhost:5000",{"_index":406,"title":{},"body":{"injectables/IdentityService.html":{}}}],["http_interceptors",{"_index":604,"title":{},"body":{"modules/SharedModule.html":{}}}],["httpclient",{"_index":263,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/NetworkService.html":{}}}],["httpclientmodule",{"_index":605,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httpevent",{"_index":571,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":568,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpheaders",{"_index":572,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["httpheaders(this.identity.identity?.token",{"_index":577,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["httpinterceptor",{"_index":573,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httprequest",{"_index":567,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpresponse",{"_index":679,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["id",{"_index":78,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["identifier",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":309,"title":{"classes/Identity.html":{}},"body":{"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"components/NavigationComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["identity'},{'name",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["identity(user.username",{"_index":691,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["identity.component",{"_index":370,"title":{},"body":{"modules/IdentityModule.html":{}}}],["identity.component.html",{"_index":338,"title":{},"body":{"components/IdentityComponent.html":{}}}],["identity.component.scss",{"_index":337,"title":{},"body":{"components/IdentityComponent.html":{}}}],["identity/identity.routing.module",{"_index":367,"title":{},"body":{"modules/IdentityModule.html":{}}}],["identity/login/login.component",{"_index":368,"title":{},"body":{"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["identity/register/register.component",{"_index":369,"title":{},"body":{"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["identitycomponent",{"_index":51,"title":{"components/IdentityComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["identityguard",{"_index":182,"title":{"guards/IdentityGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/IdentityGuard.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identitymodule",{"_index":359,"title":{"modules/IdentityModule.html":{}},"body":{"modules/IdentityModule.html":{},"modules.html":{},"overview.html":{}}}],["identityresolver",{"_index":371,"title":{"guards/IdentityResolver.html":{}},"body":{"guards/IdentityResolver.html":{},"coverage.html":{}}}],["identityroutingmodule",{"_index":363,"title":{"modules/IdentityRoutingModule.html":{}},"body":{"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["identityservice",{"_index":345,"title":{"injectables/IdentityService.html":{}},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["iendpoint",{"_index":204,"title":{"interfaces/IEndpoint.html":{}},"body":{"classes/AppSettings.html":{},"interfaces/IEndpoint.html":{},"coverage.html":{}}}],["ikeyvalue",{"_index":276,"title":{"interfaces/IKeyValue.html":{}},"body":{"interfaces/IKeyValue.html":{},"injectables/LoggerService.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["iloggermodel",{"_index":281,"title":{"interfaces/ILoggerModel.html":{}},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["imodelbase",{"_index":305,"title":{"interfaces/IModelBase.html":{}},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["import('./identity/identity.module').then(m",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./schedule/schedule.module').then(m",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":278,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["inherited",{"_index":91,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["initialize",{"_index":435,"title":{},"body":{"injectables/LoggerService.html":{}}}],["initialize(scope",{"_index":441,"title":{},"body":{"injectables/LoggerService.html":{}}}],["injectable",{"_index":246,"title":{"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/NetworkService.html":{},"injectables/StorageService.html":{}},"body":{"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/NetworkService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":247,"title":{},"body":{"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/NetworkService.html":{},"injectables/StorageService.html":{},"overview.html":{}}}],["instanceof",{"_index":685,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercept",{"_index":564,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["intercept(req",{"_index":566,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":560,"title":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":562,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interface",{"_index":272,"title":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{}},"body":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["interfaces",{"_index":273,"title":{},"body":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"overview.html":{}}}],["isactive",{"_index":79,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["isdefault",{"_index":80,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["item",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/StorageService.html":{}}}],["item?.id",{"_index":655,"title":{},"body":{"injectables/StorageService.html":{}}}],["item?.name",{"_index":657,"title":{},"body":{"injectables/StorageService.html":{}}}],["item[key",{"_index":648,"title":{},"body":{"injectables/StorageService.html":{}}}],["items",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"components/NavigationComponent.html":{},"modules/SharedModule.html":{}}}],["jquery",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('identity",{"_index":417,"title":{},"body":{"injectables/IdentityService.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":644,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(identity",{"_index":421,"title":{},"body":{"injectables/IdentityService.html":{}}}],["json.stringify(storage",{"_index":673,"title":{},"body":{"injectables/StorageService.html":{}}}],["justify",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["karma",{"_index":787,"title":{},"body":{"index.html":{}}}],["key",{"_index":275,"title":{},"body":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"injectables/StorageService.html":{}}}],["lastname",{"_index":543,"title":{},"body":{"classes/Profile.html":{}}}],["left",{"_index":531,"title":{},"body":{"components/NavigationComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["lepooch",{"_index":509,"title":{},"body":{"components/NavigationComponent.html":{}}}],["lifecycle",{"_index":747,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighten($color",{"_index":533,"title":{},"body":{"components/NavigationComponent.html":{}}}],["literal",{"_index":201,"title":{},"body":{"classes/AppSettings.html":{},"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.setitem('identity",{"_index":420,"title":{},"body":{"injectables/IdentityService.html":{}}}],["localstorage.setitem(key",{"_index":672,"title":{},"body":{"injectables/StorageService.html":{}}}],["log",{"_index":436,"title":{},"body":{"injectables/LoggerService.html":{}}}],["log(args",{"_index":443,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logger",{"_index":616,"title":{},"body":{"modules/SharedModule.html":{}}}],["loggermodel",{"_index":291,"title":{"classes/LoggerModel.html":{}},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["loggermodel(args",{"_index":457,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerservice",{"_index":431,"title":{"injectables/LoggerService.html":{}},"body":{"injectables/LoggerService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":380,"title":{},"body":{"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["login'},{'name",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["login.component.html",{"_index":471,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":470,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":53,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":472,"title":{},"body":{"components/LoginComponent.html":{}}}],["logitems",{"_index":451,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logitems.unshift(new",{"_index":456,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel",{"_index":737,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logscope",{"_index":287,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"modules/SharedModule.html":{},"miscellaneous/enumerations.html":{}}}],["logscope.router",{"_index":619,"title":{},"body":{"modules/SharedModule.html":{}}}],["logscopes",{"_index":433,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logtoconsole",{"_index":437,"title":{},"body":{"injectables/LoggerService.html":{}}}],["m.identitymodule",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.schedulemodule",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["map(item",{"_index":647,"title":{},"body":{"injectables/StorageService.html":{}}}],["margin",{"_index":530,"title":{},"body":{"components/NavigationComponent.html":{}}}],["matching",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":284,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["min",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":734,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modelbase",{"_index":70,"title":{"classes/ModelBase.html":{}},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["modelbase:11",{"_index":94,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:12",{"_index":92,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:13",{"_index":93,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:14",{"_index":96,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:15",{"_index":97,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:16",{"_index":98,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["models/account.model",{"_index":329,"title":{},"body":{"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/NavigationComponent.html":{}}}],["models/base.model",{"_index":99,"title":{},"body":{"classes/Account.html":{},"classes/Profile.html":{},"injectables/StorageService.html":{}}}],["models/identity.model",{"_index":409,"title":{},"body":{"injectables/IdentityService.html":{},"interceptors/TokenInterceptor.html":{}}}],["module",{"_index":146,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":148,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithproviders",{"_index":603,"title":{},"body":{"modules/SharedModule.html":{}}}],["more",{"_index":792,"title":{},"body":{"index.html":{}}}],["multi",{"_index":623,"title":{},"body":{"modules/SharedModule.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"index.html":{}}}],["nav",{"_index":520,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigate",{"_index":763,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":496,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["navigation.component.html",{"_index":498,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":497,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigationcomponent",{"_index":55,"title":{"components/NavigationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["network",{"_index":748,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["networkservice",{"_index":537,"title":{"injectables/NetworkService.html":{}},"body":{"injectables/NetworkService.html":{},"coverage.html":{}}}],["new",{"_index":255,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/ILoggerModel.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":237,"title":{},"body":{"components/DialogComponent.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["next(await",{"_index":664,"title":{},"body":{"injectables/StorageService.html":{}}}],["next.handle(authreq",{"_index":583,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":682,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["ng",{"_index":760,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["none",{"_index":244,"title":{},"body":{"components/DialogComponent.html":{}}}],["null",{"_index":331,"title":{},"body":{"classes/Identity.html":{},"injectables/IdentityService.html":{}}}],["number",{"_index":90,"title":{},"body":{"classes/Account.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["object",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(args",{"_index":301,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["object.keys(this",{"_index":308,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{}}}],["object.keys(this.logscopes).foreach(key",{"_index":465,"title":{},"body":{"injectables/LoggerService.html":{}}}],["object.keys(values",{"_index":646,"title":{},"body":{"injectables/StorageService.html":{}}}],["observable",{"_index":377,"title":{},"body":{"guards/IdentityResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["optional",{"_index":86,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"components/DialogComponent.html":{},"injectables/ErrorService.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["out",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":795,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":716,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":516,"title":{},"body":{"components/NavigationComponent.html":{}}}],["page",{"_index":798,"title":{},"body":{"index.html":{}}}],["panel",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"classes/Account.html":{},"components/DialogComponent.html":{},"injectables/ErrorService.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["password",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["path",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["pathmatch",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["pooch",{"_index":544,"title":{},"body":{"classes/Profile.html":{}}}],["port",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":311,"title":{},"body":{"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["prod",{"_index":779,"title":{},"body":{"index.html":{}}}],["production",{"_index":207,"title":{},"body":{"classes/AppSettings.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":540,"title":{"classes/Profile.html":{}},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["project",{"_index":753,"title":{},"body":{"index.html":{}}}],["promise",{"_index":378,"title":{},"body":{"guards/IdentityResolver.html":{},"injectables/StorageService.html":{}}}],["promise.resolve().then(async",{"_index":643,"title":{},"body":{"injectables/StorageService.html":{}}}],["properties",{"_index":71,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"injectables/DialogService.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{}}}],["protractor",{"_index":789,"title":{},"body":{"index.html":{}}}],["provide",{"_index":620,"title":{},"body":{"modules/SharedModule.html":{}}}],["provider",{"_index":206,"title":{},"body":{"classes/AppSettings.html":{},"miscellaneous/enumerations.html":{}}}],["provider.server",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["public",{"_index":72,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{}}}],["reactiveformsmodule",{"_index":365,"title":{},"body":{"modules/IdentityModule.html":{}}}],["readonly",{"_index":385,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/StorageService.html":{}}}],["redirectto",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["reference",{"_index":797,"title":{},"body":{"index.html":{}}}],["register",{"_index":381,"title":{},"body":{"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["register.component.html",{"_index":551,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":550,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":57,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerform",{"_index":552,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reload",{"_index":766,"title":{},"body":{"index.html":{}}}],["req",{"_index":570,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["req.clone",{"_index":575,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["requestinterceptor",{"_index":561,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["require",{"_index":713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resolve",{"_index":373,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["resolve(route",{"_index":375,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["result",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":333,"title":{},"body":{"classes/Identity.html":{},"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"components/HomeComponent.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["root",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["route",{"_index":353,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{}}}],["router",{"_index":346,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"miscellaneous/enumerations.html":{}}}],["routermodule",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild(routes",{"_index":382,"title":{},"body":{"modules/IdentityRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":351,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["routes",{"_index":179,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":515,"title":{},"body":{"components/NavigationComponent.html":{}}}],["run",{"_index":759,"title":{},"body":{"index.html":{}}}],["running",{"_index":781,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":257,"title":{},"body":{"injectables/DialogService.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":678,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["scaffolding",{"_index":770,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["schedule.component",{"_index":593,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["schedule.component.html",{"_index":586,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["schedule.component.scss",{"_index":585,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["schedulecomponent",{"_index":59,"title":{"components/ScheduleComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"coverage.html":{},"overview.html":{}}}],["schedulemodule",{"_index":589,"title":{"modules/ScheduleModule.html":{}},"body":{"modules/ScheduleModule.html":{},"modules.html":{},"overview.html":{}}}],["scope",{"_index":285,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"modules/SharedModule.html":{}}}],["secondary",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["sections/about/about.component",{"_index":608,"title":{},"body":{"modules/SharedModule.html":{}}}],["sections/home/home.component",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["serve",{"_index":761,"title":{},"body":{"index.html":{}}}],["server",{"_index":750,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["service",{"_index":230,"title":{},"body":{"components/DialogComponent.html":{}}}],["services",{"_index":615,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/dialog.service",{"_index":234,"title":{},"body":{"components/DialogComponent.html":{},"components/NavigationComponent.html":{},"modules/SharedModule.html":{}}}],["services/error.service",{"_index":609,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/identity.guard",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["services/identity.service",{"_index":354,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["services/logger.service",{"_index":610,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/request.interceptor",{"_index":611,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/storage.service",{"_index":410,"title":{},"body":{"injectables/IdentityService.html":{},"modules/SharedModule.html":{}}}],["services/token.interceptor",{"_index":613,"title":{},"body":{"modules/SharedModule.html":{}}}],["set",{"_index":334,"title":{},"body":{"classes/Identity.html":{}}}],["setidentity",{"_index":389,"title":{},"body":{"injectables/IdentityService.html":{}}}],["setidentity(identity",{"_index":398,"title":{},"body":{"injectables/IdentityService.html":{}}}],["setstorage",{"_index":628,"title":{},"body":{"injectables/StorageService.html":{}}}],["setstorage(key",{"_index":636,"title":{},"body":{"injectables/StorageService.html":{}}}],["setstorage>(key",{"_index":669,"title":{},"body":{"injectables/StorageService.html":{}}}],["settoken(value",{"_index":327,"title":{},"body":{"classes/Identity.html":{}}}],["sharedmodule",{"_index":159,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedmodule.forroot",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["shop",{"_index":510,"title":{},"body":{"components/NavigationComponent.html":{}}}],["showdialog",{"_index":226,"title":{},"body":{"components/DialogComponent.html":{},"injectables/DialogService.html":{}}}],["showmessage",{"_index":499,"title":{},"body":{"components/NavigationComponent.html":{}}}],["size",{"_index":523,"title":{},"body":{"components/NavigationComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"index.html":{}}}],["space",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["spec\\.ts",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../context.enum.ts",{"_index":736,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../endpoint.interface.ts",{"_index":810,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log.level.enum.ts",{"_index":738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../log.scope.enum.ts",{"_index":739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../providers.enum.ts",{"_index":740,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../shared.module.ts",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/@common/components/dialog/dialog.component.ts",{"_index":221,"title":{},"body":{"components/DialogComponent.html":{},"coverage.html":{}}}],["src/app/@common/components/dialog/dialog.component.ts:15",{"_index":232,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/@common/components/dialog/dialog.component.ts:17",{"_index":233,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/@common/components/dialog/dialog.component.ts:21",{"_index":231,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/@common/components/dialog/dialog.component.ts:9",{"_index":229,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/@common/components/navigation/navigation.component.ts",{"_index":495,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/@common/components/navigation/navigation.component.ts:12",{"_index":500,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/@common/components/navigation/navigation.component.ts:24",{"_index":501,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/@common/components/navigation/navigation.component.ts:26",{"_index":502,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/@common/enums/context.enum.ts",{"_index":741,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/enums/log.level.enum.ts",{"_index":742,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/enums/log.scope.enum.ts",{"_index":745,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/enums/providers.enum.ts",{"_index":749,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/helpers/app.settings.ts",{"_index":199,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["src/app/@common/helpers/app.settings.ts:4",{"_index":202,"title":{},"body":{"classes/AppSettings.html":{}}}],["src/app/@common/helpers/app.settings.ts:5",{"_index":203,"title":{},"body":{"classes/AppSettings.html":{}}}],["src/app/@common/helpers/endpoint.interface.ts",{"_index":274,"title":{},"body":{"interfaces/IEndpoint.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/@common/helpers/key.value.ts",{"_index":277,"title":{},"body":{"interfaces/IKeyValue.html":{},"coverage.html":{}}}],["src/app/@common/helpers/key.value.ts:1",{"_index":280,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["src/app/@common/helpers/logger.model.ts",{"_index":282,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"coverage.html":{}}}],["src/app/@common/helpers/logger.model.ts:14",{"_index":430,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:15",{"_index":426,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:16",{"_index":428,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:17",{"_index":424,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:18",{"_index":427,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:19",{"_index":425,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:20",{"_index":429,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:21",{"_index":423,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/models/account.model.ts",{"_index":68,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["src/app/@common/models/account.model.ts:4",{"_index":89,"title":{},"body":{"classes/Account.html":{}}}],["src/app/@common/models/account.model.ts:5",{"_index":88,"title":{},"body":{"classes/Account.html":{}}}],["src/app/@common/models/account.model.ts:6",{"_index":83,"title":{},"body":{"classes/Account.html":{}}}],["src/app/@common/models/base.model.ts",{"_index":306,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["src/app/@common/models/base.model.ts:11",{"_index":492,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:12",{"_index":490,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:13",{"_index":491,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:14",{"_index":493,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:15",{"_index":494,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:16",{"_index":489,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/identity.model.ts",{"_index":310,"title":{},"body":{"classes/Identity.html":{},"coverage.html":{}}}],["src/app/@common/models/identity.model.ts:10",{"_index":326,"title":{},"body":{"classes/Identity.html":{}}}],["src/app/@common/models/identity.model.ts:11",{"_index":328,"title":{},"body":{"classes/Identity.html":{}}}],["src/app/@common/models/identity.model.ts:3",{"_index":315,"title":{},"body":{"classes/Identity.html":{}}}],["src/app/@common/models/profile.model.ts",{"_index":541,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/app/@common/models/profile.model.ts:4",{"_index":546,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/@common/models/profile.model.ts:5",{"_index":547,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/@common/models/profile.model.ts:6",{"_index":548,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/@common/models/profile.model.ts:7",{"_index":545,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/@common/sections/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/@common/sections/about/about.component.ts:13",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/@common/sections/about/about.component.ts:8",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/@common/sections/home/home.component.ts",{"_index":267,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/@common/sections/home/home.component.ts:13",{"_index":271,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/@common/sections/home/home.component.ts:8",{"_index":270,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/@common/services/dialog.service.ts",{"_index":248,"title":{},"body":{"injectables/DialogService.html":{},"coverage.html":{}}}],["src/app/@common/services/dialog.service.ts:11",{"_index":251,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/@common/services/dialog.service.ts:14",{"_index":250,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/@common/services/dialog.service.ts:6",{"_index":256,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/@common/services/dialog.service.ts:7",{"_index":249,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/@common/services/error.service.ts",{"_index":261,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["src/app/@common/services/error.service.ts:5",{"_index":264,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/@common/services/identity.guard.ts",{"_index":343,"title":{},"body":{"guards/IdentityGuard.html":{},"coverage.html":{}}}],["src/app/@common/services/identity.guard.ts:12",{"_index":352,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["src/app/@common/services/identity.guard.ts:7",{"_index":347,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["src/app/@common/services/identity.resolver.ts",{"_index":372,"title":{},"body":{"guards/IdentityResolver.html":{},"coverage.html":{}}}],["src/app/@common/services/identity.resolver.ts:12",{"_index":376,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["src/app/@common/services/identity.resolver.ts:7",{"_index":374,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["src/app/@common/services/identity.service.ts",{"_index":383,"title":{},"body":{"injectables/IdentityService.html":{},"coverage.html":{}}}],["src/app/@common/services/identity.service.ts:10",{"_index":407,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:12",{"_index":405,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:13",{"_index":408,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:14",{"_index":395,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:23",{"_index":401,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:26",{"_index":404,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:29",{"_index":402,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:32",{"_index":397,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:39",{"_index":399,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/logger.service.ts",{"_index":432,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/app/@common/services/logger.service.ts:11",{"_index":446,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:12",{"_index":439,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:16",{"_index":444,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:29",{"_index":442,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:40",{"_index":445,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:9",{"_index":447,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/network.service.ts",{"_index":538,"title":{},"body":{"injectables/NetworkService.html":{},"coverage.html":{}}}],["src/app/@common/services/network.service.ts:5",{"_index":539,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/@common/services/request.interceptor.ts",{"_index":563,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/app/@common/services/request.interceptor.ts:13",{"_index":569,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/@common/services/request.interceptor.ts:8",{"_index":565,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/@common/services/storage.service.ts",{"_index":624,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/@common/services/storage.service.ts:10",{"_index":630,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:15",{"_index":635,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:27",{"_index":640,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:41",{"_index":632,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:47",{"_index":638,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:9",{"_index":641,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/token.interceptor.ts",{"_index":674,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["src/app/@common/services/token.interceptor.ts:10",{"_index":675,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/@common/services/token.interceptor.ts:15",{"_index":676,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/@common/shared.module.ts",{"_index":598,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/@common/shared.module.ts:38",{"_index":602,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/app",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/appointment/appointment.component.ts",{"_index":208,"title":{},"body":{"components/AppointmentComponent.html":{},"coverage.html":{}}}],["src/app/appointment/appointment.component.ts:12",{"_index":213,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.component.ts:8",{"_index":212,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.module.ts",{"_index":217,"title":{},"body":{"modules/AppointmentModule.html":{}}}],["src/app/identity/identity.component.ts",{"_index":336,"title":{},"body":{"components/IdentityComponent.html":{},"coverage.html":{}}}],["src/app/identity/identity.component.ts:12",{"_index":340,"title":{},"body":{"components/IdentityComponent.html":{}}}],["src/app/identity/identity.component.ts:8",{"_index":339,"title":{},"body":{"components/IdentityComponent.html":{}}}],["src/app/identity/identity.module.ts",{"_index":364,"title":{},"body":{"modules/IdentityModule.html":{}}}],["src/app/identity/identity.routing.module.ts",{"_index":379,"title":{},"body":{"modules/IdentityRoutingModule.html":{}}}],["src/app/identity/login/login.component.ts",{"_index":469,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/identity/login/login.component.ts:12",{"_index":474,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:21",{"_index":476,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:23",{"_index":475,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/register/register.component.ts",{"_index":549,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/identity/register/register.component.ts:12",{"_index":553,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/identity/register/register.component.ts:21",{"_index":554,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/identity/register/register.component.ts:23",{"_index":555,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/schedule/schedule.component.ts",{"_index":584,"title":{},"body":{"components/ScheduleComponent.html":{},"coverage.html":{}}}],["src/app/schedule/schedule.component.ts:12",{"_index":588,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["src/app/schedule/schedule.component.ts:8",{"_index":587,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["src/app/schedule/schedule.module.ts",{"_index":592,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":710,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stacktrace",{"_index":434,"title":{},"body":{"injectables/LoggerService.html":{}}}],["start",{"_index":527,"title":{},"body":{"components/NavigationComponent.html":{}}}],["started",{"_index":680,"title":{"index.html":{}},"body":{"interceptors/TokenInterceptor.html":{}}}],["state",{"_index":350,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["statements",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":599,"title":{},"body":{"modules/SharedModule.html":{}}}],["storage",{"_index":396,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{}}}],["storage.filter(value",{"_index":666,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.findindex(item",{"_index":654,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.push(current",{"_index":662,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.splice(index",{"_index":660,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage[item.name",{"_index":671,"title":{},"body":{"injectables/StorageService.html":{}}}],["storageservice",{"_index":394,"title":{"injectables/StorageService.html":{}},"body":{"injectables/IdentityService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":776,"title":{},"body":{"index.html":{}}}],["string",{"_index":82,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"injectables/StorageService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["subject",{"_index":252,"title":{},"body":{"injectables/DialogService.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/StorageService.html":{}}}],["submit",{"_index":486,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe",{"_index":461,"title":{},"body":{"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["super",{"_index":100,"title":{},"body":{"classes/Account.html":{},"classes/Profile.html":{}}}],["super(username",{"_index":330,"title":{},"body":{"classes/Identity.html":{}}}],["support",{"_index":799,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":800,"title":{},"body":{"modules.html":{}}}],["t",{"_index":633,"title":{},"body":{"injectables/StorageService.html":{}}}],["t\\t${key",{"_index":467,"title":{},"body":{"injectables/LoggerService.html":{}}}],["table",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":677,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["tap(event",{"_index":683,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["target",{"_index":286,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["test",{"_index":784,"title":{},"body":{"index.html":{}}}],["tests",{"_index":783,"title":{},"body":{"index.html":{}}}],["text",{"_index":535,"title":{},"body":{"components/NavigationComponent.html":{}}}],["theme",{"_index":514,"title":{},"body":{"components/NavigationComponent.html":{}}}],["themes",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["themes.scss",{"_index":513,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this._token",{"_index":332,"title":{},"body":{"classes/Identity.html":{}}}],["this.account",{"_index":505,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.account.userlogin(this.loginform.value",{"_index":482,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.account.userregister(this.registerform.value",{"_index":558,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authstate",{"_index":418,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.checkidentity",{"_index":413,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.collection$[key",{"_index":668,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.collection[key",{"_index":645,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.collection[key].slice",{"_index":649,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.config.environment.production",{"_index":459,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.createdat",{"_index":296,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["this.dialog.showdialog",{"_index":508,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.email",{"_index":103,"title":{},"body":{"classes/Account.html":{}}}],["this.getcollection$(key",{"_index":663,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.getstorage(key",{"_index":652,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.hidedialog",{"_index":238,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.hidedialog$.next",{"_index":259,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.http.post(`${this.baseurl}/auth",{"_index":414,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.http.post(`${this.baseurl}/auth/logout",{"_index":416,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.http.put(`${this.baseurl}/auth",{"_index":415,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity",{"_index":412,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.next(identity",{"_index":422,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.next(storage",{"_index":419,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.subscribe",{"_index":411,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity.authstate",{"_index":355,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["this.identity.identity",{"_index":507,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.identity.identity$.subscribe",{"_index":503,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.identity.identity.token",{"_index":580,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.identity.setidentity(new",{"_index":690,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.initialize(args.scope",{"_index":455,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.log",{"_index":618,"title":{},"body":{"modules/SharedModule.html":{}}}],["this.loginform",{"_index":480,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logscopes$[args?.scope",{"_index":454,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes$[args?.scope].next(logitems",{"_index":458,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes$[scope",{"_index":460,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes[args?.scope",{"_index":452,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes[key].length",{"_index":468,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes[scope",{"_index":462,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logtoconsole",{"_index":463,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.password",{"_index":102,"title":{},"body":{"classes/Account.html":{}}}],["this.registerform",{"_index":556,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.events.subscribe",{"_index":617,"title":{},"body":{"modules/SharedModule.html":{}}}],["this.router.navigate(['../../schedule",{"_index":483,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/account/login",{"_index":356,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["this.router.navigate(['account/login",{"_index":559,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.service.hidedialog$.subscribe",{"_index":236,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.service.showdialog$.subscribe",{"_index":239,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.setstorage(key",{"_index":665,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.showdialog",{"_index":240,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.showdialog$.next",{"_index":258,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.uid",{"_index":298,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["this.username",{"_index":101,"title":{},"body":{"classes/Account.html":{}}}],["this[key",{"_index":303,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["times",{"_index":245,"title":{},"body":{"components/DialogComponent.html":{}}}],["tmodel",{"_index":279,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["token",{"_index":314,"title":{},"body":{"classes/Identity.html":{},"interceptors/TokenInterceptor.html":{}}}],["token(value",{"_index":335,"title":{},"body":{"classes/Identity.html":{}}}],["tokeninterceptor",{"_index":612,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["true",{"_index":358,"title":{},"body":{"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":290,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"dependencies.html":{}}}],["tslib",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":85,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"interfaces/IEndpoint.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":808,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["uid",{"_index":292,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["unit",{"_index":782,"title":{},"body":{"index.html":{}}}],["updatestorage",{"_index":629,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatestorage(key",{"_index":639,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatestorage>(key",{"_index":650,"title":{},"body":{"injectables/StorageService.html":{}}}],["use",{"_index":772,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":622,"title":{},"body":{"modules/SharedModule.html":{}}}],["user",{"_index":688,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["user.email",{"_index":692,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["userlogin",{"_index":390,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userlogin(account",{"_index":400,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userlogout",{"_index":391,"title":{},"body":{"injectables/IdentityService.html":{}}}],["username",{"_index":75,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["userregister",{"_index":392,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userregister(account",{"_index":403,"title":{},"body":{"injectables/IdentityService.html":{}}}],["usevalue",{"_index":621,"title":{},"body":{"modules/SharedModule.html":{}}}],["validators",{"_index":479,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":557,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":481,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":254,"title":{},"body":{"injectables/DialogService.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":637,"title":{},"body":{"injectables/StorageService.html":{}}}],["values.foreach(current",{"_index":653,"title":{},"body":{"injectables/StorageService.html":{}}}],["values.foreach(item",{"_index":670,"title":{},"body":{"injectables/StorageService.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["variable",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":811,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":757,"title":{},"body":{"index.html":{}}}],["via",{"_index":786,"title":{},"body":{"index.html":{}}}],["view",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"components/HomeComponent.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["warn",{"_index":744,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["white",{"_index":519,"title":{},"body":{"components/NavigationComponent.html":{}}}],["width",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["works",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/ScheduleComponent.html":{}}}],["x",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["y",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["yes",{"_index":87,"title":{},"body":{"classes/Account.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{},"injectables/StorageService.html":{}}}],["zone.js",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/sections/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/sections/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/sections/about/about.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  about works!\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  about works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/account.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ModelBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                userName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userName?: string, password?: string, email?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/account.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/account.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/account.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/account.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelBase } from '@models/base.model'\n\nexport class Account extends ModelBase {\n  public userName: string;\n  public password: string;\n  public email   : string;\n  // ======================================= //\n  constructor(userName?: string, password?: string, email?: string) {\n    super();\n    this.userName = userName ?? userName;\n    this.password = password ?? password;\n    this.email    = email    ?? email   ;\n  }\n  // ======================================= //\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import \"themes\";\n@import \"styles\";\n\n.view-port {\n  height: 100vh;\n  max-height: 100vh;\n  width: 100vw;\n  max-width: 100vw;\n  // ======================================= //\n  display: flex;\n  .view-main {\n    flex: auto;\n    display: flex;\n    flex-direction: column;\n    .view-content {\n      flex: auto;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n  }\n  .view-panel {\n    min-width: 50px;\n    max-width: 250px;\n    background: $panel-bg;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n\n    .panel-items {\n      width: 50px;\n\n      .panel-item {\n        height: 50px;\n        width: 50px;\n\n        :hover {\n          background: darken($color: $panel-bg, $amount: 10%);\n          * {\n            color: $secondary;\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule           } from '@angular/platform-browser';\nimport { NgModule                } from '@angular/core'            ;\nimport { AppRoutingModule        } from './app-routing.module'     ;\nimport { AppComponent            } from './app.component'          ;\nimport { SharedModule            } from '@common/shared.module'    ;\nimport { environment as env      } from '@env/environment'\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule.forRoot({ environment: env })\n  ],\n  declarations: [AppComponent],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { HomeComponent } from '@sections/home/home.component';\nimport { IdentityGuard } from '@services/identity.guard';\n\nconst routes: Routes = [\n  // ======================================= //\n  { path: 'home', component:HomeComponent },\n  { path: 'schedule', canActivate: [IdentityGuard], loadChildren: () => \"import('./schedule/schedule.module').then(m => m.ScheduleModule)\" },\n  { path: 'account', loadChildren: () => \"import('./identity/identity.module').then(m => m.IdentityModule)\" },\n  { path: '**', pathMatch: 'full', redirectTo: '' }\n];\n// ======================================= //\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppSettings.html":{"url":"classes/AppSettings.html","title":"class - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/app.settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                endpoints\n                            \n                            \n                                    Public\n                                environment\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/app.settings.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/app.settings.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Endpoints, IEndpoint } from '@helpers/endpoint.interface'\n\nexport class AppSettings {\n  public endpoints?: { [provider: string]: IEndpoint };\n  public environment: { production: boolean, endpoints: Endpoints };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppointmentComponent.html":{"url":"components/AppointmentComponent.html","title":"component - AppointmentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppointmentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/appointment/appointment.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-appointment\n            \n\n            \n                styleUrls\n                ./appointment.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./appointment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/appointment/appointment.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/appointment/appointment.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.scss']\n})\nexport class AppointmentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  appointment works!\n\n\n    \n\n    \n                \n                    ./appointment.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  appointment works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppointmentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppointmentModule.html":{"url":"modules/AppointmentModule.html","title":"module - AppointmentModule","body":"\n                   \n\n\n\n\n    Modules\n    AppointmentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppointmentModule\n\n\n\ncluster_AppointmentModule_declarations\n\n\n\n\nAppointmentComponent\n\nAppointmentComponent\n\n\n\nAppointmentModule\n\nAppointmentModule\n\nAppointmentModule -->\n\nAppointmentComponent->AppointmentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/appointment/appointment.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppointmentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AppointmentComponent } from './appointment.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [AppointmentComponent]\n})\nexport class AppointmentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogComponent.html":{"url":"components/DialogComponent.html","title":"component - DialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/components/dialog/dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog\n            \n\n            \n                styleUrls\n                ./dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hideDialog\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                showDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: DialogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/components/dialog/dialog.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hideDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/components/dialog/dialog.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/components/dialog/dialog.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/components/dialog/dialog.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { DialogService } from '@services/dialog.service'\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n  constructor(private service: DialogService) {\n    this.service.hideDialog$.subscribe({ next: () => this.hideDialog() });\n    this.service.showDialog$.subscribe({ next: () => this.showDialog() });\n  }\n\n  ngOnInit() { }\n\n  public showDialog() {\n    const dialog = document.getElementById(\"dialog\");\n    dialog.style.display = \"block\";\n  }\n  public hideDialog() {\n    const dialog = document.getElementById(\"dialog\");\n    dialog.style.display = \"none\";\n  }\n}\n    \n\n    \n        \n  \n    &times;\n    \n  \n\n\n    \n\n    \n                \n                    ./dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      ×      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/dialog.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hideDialog$\n                            \n                            \n                                    Public\n                                showDialog$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hideDialog\n                            \n                            \n                                    Public\n                                showDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/dialog.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hideDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/dialog.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/dialog.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideDialog$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/dialog.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showDialog$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/dialog.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class DialogService {\n  public showDialog$: Subject = new Subject();\n  public hideDialog$: Subject = new Subject();\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n  public showDialog() {\n    this.showDialog$.next();\n  }\n  public hideDialog() {\n    this.hideDialog$.next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/error.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/error.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class ErrorService {\n  // ======================================= //\n  constructor(private http: HttpClient) { }\n  // ======================================= //\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/sections/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/sections/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/sections/home/home.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  home works!\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  home works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEndpoint.html":{"url":"interfaces/IEndpoint.html","title":"interface - IEndpoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEndpoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/endpoint.interface.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface IEndpoint {\n}\nexport type Endpoints = { [key: string]: IEndpoint };\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeyValue.html":{"url":"interfaces/IKeyValue.html","title":"interface - IKeyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/key.value.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    TModel\n\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/helpers/key.value.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface IKeyValue {\n  // ======================================= //\n  [ key: string ]: TModel;\n  // ======================================= //\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILoggerModel.html":{"url":"interfaces/ILoggerModel.html","title":"interface - ILoggerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILoggerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/logger.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        descriptor\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        scope\n                                \n                                \n                                            Optional\n                                        target\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        descriptor\n                                    \n                                \n                                \n                                    \n                                        descriptor:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:         LogScope\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LogScope\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LogScope } from '@enums/log.scope.enum'\nimport { Guid } from 'guid-ts';\n\nexport interface ILoggerModel {\n  message   ?: string  ;\n  descriptor?: any     ;\n  name      ?: any     ;\n  scope     ?: LogScope;\n  target    ?: any     ;\n  items?: { [item: string]: any };\n}\nexport class LoggerModel {\n  // ======================================= //\n  public uid        : string  ;\n  public createdAt  : number  ;\n  public scope      : LogScope;\n  public caller     : string  ;\n  public description: string  ;\n  public class      : string  ;\n  public source     : string  ;\n  public items: { [item: string]: any };\n  // ======================================= //\n  constructor(args?: ILoggerModel) {\n    this.createdAt = new Date().valueOf();\n    this.uid = Guid.newGuid().toString().split('-')[0];\n    // ======================================= //\n    Object.keys(args)\n      .forEach(key => this[key] = args[key] );\n  }\n  // ======================================= //\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IModelBase.html":{"url":"interfaces/IModelBase.html","title":"interface - IModelBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IModelBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/base.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        isActive\n                                \n                                \n                                            Optional\n                                        isDefault\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDefault\n                                    \n                                \n                                \n                                    \n                                        isDefault:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IModelBase {\n  id         ?: number ;\n  name       ?: string ;\n  description?: string ;\n  isActive   ?: boolean;\n  isDefault  ?: boolean;\n}\nexport class ModelBase> {\n  // ======================================= //\n  public id         : number ;\n  public created    : number ;\n  public description: string ;\n  public isActive   : boolean;\n  public isDefault  : boolean;\n  public name       : string ;\n  // ======================================= //\n  constructor(args?: IModelBase) {\n    args ?? Object.keys(this)\n      .forEach(key => this[key] = this[key] ?? args[key]);\n  }\n  // ======================================= //\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Identity.html":{"url":"classes/Identity.html","title":"class - Identity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Identity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/identity.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Account\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _token\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                userName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, email: string, token: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/identity.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/identity.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/@common/models/identity.model.ts:10\n                                \n                            \n\n                \n                    \n                        settoken(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/@common/models/identity.model.ts:11\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Account } from '@models/account.model'\nexport class Identity extends Account {\n  private _token: string;\n  // ======================================= //\n  constructor(username: string, email: string, token: string) {\n    super(username, null, email);\n    this._token = token;\n  }\n  // ======================================= //\n  public get token() { return this._token; };\n  public set token(value: string) { this._token = value; }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IdentityComponent.html":{"url":"components/IdentityComponent.html","title":"component - IdentityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IdentityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/identity.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-identity\n            \n\n            \n                styleUrls\n                ./identity.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./identity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/identity.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/identity.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-identity',\n  templateUrl: './identity.component.html',\n  styleUrls: ['./identity.component.scss']\n})\nexport class IdentityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  identity works!\n\n\n    \n\n    \n                \n                    ./identity.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  identity works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IdentityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IdentityGuard.html":{"url":"guards/IdentityGuard.html","title":"guard - IdentityGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    IdentityGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/@common/services/identity.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/identity.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router'\nimport { IdentityService } from '@services/identity.service'\n\n@Injectable()\nexport class IdentityGuard implements CanActivate {\n  // ======================================= //\n  constructor(private identity: IdentityService, private router: Router) { }\n  // ======================================= //\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!this.identity.authState) {\n      this.router.navigate(['/account/login']);\n      return false;\n    }\n    return true;\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentityModule.html":{"url":"modules/IdentityModule.html","title":"module - IdentityModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentityModule\n\n\n\ncluster_IdentityModule_imports\n\n\n\ncluster_IdentityModule_declarations\n\n\n\n\nIdentityComponent\n\nIdentityComponent\n\n\n\nIdentityModule\n\nIdentityModule\n\nIdentityModule -->\n\nIdentityComponent->IdentityModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nIdentityModule -->\n\nLoginComponent->IdentityModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nIdentityModule -->\n\nRegisterComponent->IdentityModule\n\n\n\n\n\nIdentityRoutingModule\n\nIdentityRoutingModule\n\nIdentityModule -->\n\nIdentityRoutingModule->IdentityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/identity/identity.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IdentityComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentityRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { IdentityRoutingModule } from '@identity/identity.routing.module'\nimport { LoginComponent } from '@identity/login/login.component'\nimport { RegisterComponent } from '@identity/register/register.component'\nimport { IdentityComponent } from './identity.component'\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, IdentityRoutingModule],\n  declarations: [IdentityComponent, LoginComponent, RegisterComponent]\n})\nexport class IdentityModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IdentityResolver.html":{"url":"guards/IdentityResolver.html","title":"guard - IdentityResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    IdentityResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/@common/services/identity.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/identity.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.resolver.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable } from 'rxjs'\nimport { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router'\nimport { IdentityService } from '@services/identity.service'\n\n@Injectable()\nexport class IdentityResolver implements Resolve {\n  // ======================================= //\n  constructor(private identity: IdentityService, private router: Router) { }\n  // ======================================= //\n\n  resolve(route: ActivatedRouteSnapshot): Observable | Promise | any {\n\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentityRoutingModule.html":{"url":"modules/IdentityRoutingModule.html","title":"module - IdentityRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentityRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/identity/identity.routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { LoginComponent } from '@identity/login/login.component'\nimport { RegisterComponent } from '@identity/register/register.component'\n\nconst routes: Routes = [\n  // ======================================= //\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: '**', pathMatch: 'full', redirectTo: 'login' }\n];\n// ======================================= //\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IdentityRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentityService.html":{"url":"injectables/IdentityService.html","title":"injectable - IdentityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IdentityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/identity.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authState\n                            \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Public\n                                identity\n                            \n                            \n                                    Public\n                                identity$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkIdentity\n                            \n                            \n                                    Public\n                                setIdentity\n                            \n                            \n                                    Public\n                                userLogin\n                            \n                            \n                                    Public\n                                userLogout\n                            \n                            \n                                    Public\n                                userRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/identity.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            checkIdentity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIdentity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setIdentity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setIdentity(identity: Identity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identity\n                                    \n                                                Identity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogin(account: Account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                Account\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userRegister(account: Account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                Account\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/identity.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:5000'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/identity.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Identity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/identity.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identity$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/identity.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Account } from '@models/account.model'\nimport { Identity } from '@models/identity.model'\nimport { StorageService } from '@services/storage.service'\n\n@Injectable()\nexport class IdentityService {\n  private readonly baseUrl: string = 'http://localhost:5000';\n  // ======================================= //\n  public authState: boolean = false;\n  public identity: Identity;\n  public identity$: Subject = new Subject();\n  // ======================================= //\n  constructor(private storage: StorageService, private http: HttpClient) {\n    this.identity$.subscribe({\n      next: result => this.identity = result\n    });\n    this.checkIdentity();\n  }\n  // ======================================= //\n  public userLogin(account: Account) {\n    return this.http.post(`${this.baseUrl}/auth`, account);\n  }\n  public userRegister(account: Account) {\n    return this.http.put(`${this.baseUrl}/auth`, account);\n  }\n  public userLogout() {\n    return this.http.post(`${this.baseUrl}/auth/logout`, {});\n  }\n  public async checkIdentity() {\n    const storage: Identity = JSON.parse(localStorage.getItem('identity')) as Identity;\n    this.authState = storage != null;\n    if (storage && !this.identity) {\n      this.identity$.next(storage);\n    }\n  }\n  public setIdentity(identity: Identity) {\n    localStorage.setItem('identity', JSON.stringify(identity));\n    this.authState = true;\n    this.identity$.next(identity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerModel.html":{"url":"classes/LoggerModel.html","title":"class - LoggerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/logger.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                caller\n                            \n                            \n                                    Public\n                                class\n                            \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                scope\n                            \n                            \n                                    Public\n                                source\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ILoggerModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/helpers/logger.model.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ILoggerModel\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            caller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogScope\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LogScope } from '@enums/log.scope.enum'\nimport { Guid } from 'guid-ts';\n\nexport interface ILoggerModel {\n  message   ?: string  ;\n  descriptor?: any     ;\n  name      ?: any     ;\n  scope     ?: LogScope;\n  target    ?: any     ;\n  items?: { [item: string]: any };\n}\nexport class LoggerModel {\n  // ======================================= //\n  public uid        : string  ;\n  public createdAt  : number  ;\n  public scope      : LogScope;\n  public caller     : string  ;\n  public description: string  ;\n  public class      : string  ;\n  public source     : string  ;\n  public items: { [item: string]: any };\n  // ======================================= //\n  constructor(args?: ILoggerModel) {\n    this.createdAt = new Date().valueOf();\n    this.uid = Guid.newGuid().toString().split('-')[0];\n    // ======================================= //\n    Object.keys(args)\n      .forEach(key => this[key] = args[key] );\n  }\n  // ======================================= //\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logScopes\n                            \n                            \n                                    Public\n                                logScopes$\n                            \n                            \n                                    Private\n                                stackTrace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Private\n                                logToConsole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/logger.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(scope: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scope\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(args?: ILoggerModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ILoggerModel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            logToConsole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logToConsole()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/logger.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logScopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/logger.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logScopes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue>\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/logger.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stackTrace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/logger.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { Injectable } from '@angular/core'\nimport { AppSettings } from '@helpers/app.settings'\nimport { IKeyValue } from '@helpers/key.value'\nimport { ILoggerModel, LoggerModel } from '@helpers/logger.model'\n\n@Injectable()\nexport class LoggerService {\n  private stackTrace: any = {};\n  // ======================================= //\n  public logScopes: IKeyValue = {};\n  public logScopes$: IKeyValue> = {};\n  // ======================================= //\n  constructor(private config: AppSettings) { }\n  // ======================================= //\n  public log(args?: ILoggerModel) {\n    let logItems = this.logScopes[args?.scope]\n      ? this.logScopes[args?.scope]\n      : new Array();\n\n    if (!this.logScopes$[args?.scope]) {\n      this.logScopes$[args?.scope] = new Subject();\n      this.initialize(args.scope);\n    }\n    logItems.unshift(new LoggerModel(args));\n    this.logScopes$[args?.scope].next(logItems);\n  }\n\n  private initialize(scope: string) {\n    if (!this.config.environment.production) {\n      this.logScopes$[scope]\n        .subscribe({\n          next: (value: LoggerModel[]) => {\n            this.logScopes[scope] = value;\n            this.logToConsole();\n          }\n        });\n    }\n  }\n  private logToConsole() {\n    // console.clear();\n    // Object.keys(this.logScopes).forEach(key => {\n    //   console.groupCollapsed(`%c \\t\\t${key} Scope => ${this.logScopes[key].length \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(account: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/login/login.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        account\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/login/login.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/login/login.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/identity/login/login.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IdentityService } from '@services/identity.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n\n  constructor(private account: IdentityService, private router: Router) {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    })\n  }\n\n  ngOnInit() { }\n\n  public login() {\n    this.account.userLogin(this.loginForm.value)\n      .subscribe({\n        next: result => this.router.navigate(['../../schedule']),\n        error: error => console.log(error)\n      });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n     Login\n    \n      \n        \n           Username:\n          \n        \n        \n           Password:\n          \n        \n        \n          Submit! \n        \n      \n      \n        Click here to register!\n      \n    \n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           Login                             Username:                                     Password:                                    Submit!                             Click here to register!            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModelBase.html":{"url":"classes/ModelBase.html","title":"class - ModelBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/base.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IModelBase)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/base.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IModelBase\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IModelBase {\n  id         ?: number ;\n  name       ?: string ;\n  description?: string ;\n  isActive   ?: boolean;\n  isDefault  ?: boolean;\n}\nexport class ModelBase> {\n  // ======================================= //\n  public id         : number ;\n  public created    : number ;\n  public description: string ;\n  public isActive   : boolean;\n  public isDefault  : boolean;\n  public name       : string ;\n  // ======================================= //\n  constructor(args?: IModelBase) {\n    args ?? Object.keys(this)\n      .forEach(key => this[key] = this[key] ?? args[key]);\n  }\n  // ======================================= //\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/components/navigation/navigation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                account\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                showMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, dialog: DialogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/components/navigation/navigation.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/components/navigation/navigation.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/components/navigation/navigation.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Account\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/components/navigation/navigation.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { Account } from '@models/account.model'\nimport { DialogService } from '@services/dialog.service';\nimport { IdentityService } from '@services/identity.service'\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n  public account: Account;\n  constructor(private identity: IdentityService, private dialog: DialogService) {\n    this.identity.identity$.subscribe({\n      next: result => {\n        console.log(result)\n        this.account = result;\n        console.log(this.account);\n      }\n    });\n    this.account = this.identity.identity;\n  }\n\n  ngOnInit() { }\n\n  public showMessage() {\n    this.dialog.showDialog()\n  }\n}\n\n    \n\n    \n        \n  \n     LePooch Shop\n  \n  \n    \n       Api Docs\n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                @import \"themes.scss\";\n\n.navigation {\n  background: $theme;\n  height: 50px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px 30px;\n  color: white;\n\n  .nav-brand {\n    font-size: 20px;\n  }\n  .nav-actions {\n    flex: auto;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    .nav-start {\n    }\n    .nav-end {\n    }\n  }\n\n  .nav-action {\n    margin-left: 20px;\n    color: white;\n    display: flex;\n    align-items: center;\n  }\n  .nav-action:hover {\n    background: lighten($color: $theme, $amount: 10%);\n  }\n}\n.btn-text {\n  margin-left: 5px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       LePooch Shop               Api Docs                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkService.html":{"url":"injectables/NetworkService.html","title":"injectable - NetworkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NetworkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/network.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/network.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class NetworkService {\n  // ======================================= //\n  constructor(private http: HttpClient) { }\n  // ======================================= //\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/profile.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ModelBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                pooch\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/profile.model.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/profile.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/profile.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/profile.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pooch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/profile.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelBase } from '@models/base.model';\n\nexport class Profile extends ModelBase {\n  public email    : string;\n  public firstName: string;\n  public lastName : string;\n  public pooch    : string;\n  // ======================================= //\n  constructor() { super(); }\n  // ======================================= //\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(account: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/register/register.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        account\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/register/register.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/register/register.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/identity/register/register.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IdentityService } from '@services/identity.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  public registerForm: FormGroup;\n  constructor(private account: IdentityService, private router: Router) {\n    this.registerForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required)\n    })\n  }\n\n  ngOnInit() { }\n\n  public register() {\n    this.account.userRegister(this.registerForm.value)\n    .subscribe({\n      next: result => this.router.navigate(['account/login']),\n      error: error => console.log(error)\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n     Register\n    \n      \n        \n           Username:\n          \n        \n        \n           Password:\n          \n        \n        \n           Email:\n          \n        \n        \n          Submit! \n        \n      \n      \n        Click here to login!\n      \n    \n  \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           Register                             Username:                                     Password:                                     Email:                                    Submit!                             Click here to login!            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/request.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings, identity: IdentityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/request.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/request.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { AppSettings } from '@helpers/app.settings'\nimport { IdentityService } from '@services/identity.service';\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  // ======================================= //\n  constructor(private config: AppSettings, private identity: IdentityService) { }\n  // ======================================= //\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const authReq = req.clone({\n      headers: new HttpHeaders(this.identity.identity?.token ? { 'Authorization': `Bearer ${this.identity.identity.token}` } : {})\n        .append('Content-Type', 'application/json'),\n    });\n    return next.handle(authReq);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScheduleComponent.html":{"url":"components/ScheduleComponent.html","title":"component - ScheduleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScheduleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/schedule/schedule.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-schedule\n            \n\n            \n                styleUrls\n                ./schedule.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./schedule.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/schedule/schedule.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/schedule/schedule.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.scss']\n})\nexport class ScheduleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  schedule works!\n\n\n    \n\n    \n                \n                    ./schedule.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  schedule works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScheduleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScheduleModule.html":{"url":"modules/ScheduleModule.html","title":"module - ScheduleModule","body":"\n                   \n\n\n\n\n    Modules\n    ScheduleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScheduleModule\n\n\n\ncluster_ScheduleModule_declarations\n\n\n\n\nScheduleComponent\n\nScheduleComponent\n\n\n\nScheduleModule\n\nScheduleModule\n\nScheduleModule -->\n\nScheduleComponent->ScheduleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/schedule/schedule.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ScheduleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScheduleComponent } from './schedule.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ScheduleComponent]\n})\nexport class ScheduleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAboutComponent->SharedModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nSharedModule -->\n\nDialogComponent->SharedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nSharedModule -->\n\nHomeComponent->SharedModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nAboutComponent \n\nAboutComponent \n\nAboutComponent  -->\n\nSharedModule->AboutComponent \n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nSharedModule->DialogComponent \n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nSharedModule->HomeComponent \n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nDialogService\n\nDialogService\n\nSharedModule -->\n\nDialogService->SharedModule\n\n\n\n\n\nErrorService\n\nErrorService\n\nSharedModule -->\n\nErrorService->SharedModule\n\n\n\n\n\nIdentityService\n\nIdentityService\n\nSharedModule -->\n\nIdentityService->SharedModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nSharedModule -->\n\nLoggerService->SharedModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nSharedModule -->\n\nStorageService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/@common/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            DialogComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            NavigationComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DialogService\n                        \n                        \n                            ErrorService\n                        \n                        \n                            IdentityService\n                        \n                        \n                            LoggerService\n                        \n                        \n                            StorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            DialogComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            NavigationComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: AppSettings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/shared.module.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                AppSettings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule                          } from '@angular/common'\nimport { HTTP_INTERCEPTORS  , HttpClientModule } from '@angular/common/http'\nimport { ModuleWithProviders, NgModule         } from '@angular/core'\nimport { Router             , RouterModule     } from '@angular/router'\nimport { DialogComponent                       } from '@components/dialog/dialog.component'\nimport { NavigationComponent                   } from '@components/navigation/navigation.component'\nimport { LogScope                              } from '@enums/log.scope.enum'\nimport { AppSettings                           } from '@helpers/app.settings'\nimport { AboutComponent                        } from '@sections/about/about.component'\nimport { HomeComponent                         } from '@sections/home/home.component'\nimport { DialogService                         } from '@services/dialog.service'\nimport { ErrorService                          } from '@services/error.service'\nimport { IdentityGuard                         } from '@services/identity.guard'\nimport { IdentityService                       } from '@services/identity.service'\nimport { LoggerService                         } from '@services/logger.service'\nimport { RequestInterceptor                    } from '@services/request.interceptor'\nimport { StorageService                        } from '@services/storage.service'\nimport { TokenInterceptor                      } from '@services/token.interceptor'\n\n// ======================================= //\nconst components: any[] = [AboutComponent, HomeComponent   , NavigationComponent, DialogComponent                               ];\nconst modules   : any[] = [CommonModule  , HttpClientModule, RouterModule       . forChild       ([])                           ];\nconst services  : any[] = [IdentityGuard , ErrorService    , LoggerService      , IdentityService, StorageService, DialogService];\n// ======================================= //\n@NgModule({\n  declarations:  components,\n  imports     :  modules   ,\n  exports     : [modules   , components],\n  providers   :  services  ,\n})\nexport class SharedModule {\n  constructor(private logger: LoggerService, private router: Router) {\n    this.router.events.subscribe({\n      next: (value) => this.logger.log({ scope: LogScope.Router, items: { value: value } })\n    });\n  }\n\n  static forRoot(config: AppSettings): ModuleWithProviders {\n    return {\n      ngModule: SharedModule,\n      providers: [\n        { provide: AppSettings, useValue: config },\n        services,\n        { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true }\n      ]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                collection\n                            \n                            \n                                    Private\n                                    Readonly\n                                collection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCollection$\n                            \n                            \n                                    Public\n                                getStorage\n                            \n                            \n                                    Private\n                                setStorage\n                            \n                            \n                                    Public\n                                updateStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCollection$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollection$(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/storage.service.ts:41\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/storage.service.ts:15\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(key: string, values?: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/storage.service.ts:47\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    values\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStorage(key: string, values: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/storage.service.ts:27\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    values\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/storage.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            collection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue>\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/storage.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { Injectable } from '@angular/core'\nimport { AppSettings } from '@helpers/app.settings'\nimport { IKeyValue } from '@helpers/key.value'\nimport { ModelBase } from '@models/base.model'\n\n@Injectable()\nexport class StorageService {\n  private readonly collection: IKeyValue = {};\n  private readonly collection$: IKeyValue> = {};\n\n  // ======================================= //\n  constructor(private config: AppSettings) { }\n  // ======================================= //\n  public getStorage>(key: string): Promise {\n    return Promise.resolve().then(async () => {\n\n      const values: IKeyValue = JSON.parse(localStorage.getItem(key));\n      this.collection[key] = values\n        ? Object.keys(values)\n          .map(item => item[key])\n        : new Array();\n\n      return this.collection[key].slice() as T[];\n    });\n  }\n  public updateStorage>(key: string, values: T[]): Promise {\n    return Promise.resolve().then(async () => {\n\n      const storage: T[] = await this.getStorage(key);\n      values.forEach(current => {\n        const index = storage.findIndex(item => item?.id == current?.id || item?.name == current.name);\n        index > -1 ? storage.splice(index, 1, current) : storage.push(current);\n      });\n      this.getCollection$(key)\n        .next(await this.setStorage(key, storage.filter(value => value)));\n\n      return storage.filter(value => value) as T[];\n    });\n  }\n  public getCollection$>(key: string): Subject {\n    if (!this.collection$[key])\n      this.collection$[key] = new Subject();\n\n    return this.collection$[key] as Subject;\n  }\n  private setStorage>(key: string, values?: T[]): Promise {\n    return Promise.resolve().then(async () => {\n\n      const storage: IKeyValue = {};\n      values.forEach(item => storage[item.name] = item);\n      localStorage.setItem(key, JSON.stringify(storage));\n\n      return await this.getStorage(key) as T[];\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/token.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings, identity: IdentityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/token.interceptor.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/token.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { tap } from 'rxjs/operators'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { AppSettings } from '@helpers/app.settings'\nimport { IdentityService } from '@services/identity.service'\nimport { Identity } from '@models/identity.model'\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  // ======================================= //\n  constructor(private config: AppSettings, private identity: IdentityService) { }\n  // ======================================= //\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const started = Date.now();\n    return next.handle(req).pipe(\n      tap(event => {\n        if (event instanceof HttpResponse) {\n          if (event.headers.has('Authorization')) {\n            const token = event.headers.get('Authorization').replace('Bearer ', '');\n            const user: any = event.body;\n            this.identity.setIdentity(new Identity(user.userName, user.email, token));\n          }\n        }\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/@common/components/dialog/dialog.component.ts\n            \n            component\n            DialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/@common/components/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/app.settings.ts\n            \n            class\n            AppSettings\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/endpoint.interface.ts\n            \n            interface\n            IEndpoint\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/key.value.ts\n            \n            interface\n            IKeyValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/logger.model.ts\n            \n            class\n            LoggerModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/logger.model.ts\n            \n            interface\n            ILoggerModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/@common/models/account.model.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/@common/models/base.model.ts\n            \n            class\n            ModelBase\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/@common/models/base.model.ts\n            \n            interface\n            IModelBase\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/@common/models/identity.model.ts\n            \n            class\n            Identity\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/@common/models/profile.model.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/@common/sections/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/sections/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/dialog.service.ts\n            \n            injectable\n            DialogService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/@common/services/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/@common/services/identity.guard.ts\n            \n            guard\n            IdentityGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/identity.resolver.ts\n            \n            guard\n            IdentityResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/identity.service.ts\n            \n            injectable\n            IdentityService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/@common/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/@common/services/network.service.ts\n            \n            injectable\n            NetworkService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/@common/services/request.interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/@common/services/token.interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/shared.module.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/shared.module.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/shared.module.ts\n            \n            variable\n            services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/appointment/appointment.component.ts\n            \n            component\n            AppointmentComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/identity.component.ts\n            \n            component\n            IdentityComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/identity/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/schedule/schedule.component.ts\n            \n            component\n            ScheduleComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            endpoints\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            endpoints\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            bootstrap : ^4.5.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.2.1\n        \n            guid-ts : ^1.1.0\n        \n            jquery : ^3.5.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Context   (src/.../context.enum.ts)\n                        \n                        \n                            LogLevel   (src/.../log.level.enum.ts)\n                        \n                        \n                            LogScope   (src/.../log.scope.enum.ts)\n                        \n                        \n                            Provider   (src/.../providers.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/@common/enums/context.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Context\n                    \n                \n                        \n                            \n                                 Account\n                            \n                        \n                        \n                            \n                                Value : Account\n                            \n                        \n                        \n                            \n                                 Identity\n                            \n                        \n                        \n                            \n                                Value : Identity\n                            \n                        \n            \n        \n\n    src/app/@common/enums/log.level.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : Debug\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : Error\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                Value : Info\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : Warn\n                            \n                        \n            \n        \n\n    src/app/@common/enums/log.scope.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LogScope\n                    \n                \n                        \n                            \n                                 Authentication\n                            \n                        \n                        \n                            \n                                Value : Authentication\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : Error\n                            \n                        \n                        \n                            \n                                 Lifecycle\n                            \n                        \n                        \n                            \n                                Value : Lifecycle\n                            \n                        \n                        \n                            \n                                 Network\n                            \n                        \n                        \n                            \n                                Value : Network\n                            \n                        \n                        \n                            \n                                 Router\n                            \n                        \n                        \n                            \n                                Value : Router\n                            \n                        \n                        \n                            \n                                 Storage\n                            \n                        \n                        \n                            \n                                Value : Storage\n                            \n                        \n            \n        \n\n    src/app/@common/enums/providers.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Provider\n                    \n                \n                        \n                            \n                                 Server\n                            \n                        \n                        \n                            \n                                Value : Server\n                            \n                        \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : Other\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClient\nThis project was generated with Angular CLI version 11.0.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppointmentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentityRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScheduleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppointmentModule\n\n\n\ncluster_AppointmentModule_declarations\n\n\n\ncluster_IdentityModule\n\n\n\ncluster_IdentityModule_declarations\n\n\n\ncluster_IdentityModule_imports\n\n\n\ncluster_ScheduleModule\n\n\n\ncluster_ScheduleModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAboutComponent \n\nAboutComponent \n\nAboutComponent  -->\n\nSharedModule->AboutComponent \n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nSharedModule->DialogComponent \n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nSharedModule->HomeComponent \n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nAppointmentComponent\n\nAppointmentComponent\n\n\n\nAppointmentModule\n\nAppointmentModule\n\nAppointmentModule -->\n\nAppointmentComponent->AppointmentModule\n\n\n\n\n\nIdentityComponent\n\nIdentityComponent\n\n\n\nIdentityModule\n\nIdentityModule\n\nIdentityModule -->\n\nIdentityComponent->IdentityModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nIdentityModule -->\n\nLoginComponent->IdentityModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nIdentityModule -->\n\nRegisterComponent->IdentityModule\n\n\n\n\n\nIdentityRoutingModule\n\nIdentityRoutingModule\n\nIdentityModule -->\n\nIdentityRoutingModule->IdentityModule\n\n\n\n\n\nScheduleComponent\n\nScheduleComponent\n\n\n\nScheduleModule\n\nScheduleModule\n\nScheduleModule -->\n\nScheduleComponent->ScheduleModule\n\n\n\n\n\nAboutComponent\n\nAboutComponent\n\nSharedModule -->\n\nAboutComponent->SharedModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nSharedModule -->\n\nDialogComponent->SharedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nSharedModule -->\n\nHomeComponent->SharedModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nDialogService\n\nDialogService\n\nSharedModule -->\n\nDialogService->SharedModule\n\n\n\n\n\nErrorService\n\nErrorService\n\nSharedModule -->\n\nErrorService->SharedModule\n\n\n\n\n\nIdentityService\n\nIdentityService\n\nSharedModule -->\n\nIdentityService->SharedModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nSharedModule -->\n\nLoggerService->SharedModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nSharedModule -->\n\nStorageService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Endpoints   (src/.../endpoint.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/@common/helpers/endpoint.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Endpoints\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            components   (src/.../shared.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            endpoints   (src/.../environment.prod.ts)\n                        \n                        \n                            endpoints   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            modules   (src/.../shared.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            services   (src/.../shared.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/@common/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [AboutComponent, HomeComponent   , NavigationComponent, DialogComponent                               ]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [CommonModule  , HttpClientModule, RouterModule       . forChild       ([])                           ]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [IdentityGuard , ErrorService    , LoggerService      , IdentityService, StorageService, DialogService]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Endpoints\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [Provider.Server]: {\n\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  endpoints: endpoints\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Endpoints\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [Provider.Server]: {\n\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  endpoints: endpoints\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
