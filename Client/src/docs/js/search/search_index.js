var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.627,1,1.111]],["body/components/AboutComponent.html",[0,0.978,1,1.86,2,1.608,3,0.195,4,0.195,5,1.483,6,1.483,7,1.483,8,1.483,9,0.195,10,3.045,11,1.701,12,2.45,13,1.483,14,2.93,15,2.606,16,2.025,17,5.545,18,2.025,19,4.87,20,0.452,21,1.217,22,2.632,23,0.978,24,0.709,25,3.568,26,3.568,27,0.892,28,0.022,29,1.319,30,0.33,31,0.485,32,0.221,33,0.099,34,3.055,35,1.114,36,2.025,37,2.025,38,1.483,39,2.477,40,1.483,41,0.709,42,1.483,43,1.178,44,1.483,45,1.178,46,2.305,47,1.483,48,1.178,49,1.483,50,1.178,51,1.483,52,1.114,53,1.483,54,1.114,55,1.483,56,1.114,57,1.483,58,1.114,59,1.483,60,1.114,61,1.483,62,1.114,63,1.398,64,1.483,65,1.483,66,0.01,67,0.014,68,0.01]],["title/classes/Account.html",[33,0.098,69,1.572]],["body/classes/Account.html",[3,0.176,4,0.176,9,0.176,20,0.409,23,0.569,24,0.981,28,0.022,30,0.299,32,0.2,33,0.089,41,0.765,66,0.009,67,0.013,68,0.009,69,2.008,70,1.738,71,2.756,72,3.44,73,3.343,74,1.587,75,2.247,76,4.106,77,4.106,78,3.914,79,2.633,80,2.447,81,2.851,82,2.851,83,2.851,84,3.879,85,2.215,86,4.545,87,0.954,88,1.263,89,0.807,90,3.047,91,3.229,92,3.229,93,2.447,94,4.723,95,2.444,96,2.444,97,2.444,98,2.284,99,2.444,100,2.444,101,2.444,102,2.444,103,2.756,104,3.229,105,3.229,106,3.229]],["title/components/AppComponent.html",[0,0.627,43,1.175]],["body/components/AppComponent.html",[0,0.982,1,1.123,2,1.617,3,0.197,4,0.197,5,1.495,6,1.495,7,1.495,8,1.495,9,0.197,13,1.495,14,2.933,15,2.609,16,2.036,18,2.036,28,0.022,30,0.332,31,0.489,32,0.222,33,0.099,35,1.123,36,2.036,37,2.036,38,1.495,39,2.485,40,1.495,41,0.713,42,1.495,43,1.973,44,1.495,45,1.187,46,2.315,47,1.495,48,1.187,49,1.495,50,1.187,51,1.495,52,1.123,53,1.495,54,1.123,55,1.495,56,1.123,57,1.495,58,1.123,59,1.495,60,1.123,61,1.495,62,1.123,63,1.409,64,1.495,65,1.495,66,0.011,67,0.014,68,0.011,107,3.07,108,4.897,109,5.568,110,4.897,111,4.215,112,3.07,113,4.752,114,3.07,115,3.597,116,4.18,117,3.597,118,3.597,119,3.07,120,3.597,121,3.707,122,3.597,123,3.597]],["title/modules/AppModule.html",[124,1.394,125,2.437]],["body/modules/AppModule.html",[3,0.211,4,0.211,9,0.211,15,1.431,28,0.022,30,0.609,31,0.526,32,0.239,33,0.107,35,1.208,43,2.341,66,0.011,67,0.015,68,0.011,124,1.516,125,4.822,126,1.516,127,2.083,128,3.625,129,3.348,130,3.227,131,1.944,132,3.303,133,3.303,134,3.303,135,3.303,136,4.135,137,4.022,138,3.227,139,2.427,140,1.944,141,3.87,142,2.769,143,2.769,144,5.144,145,2.929,146,2.929,147,3.87,148,3.523,149,5.144,150,3.87,151,3.87,152,3.87,153,3.87]],["title/modules/AppRoutingModule.html",[124,1.394,136,2.232]],["body/modules/AppRoutingModule.html",[3,0.225,4,0.225,9,0.225,28,0.022,30,0.55,31,0.559,32,0.254,33,0.114,63,1.61,66,0.012,67,0.016,68,0.012,69,1.816,126,1.61,131,2.065,136,3.357,142,2.212,143,2.881,154,4.109,155,4.109,156,3.665,157,3.448,158,1.816,159,3.448,160,3.507,161,1.934,162,4.772,163,5.951,164,4.109,165,4.109,166,4.567,167,5.351,168,5.351,169,3.507,170,3.507,171,3.507,172,4.109]],["title/classes/AppSettings.html",[33,0.098,173,1.788]],["body/classes/AppSettings.html",[3,0.252,4,0.252,9,0.252,20,0.584,24,0.838,28,0.021,30,0.426,32,0.285,33,0.127,66,0.014,67,0.017,68,0.014,70,2.481,74,2.011,75,2.156,85,1.439,88,1.232,89,1.439,98,2.316,148,4.301,173,2.893,174,3.934,175,4.332,176,3.612,177,4.609,178,4.609,179,3.943,180,4.609,181,3.934,182,3.489]],["title/components/AppointmentFormComponent.html",[0,0.627,45,1.175]],["body/components/AppointmentFormComponent.html",[0,0.96,1,1.076,2,1.57,3,0.188,4,0.188,5,1.433,6,1.433,7,1.433,8,1.433,9,0.188,11,1.661,12,2.406,13,1.433,14,2.914,15,2.592,16,1.978,18,1.978,20,0.437,21,1.189,22,2.594,23,0.96,24,0.692,27,0.862,28,0.021,29,1.275,30,0.319,31,0.469,32,0.213,33,0.095,34,2.984,35,1.076,36,1.978,37,1.978,38,1.433,39,2.441,40,1.433,41,0.692,42,1.433,43,1.138,44,1.433,45,1.939,46,2.893,47,1.433,48,1.138,49,1.433,50,1.138,51,1.433,52,1.076,53,1.433,54,1.076,55,1.433,56,1.076,57,1.433,58,1.076,59,1.433,60,1.076,61,1.433,62,1.076,63,1.351,64,1.433,65,1.433,66,0.01,67,0.014,68,0.01,183,3.73,184,4.123,185,2.942,186,5.872,187,5.446,188,4.757,189,3.447,190,3.447]],["title/injectables/AppointmentFormService.html",[191,0.94,192,2.232]],["body/injectables/AppointmentFormService.html",[3,0.282,4,0.282,9,0.282,23,1.164,24,0.752,28,0.021,30,0.477,31,0.702,32,0.319,33,0.143,66,0.015,67,0.018,68,0.015,191,1.631,192,3.873,193,2.595,194,5.269,195,3.91,196,5.165]],["title/components/AppointmentListComponent.html",[0,0.627,48,1.175]],["body/components/AppointmentListComponent.html",[0,0.96,1,1.076,2,1.57,3,0.188,4,0.188,5,1.433,6,1.433,7,1.433,8,1.433,9,0.188,11,1.661,12,2.406,13,1.433,14,2.914,15,2.592,16,1.978,18,1.978,20,0.437,21,1.189,22,2.594,23,0.96,24,0.692,27,0.862,28,0.021,29,1.275,30,0.319,31,0.469,32,0.213,33,0.095,34,2.984,35,1.076,36,1.978,37,1.978,38,1.433,39,2.441,40,1.433,41,0.692,42,1.433,43,1.138,44,1.433,45,1.138,46,2.893,47,1.433,48,1.939,49,1.433,50,1.138,51,1.433,52,1.076,53,1.433,54,1.076,55,1.433,56,1.076,57,1.433,58,1.076,59,1.433,60,1.076,61,1.433,62,1.076,63,1.351,64,1.433,65,1.433,66,0.01,67,0.014,68,0.01,183,3.73,197,4.123,198,2.942,199,5.872,200,5.446,201,4.757,202,3.447,203,3.447]],["title/components/AppointmentViewComponent.html",[0,0.627,50,1.175]],["body/components/AppointmentViewComponent.html",[0,0.96,1,1.076,2,1.57,3,0.188,4,0.188,5,1.433,6,1.433,7,1.433,8,1.433,9,0.188,11,1.661,12,2.406,13,1.433,14,2.914,15,2.592,16,1.978,18,1.978,20,0.437,21,1.189,22,2.594,23,0.96,24,0.692,27,0.862,28,0.021,29,1.275,30,0.319,31,0.469,32,0.213,33,0.095,34,2.984,35,1.076,36,1.978,37,1.978,38,1.433,39,2.441,40,1.433,41,0.692,42,1.433,43,1.138,44,1.433,45,1.138,46,2.893,47,1.433,48,1.138,49,1.433,50,1.939,51,1.433,52,1.076,53,1.433,54,1.076,55,1.433,56,1.076,57,1.433,58,1.076,59,1.433,60,1.076,61,1.433,62,1.076,63,1.351,64,1.433,65,1.433,66,0.01,67,0.014,68,0.01,183,3.73,204,4.123,205,2.942,206,5.872,207,5.446,208,4.757,209,3.447,210,3.447]],["title/components/HomeComponent.html",[0,0.627,52,1.111]],["body/components/HomeComponent.html",[0,0.972,1,1.102,2,1.596,3,0.193,4,0.193,5,1.468,6,1.468,7,1.468,8,1.468,9,0.193,11,1.689,12,2.436,13,1.468,14,2.925,15,2.601,16,2.01,18,2.01,20,0.447,21,1.208,22,2.621,23,0.972,24,0.704,27,0.882,28,0.022,29,1.305,30,0.326,31,0.48,32,0.218,33,0.098,34,3.033,35,1.102,36,2.01,37,2.01,38,1.468,39,2.466,40,1.468,41,0.704,42,1.468,43,1.165,44,1.468,45,1.165,46,2.293,47,1.468,48,1.165,49,1.468,50,1.165,51,1.468,52,1.852,53,1.468,54,1.102,55,1.468,56,1.102,57,1.468,58,1.102,59,1.468,60,1.102,61,1.468,62,1.102,63,1.383,64,1.468,65,1.468,66,0.01,67,0.014,68,0.01,211,3.013,212,5.931,213,5.514,214,4.835,215,3.53,216,3.53]],["title/interfaces/IEndpoint.html",[179,2.437,217,1.479]],["body/interfaces/IEndpoint.html",[3,0.289,4,0.289,9,0.289,28,0.021,32,0.387,66,0.016,67,0.018,68,0.016,85,1.651,88,0.991,175,3.318,179,4.567,217,2.199,218,3.318,219,4.003,220,4.003]],["title/interfaces/IKeyValue.html",[217,1.479,221,2.232]],["body/interfaces/IKeyValue.html",[3,0.28,4,0.28,9,0.28,24,0.746,28,0.022,32,0.317,66,0.015,67,0.018,68,0.015,85,1.918,217,2.131,218,3.215,220,4.651,221,3.855,222,4.374,223,5.125,224,6.144,225,5.125]],["title/interfaces/ILoggerModel.html",[217,1.479,226,2.232]],["body/interfaces/ILoggerModel.html",[3,0.181,4,0.253,9,0.181,20,0.419,28,0.022,30,0.427,32,0.286,33,0.128,41,0.84,66,0.01,67,0.014,68,0.01,74,1.615,75,2.056,80,1.782,85,2.116,88,1.234,89,1.727,93,1.782,176,2.901,217,1.376,218,2.076,226,3.343,227,2.505,228,4.924,229,4.158,230,3.952,231,4.158,232,4.924,233,4.158,234,2.505,235,3.5,236,2.505,237,3.5,238,2.076,239,2.825,240,2.825,241,2.825,242,2.267,243,2.825,244,1.557,245,2.825,246,2.825,247,2.825,248,2.505,249,2.825,250,2.267,251,2.267,252,2.267]],["title/interfaces/IModelBase.html",[217,1.479,253,2.437]],["body/interfaces/IModelBase.html",[3,0.2,4,0.2,9,0.2,20,0.465,28,0.022,32,0.307,33,0.101,41,0.916,66,0.011,67,0.015,68,0.011,73,1.842,74,1.733,75,2.026,79,2.124,80,3.389,81,3.949,82,3.949,83,3.949,85,2.107,88,1.179,89,1.728,93,3.389,98,3.391,217,1.524,218,2.3,242,2.511,250,2.511,251,3.398,252,2.511,253,3.851,254,2.775,255,2.511,256,3.129]],["title/classes/Identity.html",[33,0.098,257,1.316]],["body/classes/Identity.html",[3,0.155,4,0.155,9,0.155,20,0.359,23,0.5,24,1.015,28,0.021,30,0.262,32,0.175,33,0.078,41,0.833,66,0.008,67,0.012,68,0.008,69,2.967,70,1.527,72,3.134,73,3.001,74,1.446,75,2.277,76,3.747,77,2.598,78,3.068,79,3.116,80,2.895,81,3.374,82,3.374,83,3.374,84,3.534,85,2.187,87,0.837,88,1.306,89,0.709,93,2.895,94,5.213,95,2.147,96,2.147,97,2.147,98,2.702,99,2.147,100,2.147,101,2.147,257,1.531,258,2.42,259,5.264,260,4.141,261,2.836,262,2.836,263,2.836,264,2.836,265,2.836,266,2.836,267,2.836,268,2.836,269,2.836,270,1.779,271,2.836,272,2.42,273,2.836]],["title/components/IdentityComponent.html",[0,0.627,54,1.111]],["body/components/IdentityComponent.html",[0,0.967,1,1.09,2,1.585,3,0.191,4,0.191,5,1.452,6,1.452,7,1.452,8,1.452,9,0.191,11,1.676,12,2.423,13,1.452,14,2.92,15,2.597,16,1.996,18,1.996,20,0.443,21,1.2,22,2.609,23,0.967,24,0.699,27,0.873,28,0.021,29,1.291,30,0.444,31,0.475,32,0.216,33,0.097,35,1.09,36,1.996,37,1.996,38,1.452,39,2.455,40,1.452,41,0.699,42,1.452,43,1.153,44,1.452,45,1.153,46,2.28,47,1.452,48,1.153,49,1.452,50,1.153,51,1.452,52,1.09,53,1.452,54,1.843,55,1.452,56,1.09,57,1.452,58,1.09,59,1.452,60,1.09,61,1.452,62,1.09,63,1.369,64,1.452,65,1.452,66,0.01,67,0.014,68,0.01,121,2.644,257,1.775,274,2.981,275,5.484,276,4.8,277,3.493,278,3.493,279,3.287,280,4.8,281,2.981,282,3.493,283,2.981,284,3.493,285,2.981]],["title/guards/IdentityGuard.html",[159,2.062,286,2.694]],["body/guards/IdentityGuard.html",[3,0.22,4,0.22,9,0.22,11,1.405,20,0.51,21,1.319,23,0.709,24,0.768,27,1.005,28,0.022,30,0.544,31,0.547,32,0.249,33,0.111,41,0.768,66,0.012,67,0.016,68,0.012,87,1.558,88,0.989,89,1.319,98,2.021,158,1.777,159,3.057,166,5.336,191,1.395,257,1.951,287,3.045,288,3.433,289,2.523,290,2.312,291,3.656,292,4.022,293,5.277,294,5.336,295,5.889,296,6.252,297,4.022,298,3.433,299,2.021,300,1.487,301,1.672,302,4.022,303,3.433,304,2.483,305,2.755,306,2.755]],["title/modules/IdentityModule.html",[124,1.394,307,2.062]],["body/modules/IdentityModule.html",[3,0.204,4,0.204,9,0.204,28,0.022,30,0.627,31,0.508,32,0.231,33,0.103,35,1.167,54,2.038,56,2.038,60,2.038,66,0.011,67,0.015,68,0.011,124,1.465,126,1.465,127,2.013,128,3.563,129,2.166,130,3.563,131,1.879,138,3.154,139,2.345,140,1.879,142,2.706,143,2.706,307,4.134,308,3.191,309,3.191,310,3.191,311,3.191,312,4.094,313,3.513,314,3.739,315,3.443,316,2.561,317,5.027,318,2.345,319,3.739,320,3.191,321,3.191,322,2.83,323,2.561,324,3.739]],["title/guards/IdentityResolver.html",[286,2.694,325,2.694]],["body/guards/IdentityResolver.html",[3,0.222,4,0.222,9,0.222,11,1.418,20,0.514,21,1.327,23,0.716,24,0.773,27,1.015,28,0.022,30,0.58,31,0.552,32,0.251,33,0.112,41,0.773,66,0.012,67,0.016,68,0.012,87,1.568,88,0.995,89,1.327,158,1.793,191,1.403,257,1.963,287,3.072,289,2.546,290,2.32,291,3.664,294,5.355,298,3.464,299,2.039,300,1.501,301,1.688,325,4.018,326,3.464,327,6.274,328,4.059,329,5.309,330,4.059,331,4.478,332,4.018,333,2.185]],["title/modules/IdentityRoutingModule.html",[124,1.394,312,2.232]],["body/modules/IdentityRoutingModule.html",[0,1.057,3,0.228,4,0.228,9,0.228,28,0.022,30,0.607,31,0.568,32,0.258,33,0.115,54,1.688,56,1.688,60,1.688,66,0.012,67,0.016,68,0.012,126,1.635,131,2.097,142,2.247,143,2.91,156,3.702,157,3.474,158,1.844,161,1.964,162,4.801,169,3.562,170,3.562,171,3.562,279,3.702,312,3.391,320,3.562,321,3.562,334,4.174,335,4.174,336,3.562,337,3.562]],["title/injectables/IdentityService.html",[191,0.94,290,1.316]],["body/injectables/IdentityService.html",[3,0.122,4,0.122,9,0.122,20,0.283,21,0.865,23,0.394,24,0.898,27,1.29,28,0.022,29,0.826,30,0.526,31,0.304,32,0.138,33,0.062,41,0.694,66,0.015,67,0.01,68,0.007,69,2.818,74,1.209,75,2.174,79,1.294,85,1.08,87,1.408,88,1.102,89,1.192,90,1.294,98,1.739,140,1.123,161,1.051,191,0.915,193,1.123,230,2.37,244,1.628,257,2.481,270,1.402,272,2.953,290,1.279,300,0.826,301,1.983,304,2.428,305,2.37,332,4.131,333,1.203,338,1.907,339,4.235,340,3.615,341,4.235,342,4.235,343,4.769,344,3.46,345,3.46,346,4.769,347,3.46,348,2.234,349,2.567,350,3.615,351,4.07,352,3.46,353,2.234,354,3.46,355,2.234,356,3.46,357,2.234,358,2.234,359,3.46,360,2.234,361,2.657,362,2.128,363,2.234,364,3.46,365,2.234,366,2.234,367,3.905,368,1.203,369,1.907,370,1.907,371,1.691,372,1.907,373,2.234,374,1.294,375,3.46,376,2.234,377,3.46,378,2.234,379,3.46,380,3.46,381,3.46,382,2.234,383,3.46,384,2.953,385,3.46,386,2.234,387,2.234,388,2.234,389,2.234,390,2.234,391,2.953,392,3.46,393,2.953,394,2.234,395,2.234,396,2.234,397,1.907,398,2.234,399,2.234,400,2.234,401,1.907,402,2.234,403,3.206,404,2.234,405,3.46,406,2.234,407,2.234,408,2.234,409,2.234,410,2.234]],["title/classes/LoggerModel.html",[33,0.098,238,2.232]],["body/classes/LoggerModel.html",[3,0.166,4,0.303,9,0.166,20,0.385,23,0.535,24,0.955,28,0.022,30,0.402,32,0.269,33,0.153,41,0.633,66,0.009,67,0.013,68,0.009,70,1.635,74,1.52,75,2.251,80,2.737,85,2.143,87,0.897,88,1.247,89,0.759,90,1.76,93,2.342,176,1.905,217,1.263,226,3.483,227,2.299,228,2.592,229,3.803,230,2.08,231,3.803,232,2.592,233,3.803,234,2.299,235,3.294,236,2.299,237,3.294,238,2.73,239,4.339,240,4.339,241,4.339,242,2.98,243,2.592,244,1.429,245,2.592,246,2.592,247,2.592,248,2.299,249,2.592,250,2.08,251,2.08,252,2.08,255,2.08,411,4.351,412,3.037,413,3.037,414,3.037,415,3.037,416,3.037,417,3.037,418,3.037]],["title/injectables/LoggerService.html",[191,0.94,419,2.062]],["body/injectables/LoggerService.html",[3,0.158,4,0.158,9,0.158,20,0.367,21,1.051,23,0.511,24,0.904,27,1.238,28,0.022,29,1.831,30,0.533,31,0.394,32,0.179,33,0.08,41,0.721,66,0.009,67,0.012,68,0.009,74,1.469,75,2.024,85,1.546,87,1.462,88,1.127,89,1.238,90,1.679,173,2.73,191,1.112,193,1.456,221,3.619,226,3.408,231,2.881,238,2.639,244,1.979,255,1.985,300,1.071,301,2.696,333,1.56,361,3.106,362,2.899,367,3.184,374,1.679,419,2.437,420,2.473,421,6.018,422,4.952,423,4.206,424,4.206,425,5.433,426,1.985,427,4.206,428,2.639,429,4.206,430,2.898,431,4.206,432,2.898,433,2.898,434,2.898,435,2.898,436,1.818,437,2.473,438,2.898,439,2.898,440,4.206,441,2.473,442,4.206,443,2.898,444,2.898,445,2.898,446,2.898,447,2.898,448,2.898,449,2.898,450,2.898,451,2.898,452,2.898,453,2.898,454,2.898,455,2.898,456,2.898]],["title/components/LoginComponent.html",[0,0.627,56,1.111]],["body/components/LoginComponent.html",[0,0.751,1,0.703,2,1.15,3,0.123,4,0.123,5,0.937,6,0.937,7,0.937,8,0.937,9,0.123,11,1.217,12,1.881,13,0.937,14,2.691,15,2.393,16,1.448,18,1.448,20,0.286,21,0.871,22,2.117,23,0.397,24,0.754,27,1.064,28,0.022,29,1.288,30,0.528,31,0.306,32,0.139,33,0.062,35,0.703,36,1.448,37,1.448,38,0.937,39,1.992,40,0.937,41,0.697,42,0.937,43,0.744,44,0.937,45,0.744,46,1.77,47,0.937,48,0.744,49,0.937,50,0.744,51,0.937,52,0.703,53,0.937,54,0.703,55,0.937,56,1.496,57,0.937,58,0.703,59,0.937,60,0.703,61,0.937,62,0.703,63,0.883,64,0.937,65,0.937,66,0.007,67,0.01,68,0.007,69,0.996,74,1.217,75,1.89,77,3.005,78,3.005,85,1.329,87,1.029,88,0.798,89,0.871,158,0.996,161,1.06,257,1.288,270,1.413,279,4.376,289,1.413,290,1.771,291,3.074,299,1.132,300,0.833,301,1.448,304,1.06,313,2.579,318,1.413,322,1.706,323,1.543,362,1.132,368,1.213,397,2.973,457,1.923,458,4.258,459,3.483,460,4.145,461,2.973,462,3.634,463,3.483,464,2.973,465,2.253,466,1.923,467,2.253,468,2.253,469,2.973,470,1.923,471,2.253,472,2.253,473,2.253,474,2.253,475,2.253,476,2.253,477,1.923,478,1.923,479,1.923,480,1.923,481,2.973,482,1.923,483,1.923,484,2.973,485,1.923,486,1.923,487,1.923,488,2.973,489,1.923,490,1.923,491,1.923,492,1.923,493,1.923,494,2.253,495,3.483,496,1.923,497,3.483,498,2.973,499,2.973,500,4.089,501,4.089,502,2.973,503,2.973,504,3.483]],["title/injectables/MessageService.html",[191,0.94,349,1.916]],["body/injectables/MessageService.html",[3,0.182,4,0.182,9,0.182,20,0.422,21,1.16,23,0.586,24,0.675,27,0.831,28,0.022,29,1.23,30,0.494,31,0.452,32,0.206,33,0.092,41,0.675,66,0.01,67,0.014,68,0.01,75,1.668,85,1.967,87,1.37,88,1.18,89,1.16,140,1.671,191,1.226,193,1.671,230,3.66,300,1.23,305,3.178,306,3.96,349,2.498,361,2.087,362,1.671,371,4.377,372,2.839,384,2.839,391,2.839,401,4.561,505,2.839,506,4.64,507,3.326,508,5.782,509,3.326,510,4.64,511,4.64,512,3.326,513,6.082,514,2.518,515,2.518,516,3.326,517,3.326,518,3.326,519,3.326,520,3.326,521,3.326,522,3.326,523,3.326,524,3.326,525,2.839,526,3.326,527,3.326,528,3.326,529,3.326,530,3.326,531,3.326,532,3.326,533,3.326,534,3.326,535,3.326,536,2.839,537,4.935,538,3.326,539,4.935,540,3.326,541,3.326,542,3.326,543,3.326]],["title/classes/ModelBase.html",[33,0.098,73,1.788]],["body/classes/ModelBase.html",[3,0.189,4,0.189,9,0.189,20,0.438,23,0.609,24,0.951,28,0.022,32,0.295,33,0.095,41,0.898,66,0.01,67,0.014,68,0.01,70,1.861,73,2.394,74,1.664,75,2.243,79,3.16,80,3.165,81,3.688,82,3.688,83,3.688,85,1.99,87,1.021,88,1.224,89,0.864,90,2.003,93,3.32,98,3.203,217,1.437,242,3.264,250,2.367,251,3.264,252,2.367,253,4.026,254,2.616,255,3.264,256,2.95,544,4.765,545,3.456,546,3.456,547,3.456,548,3.456,549,3.456]],["title/components/NavigationComponent.html",[0,0.627,58,1.111]],["body/components/NavigationComponent.html",[0,0.778,1,0.745,2,1.202,3,0.13,4,0.13,5,0.992,6,0.992,7,0.992,8,0.992,9,0.13,11,1.272,12,1.95,13,0.992,14,2.725,15,2.423,16,1.514,18,1.514,20,0.302,21,0.91,22,2.182,23,0.421,24,0.719,27,0.91,28,0.022,29,1.346,30,0.491,31,0.325,32,0.148,33,0.066,35,0.745,36,1.514,37,1.514,38,0.992,39,2.053,40,0.992,41,0.642,42,0.992,43,0.788,44,0.992,45,0.788,46,1.835,47,0.992,48,0.788,49,0.992,50,0.788,51,0.992,52,0.745,53,0.992,54,0.745,55,0.992,56,0.745,57,0.992,58,1.542,59,0.992,60,0.745,61,0.992,62,0.745,63,0.935,64,0.992,65,0.992,66,0.013,67,0.011,68,0.007,69,2.575,74,1.272,75,1.749,87,0.705,88,0.682,89,0.597,111,1.807,112,4.537,113,5.127,114,3.107,116,2.037,119,2.037,121,1.807,158,1.055,229,3.023,257,1.346,270,1.497,279,2.493,281,2.037,283,3.107,285,2.037,289,1.497,290,1.826,291,3.137,299,1.199,300,0.883,301,0.992,303,2.037,374,1.383,550,2.037,551,4.414,552,4.414,553,3.641,554,5.603,555,3.641,556,2.387,557,2.387,558,3.641,559,2.387,560,2.387,561,2.387,562,3.641,563,3.641,564,3.641,565,3.641,566,3.641,567,3.641,568,3.641,569,3.641,570,4.414,571,4.414,572,2.387,573,2.387,574,3.641,575,3.641,576,5.827,577,2.387,578,3.107,579,3.641,580,3.641,581,2.387,582,2.387,583,2.387,584,2.387,585,2.387,586,3.641,587,3.641,588,2.037,589,2.387,590,2.387,591,2.387,592,2.387,593,2.387,594,2.037,595,2.387,596,2.387,597,2.387]],["title/classes/Profile.html",[33,0.098,598,2.694]],["body/classes/Profile.html",[3,0.188,4,0.188,9,0.188,20,0.437,23,0.96,24,1.004,28,0.022,30,0.319,32,0.213,33,0.095,41,0.692,66,0.01,67,0.014,68,0.01,70,1.856,72,3.601,73,3.392,74,1.661,75,2.278,76,3.417,79,2.756,80,2.561,81,2.984,82,2.984,83,2.984,85,2.133,88,1.28,93,2.561,94,4.822,95,2.609,96,2.609,97,2.609,98,2.39,99,2.609,100,2.609,101,2.609,102,2.609,103,2.942,598,3.601,599,2.942,600,5.446,601,5.446,602,5.446,603,4.757,604,3.447,605,3.447,606,3.447]],["title/components/RegisterComponent.html",[0,0.627,60,1.111]],["body/components/RegisterComponent.html",[0,0.71,1,0.645,2,1.075,3,0.113,4,0.113,5,0.859,6,0.859,7,0.859,8,0.859,9,0.113,11,1.137,12,1.78,13,0.859,14,2.639,15,2.347,16,1.354,18,1.354,20,0.262,21,0.814,22,2.02,23,0.364,24,0.724,27,1.007,28,0.022,29,1.204,30,0.511,31,0.281,32,0.128,33,0.057,35,0.645,36,1.354,37,1.354,38,0.859,39,1.901,40,0.859,41,0.665,42,0.859,43,0.682,44,0.859,45,0.682,46,1.675,47,0.859,48,0.682,49,0.859,50,0.682,51,0.859,52,0.645,53,0.859,54,0.645,55,0.859,56,0.645,57,0.859,58,0.645,59,0.859,60,1.427,61,0.859,62,0.645,63,0.81,64,0.859,65,0.859,66,0.006,67,0.01,68,0.006,69,1.78,74,1.137,75,1.84,76,3.314,77,3.468,78,3.468,85,1.258,87,0.962,88,0.755,89,0.814,158,0.913,244,1.532,257,1.204,270,1.297,289,1.297,290,1.691,291,2.977,299,1.039,300,0.764,301,1.354,304,0.973,313,2.461,318,1.297,322,1.565,323,1.416,336,5.15,368,1.113,460,3.999,461,2.779,462,3.439,464,2.779,466,1.764,469,2.779,470,4.719,477,1.764,478,1.764,479,1.764,480,1.764,481,2.779,482,1.764,483,1.764,484,2.779,485,1.764,486,1.764,487,1.764,488,2.779,489,1.764,490,1.764,491,1.764,492,1.764,493,1.764,496,1.764,499,2.779,500,3.902,501,3.902,502,2.779,503,2.779,536,2.779,537,4.509,539,4.509,607,1.764,608,4.029,609,3.256,610,3.256,611,2.067,612,2.067,613,2.067,614,2.067,615,2.067,616,2.067,617,2.067,618,2.067,619,2.067,620,3.256,621,5.283,622,5.283,623,4.029,624,2.067,625,4.029,626,3.256]],["title/interceptors/RequestInterceptor.html",[627,2.694,628,2.437]],["body/interceptors/RequestInterceptor.html",[3,0.205,4,0.205,9,0.205,11,1.313,20,0.476,21,1.261,23,0.663,24,0.734,27,0.94,28,0.022,30,0.587,31,0.511,32,0.232,33,0.104,41,0.734,66,0.011,67,0.015,68,0.011,87,1.49,88,1.067,89,1.261,111,2.846,161,1.769,173,3.059,191,1.334,257,2.106,290,2.251,299,1.889,300,1.39,301,1.563,304,1.769,331,4.311,333,2.024,368,2.024,374,3.3,426,2.575,428,3.166,436,2.359,628,3.456,629,3.209,630,3.209,631,4.307,632,3.76,633,4.307,634,5.195,635,5.195,636,3.76,637,3.209,638,3.209,639,4.307,640,3.76,641,5.046,642,5.046,643,3.76,644,3.76,645,3.76,646,3.76,647,3.76,648,3.76]],["title/components/ScheduleComponent.html",[0,0.627,62,1.111]],["body/components/ScheduleComponent.html",[0,0.976,1,1.111,2,1.605,3,0.36,4,0.194,5,1.479,6,1.479,7,1.479,8,1.479,9,0.194,11,1.698,12,2.447,13,1.479,14,2.929,15,2.605,16,2.021,18,2.021,20,0.451,21,1.215,22,2.629,23,0.976,24,0.708,27,0.889,28,0.021,29,1.316,30,0.329,31,0.484,32,0.22,33,0.098,35,1.111,36,2.021,37,2.021,38,1.479,39,2.474,40,1.479,41,0.708,42,1.479,43,1.175,44,1.479,45,1.175,46,2.302,47,1.479,48,1.175,49,1.479,50,1.175,51,1.479,52,1.111,53,1.479,54,1.111,55,1.479,56,1.111,57,1.479,58,1.111,59,1.479,60,1.111,61,1.479,62,1.858,63,2.17,64,1.479,65,1.479,66,0.01,67,0.014,68,0.01,649,3.037,650,5.537,651,4.861,652,3.558,653,3.558]],["title/modules/ScheduleModule.html",[124,1.394,654,2.437]],["body/modules/ScheduleModule.html",[3,0.197,4,0.197,9,0.197,28,0.022,30,0.621,31,0.489,32,0.222,33,0.099,35,1.123,45,2.13,48,2.13,50,2.13,62,2.014,66,0.011,67,0.014,68,0.011,124,1.409,126,1.409,127,1.936,128,3.493,129,2.084,130,3.493,131,1.807,138,3.072,139,2.256,140,1.807,142,2.636,143,2.636,184,2.723,192,4.048,197,2.723,204,2.723,315,3.354,316,2.463,323,2.463,654,4.906,655,3.07,656,3.07,657,3.07,658,3.07,659,4.048,660,3.597,661,5.568,662,3.597,663,3.597,664,3.597,665,3.07,666,3.597,667,3.597]],["title/modules/ScheduleRoutingModule.html",[124,1.394,659,2.232]],["body/modules/ScheduleRoutingModule.html",[0,0.827,3,0.256,4,0.256,9,0.256,28,0.022,30,0.585,31,0.638,32,0.29,33,0.13,62,1.817,66,0.014,67,0.017,68,0.014,126,1.838,131,2.357,142,2.525,143,3.134,156,3.987,157,3.667,158,2.072,161,2.207,162,3.55,337,4.003,659,3.652,665,4.003,668,4.69]],["title/injectables/ScheduleService.html",[191,0.94,669,2.062]],["body/injectables/ScheduleService.html",[3,0.269,4,0.269,9,0.269,23,0.867,24,0.716,28,0.021,30,0.554,31,0.669,32,0.304,33,0.136,41,0.716,66,0.014,67,0.018,68,0.014,87,1.452,88,0.921,89,1.229,191,1.584,193,2.47,300,1.818,350,5.114,351,5.742,368,2.647,669,3.472,670,4.196,671,4.916,672,4.916]],["title/modules/SharedModule.html",[124,1.394,137,2.232]],["body/modules/SharedModule.html",[1,1.96,2,1.397,3,0.122,4,0.122,9,0.122,21,0.557,24,0.325,27,0.557,28,0.022,30,0.632,31,0.303,32,0.138,33,0.062,35,0.696,41,0.325,52,1.96,58,1.96,66,0.007,67,0.01,68,0.007,87,0.659,88,0.418,89,0.557,124,0.874,126,1.867,127,1.201,128,2.654,129,1.292,130,2.989,131,2.126,137,4.413,138,2.168,139,1.399,140,1.121,142,1.86,143,2.278,145,1.688,156,1.528,158,0.985,159,2.002,160,1.904,161,1.991,173,2.59,229,1.528,231,1.528,233,1.528,234,1.688,290,2.016,291,2.278,299,1.121,300,0.825,301,0.927,304,1.05,306,2.367,307,3.638,315,2.367,316,1.528,349,2.936,362,2.126,368,1.201,370,1.904,374,1.292,419,3.296,428,2.168,436,1.399,514,1.688,515,1.688,628,2.367,669,3.16,673,1.904,674,2.23,675,1.904,676,1.904,677,1.904,678,3.16,679,1.688,680,3.456,681,2.23,682,3.456,683,2.23,684,4.231,685,2.23,686,4.231,687,2.949,688,2.949,689,2.23,690,2.23,691,2.23,692,2.23,693,2.23,694,2.23,695,2.23,696,2.23,697,2.23,698,2.367,699,2.23,700,1.904,701,1.904,702,3.202,703,2.23,704,2.23,705,2.23,706,2.23,707,4.231,708,2.23,709,3.456,710,3.456]],["title/injectables/StorageService.html",[191,0.94,678,2.062]],["body/injectables/StorageService.html",[3,0.128,4,0.128,9,0.128,20,0.553,21,0.898,23,0.413,24,0.843,27,1.223,28,0.022,30,0.488,31,0.319,32,0.145,33,0.065,41,0.768,66,0.007,67,0.011,68,0.007,73,1.178,74,1.254,75,1.912,85,2.014,87,1.809,88,1.191,89,1.318,90,1.359,102,1.775,161,2.302,173,2.458,191,0.949,193,1.178,220,3.703,221,3.633,237,1.775,244,1.69,300,0.867,301,2.546,304,2.725,332,4.212,333,1.262,340,4.749,361,2.253,362,2.458,367,3.992,403,2.719,426,1.606,428,2.253,436,1.471,437,2.001,441,2.001,678,2.081,711,2.001,712,5.564,713,3.591,714,3.591,715,3.591,716,3.591,717,3.591,718,2.345,719,2.345,720,6.599,721,2.345,722,2.345,723,2.345,724,5.974,725,2.345,726,2.345,727,2.345,728,2.345,729,2.345,730,4.365,731,2.345,732,2.345,733,2.345,734,2.345,735,2.345,736,2.345,737,2.345,738,3.591,739,3.591,740,2.345,741,2.345,742,2.345,743,2.345,744,2.345,745,2.345,746,3.591,747,2.345,748,2.345,749,2.345,750,2.345,751,2.345,752,2.345,753,3.591,754,2.345,755,4.365,756,2.345,757,2.345,758,2.345,759,2.345,760,2.345]],["title/interceptors/TokenInterceptor.html",[627,2.694,698,2.437]],["body/interceptors/TokenInterceptor.html",[3,0.192,4,0.192,9,0.192,11,1.226,20,0.445,21,1.204,23,0.619,24,0.701,27,0.878,28,0.022,30,0.606,31,0.477,32,0.217,33,0.097,41,0.701,66,0.01,67,0.014,68,0.01,87,1.423,88,0.902,89,1.204,161,2.588,173,2.973,191,1.273,257,2.188,259,4.111,290,2.188,299,1.764,300,1.298,301,1.46,304,1.652,331,4.162,333,1.89,368,1.89,369,2.997,374,3.186,426,2.405,428,3.022,436,2.203,498,2.997,629,2.997,631,4.111,633,4.111,634,5.051,635,5.051,637,2.997,638,2.997,639,4.111,698,3.299,761,2.997,762,3.511,763,3.511,764,3.511,765,3.511,766,4.817,767,2.997,768,3.511,769,3.511,770,3.511,771,3.511,772,3.511,773,3.511,774,3.511,775,3.511,776,3.511,777,3.511,778,3.511]],["title/injectables/UserFormService.html",[191,0.94,313,1.916]],["body/injectables/UserFormService.html",[3,0.218,4,0.218,9,0.218,20,0.505,21,1.311,23,1.034,24,0.853,27,1.311,28,0.022,30,0.485,31,0.542,32,0.246,33,0.11,66,0.012,67,0.015,68,0.012,75,2.075,76,2.5,77,3.291,78,3.291,191,1.386,193,2.003,195,3.017,244,3.188,304,2.468,313,2.824,318,2.5,460,4.438,779,5.317,780,6.23,781,6.23,782,3.986,783,3.986,784,3.986,785,6.646,786,3.986,787,6.473,788,3.986]],["title/coverage.html",[789,4.149]],["body/coverage.html",[0,1.157,1,0.839,2,0.887,9,0.147,10,2.293,28,0.022,33,0.162,43,0.887,45,0.887,48,0.887,50,0.887,52,0.839,54,0.839,56,0.839,58,0.839,60,0.839,62,0.839,66,0.008,67,0.012,68,0.008,69,1.187,71,2.293,73,1.35,88,0.503,107,2.293,126,1.053,148,2.725,159,1.557,173,1.35,174,2.293,175,2.496,179,1.84,183,3.246,184,2.034,185,2.293,191,1.602,192,1.685,194,2.293,195,3.012,197,2.034,198,2.293,204,2.034,205,2.293,211,2.293,217,2.179,219,2.034,221,1.685,222,2.293,226,1.685,227,3.012,238,1.685,244,1.264,248,5.555,253,1.84,254,3.012,257,0.993,258,2.293,274,2.293,286,3.012,288,2.293,290,0.993,313,1.446,325,2.034,326,2.293,338,2.293,349,1.446,419,1.557,420,2.293,457,2.293,505,2.293,550,2.293,598,2.034,599,2.293,607,2.293,627,3.012,628,1.84,630,2.293,649,2.293,669,1.557,670,2.293,678,1.557,679,3.588,698,1.84,702,2.034,711,2.293,761,2.293,779,2.293,789,2.293,790,2.686,791,2.686,792,2.686,793,6.712,794,6.643,795,2.686,796,2.686,797,3.979,798,4.739,799,4.739,800,2.686,801,2.686,802,2.686,803,3.979,804,2.686,805,6.359,806,3.396,807,3.396,808,3.396,809,2.034,810,2.293,811,2.686,812,2.686]],["title/dependencies.html",[127,2.305,813,2.969]],["body/dependencies.html",[28,0.022,31,0.618,66,0.013,67,0.017,68,0.013,127,2.447,129,2.634,145,4.321,146,4.321,158,2.009,235,3.441,236,3.441,316,3.113,318,2.852,333,2.447,514,3.441,515,3.441,578,3.88,814,4.546,815,6.028,816,4.546,817,4.546,818,4.546,819,4.546,820,4.546,821,4.546,822,4.546,823,4.546,824,4.546,825,4.546,826,4.546,827,4.546,828,4.546,829,4.546,830,4.546,831,4.546,832,4.546,833,4.546]],["title/miscellaneous/enumerations.html",[834,1.72,835,3.654]],["body/miscellaneous/enumerations.html",[3,0.299,20,0.539,28,0.021,66,0.013,67,0.016,68,0.013,69,2.418,181,4.671,233,3.748,257,2.024,291,2.946,362,3.645,371,4.143,393,5.64,403,4.143,809,4.143,834,2.465,835,3.631,836,4.254,837,5.473,838,4.254,839,4.254,840,4.254,841,4.254,842,4.254,843,4.254,844,5.473,845,5.473,846,4.254,847,5.473,848,5.473,849,5.473,850,4.254,851,4.254,852,4.254,853,4.254,854,4.254,855,4.671]],["title/index.html",[20,0.376,767,2.534,856,2.969]],["body/index.html",[0,1.045,4,0.222,15,1.505,28,0.016,41,0.593,66,0.012,67,0.016,68,0.012,140,2.046,182,3.082,244,1.916,588,5.361,815,3.475,855,4.54,857,4.071,858,5.319,859,4.071,860,5.925,861,5.925,862,4.071,863,4.071,864,6.518,865,6.81,866,4.071,867,4.071,868,4.071,869,4.071,870,4.071,871,4.071,872,4.071,873,4.071,874,4.071,875,4.071,876,5.925,877,5.925,878,4.071,879,6.518,880,4.071,881,4.071,882,4.071,883,4.071,884,4.071,885,4.071,886,5.319,887,5.319,888,6.282,889,4.071,890,5.319,891,5.319,892,4.071,893,4.071,894,4.071,895,4.071,896,5.925,897,4.071,898,4.071,899,4.071,900,3.082,901,4.071,902,4.071,903,4.071]],["title/modules.html",[126,1.905]],["body/modules.html",[28,0.018,66,0.015,67,0.018,68,0.015,125,3.444,126,1.97,136,3.154,137,3.154,146,5.132,307,2.913,312,3.154,654,3.444,659,3.154,904,6.779,905,6.779,906,7.134,907,6.527,908,6.527]],["title/overview.html",[900,3.68]],["body/overview.html",[1,1.956,2,0.985,28,0.021,35,0.931,43,2.068,45,1.662,48,1.662,50,1.662,52,1.956,54,1.571,56,1.571,58,1.956,60,1.571,62,1.571,66,0.009,67,0.013,68,0.009,70,1.606,124,1.169,125,4.472,126,1.169,127,1.606,128,1.871,129,1.728,130,1.871,131,1.499,132,2.545,133,2.545,134,2.545,135,2.545,136,3.157,137,4.527,138,2.694,139,1.871,140,1.499,157,1.728,192,3.157,193,1.499,218,1.871,287,2.258,290,1.861,307,4.068,308,2.545,309,2.545,310,2.545,311,2.545,312,3.157,313,2.71,349,2.71,419,2.916,525,2.545,594,2.545,654,4.723,655,2.545,656,2.545,657,2.545,658,2.545,659,3.157,669,2.916,673,2.545,675,2.545,676,2.545,677,2.545,678,2.916,900,2.258,909,4.295,910,2.982,911,2.982,912,2.982]],["title/routes.html",[157,2.817]],["body/routes.html",[28,0.019,66,0.017,67,0.019,68,0.017,157,3.315]],["title/miscellaneous/typealiases.html",[834,1.72,913,4.281]],["body/miscellaneous/typealiases.html",[20,0.698,28,0.019,66,0.016,67,0.019,68,0.016,88,1.201,175,4.022,176,3.455,219,4.169,834,3.191,914,5.508,915,5.508]],["title/miscellaneous/variables.html",[834,1.72,916,3.654]],["body/miscellaneous/variables.html",[1,1.157,2,1.65,20,0.47,28,0.022,52,1.157,58,1.157,66,0.011,67,0.015,68,0.011,88,1.284,126,1.959,148,4.145,159,2.148,175,4.347,176,2.326,182,3.784,290,1.371,305,2.539,306,3.423,307,2.148,315,2.539,349,1.996,361,4.244,362,3.4,419,2.148,669,2.148,678,2.148,679,2.806,687,3.164,688,3.164,700,3.164,701,3.164,702,3.784,806,3.164,807,3.164,808,3.164,809,3.784,810,4.266,834,2.148,916,3.164,917,5.655,918,4.999,919,4.999,920,4.999,921,3.707,922,3.707,923,4.999,924,4.999]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentFormComponent.html":{},"injectables/AppointmentFormService.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":248,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"coverage.html":{}}}],["0.10.2",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":285,"title":{},"body":{"components/IdentityComponent.html":{},"components/NavigationComponent.html":{}}}],["1",{"_index":746,"title":{},"body":{"injectables/StorageService.html":{}}}],["1.1.0",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":594,"title":{},"body":{"components/NavigationComponent.html":{},"overview.html":{}}}],["1000",{"_index":531,"title":{},"body":{"injectables/MessageService.html":{}}}],["100vh",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":910,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":815,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["13.2.0",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["1500",{"_index":529,"title":{},"body":{"injectables/MessageService.html":{}}}],["18px",{"_index":590,"title":{},"body":{"components/NavigationComponent.html":{}}}],["2",{"_index":525,"title":{},"body":{"injectables/MessageService.html":{},"overview.html":{}}}],["2.0.0",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":580,"title":{},"body":{"components/NavigationComponent.html":{}}}],["3.5.1",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":573,"title":{},"body":{"components/NavigationComponent.html":{}}}],["4",{"_index":912,"title":{},"body":{"overview.html":{}}}],["4.5.0",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":492,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["401",{"_index":482,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["5",{"_index":284,"title":{},"body":{"components/IdentityComponent.html":{}}}],["50px",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["5px",{"_index":597,"title":{},"body":{"components/NavigationComponent.html":{}}}],["6",{"_index":911,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":909,"title":{},"body":{"overview.html":{}}}],["about'},{'name",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":69,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"modules/AppRoutingModule.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["account(this.formgroup.value.username",{"_index":616,"title":{},"body":{"components/RegisterComponent.html":{}}}],["account(value.username",{"_index":474,"title":{},"body":{"components/LoginComponent.html":{}}}],["account:10",{"_index":266,"title":{},"body":{"classes/Identity.html":{}}}],["account:11",{"_index":264,"title":{},"body":{"classes/Identity.html":{}}}],["account:12",{"_index":265,"title":{},"body":{"classes/Identity.html":{}}}],["account:13",{"_index":267,"title":{},"body":{"classes/Identity.html":{}}}],["account:14",{"_index":268,"title":{},"body":{"classes/Identity.html":{}}}],["account:15",{"_index":269,"title":{},"body":{"classes/Identity.html":{}}}],["account:4",{"_index":263,"title":{},"body":{"classes/Identity.html":{}}}],["account:5",{"_index":262,"title":{},"body":{"classes/Identity.html":{}}}],["account:6",{"_index":261,"title":{},"body":{"classes/Identity.html":{}}}],["action",{"_index":586,"title":{},"body":{"components/NavigationComponent.html":{}}}],["action:hover",{"_index":591,"title":{},"body":{"components/NavigationComponent.html":{}}}],["actions",{"_index":581,"title":{},"body":{"components/NavigationComponent.html":{}}}],["activatedroutesnapshot",{"_index":294,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{}}}],["actual_component",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["again",{"_index":390,"title":{},"body":{"injectables/IdentityService.html":{}}}],["aliases",{"_index":914,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":570,"title":{},"body":{"components/NavigationComponent.html":{}}}],["amount",{"_index":593,"title":{},"body":{"components/NavigationComponent.html":{}}}],["angular",{"_index":860,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":316,"title":{},"body":{"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":368,"title":{},"body":{"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["angular/compiler",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppointmentFormComponent.html":{},"injectables/AppointmentFormService.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":318,"title":{},"body":{"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFormService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["api",{"_index":564,"title":{},"body":{"components/NavigationComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"index.html":{}}}],["app.component",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":43,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":646,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["appmodule",{"_index":125,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointment",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["appointmentformcomponent",{"_index":45,"title":{"components/AppointmentFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"coverage.html":{},"overview.html":{}}}],["appointmentformservice",{"_index":192,"title":{"injectables/AppointmentFormService.html":{}},"body":{"injectables/AppointmentFormService.html":{},"modules/ScheduleModule.html":{},"coverage.html":{},"overview.html":{}}}],["appointmentlistcomponent",{"_index":48,"title":{"components/AppointmentListComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"coverage.html":{},"overview.html":{}}}],["appointmentviewcomponent",{"_index":50,"title":{"components/AppointmentViewComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"coverage.html":{},"overview.html":{}}}],["approutingmodule",{"_index":136,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":173,"title":{"classes/AppSettings.html":{}},"body":{"classes/AppSettings.html":{},"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["args",{"_index":255,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{}}}],["args[key",{"_index":252,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["array",{"_index":441,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/StorageService.html":{}}}],["artifacts",{"_index":880,"title":{},"body":{"index.html":{}}}],["async",{"_index":342,"title":{},"body":{"injectables/IdentityService.html":{}}}],["authentication",{"_index":847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authorization",{"_index":647,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authreq",{"_index":643,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authstate",{"_index":339,"title":{},"body":{"injectables/IdentityService.html":{}}}],["auto",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/IdentityComponent.html":{},"components/NavigationComponent.html":{}}}],["automatically",{"_index":870,"title":{},"body":{"index.html":{}}}],["available",{"_index":908,"title":{},"body":{"modules.html":{}}}],["await",{"_index":738,"title":{},"body":{"injectables/StorageService.html":{}}}],["awesome",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":567,"title":{},"body":{"components/NavigationComponent.html":{}}}],["baseurl",{"_index":341,"title":{},"body":{"injectables/IdentityService.html":{}}}],["bearer",{"_index":641,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["between",{"_index":584,"title":{},"body":{"components/NavigationComponent.html":{}}}],["boolean",{"_index":98,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["bootstrap",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bottom",{"_index":534,"title":{},"body":{"injectables/MessageService.html":{}}}],["brand",{"_index":577,"title":{},"body":{"components/NavigationComponent.html":{}}}],["break",{"_index":539,"title":{},"body":{"injectables/MessageService.html":{},"components/RegisterComponent.html":{}}}],["browse",{"_index":906,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":689,"title":{},"body":{"modules/SharedModule.html":{}}}],["browseranimationsmodule",{"_index":688,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":595,"title":{},"body":{"components/NavigationComponent.html":{}}}],["build",{"_index":879,"title":{},"body":{"index.html":{}}}],["caller",{"_index":241,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["canactivate",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/IdentityGuard.html":{}}}],["canactivate(route",{"_index":293,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["case",{"_index":537,"title":{},"body":{"injectables/MessageService.html":{},"components/RegisterComponent.html":{}}}],["catch((error",{"_index":385,"title":{},"body":{"injectables/IdentityService.html":{}}}],["catch((response",{"_index":480,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["center",{"_index":571,"title":{},"body":{"components/NavigationComponent.html":{}}}],["change",{"_index":872,"title":{},"body":{"index.html":{}}}],["check",{"_index":899,"title":{},"body":{"index.html":{}}}],["checkidentity",{"_index":343,"title":{},"body":{"injectables/IdentityService.html":{}}}],["class",{"_index":33,"title":{"classes/Account.html":{},"classes/AppSettings.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentFormComponent.html":{},"injectables/AppointmentFormService.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{}}}],["classes",{"_index":70,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"overview.html":{}}}],["clear",{"_index":626,"title":{},"body":{"components/RegisterComponent.html":{}}}],["cli",{"_index":861,"title":{},"body":{"index.html":{}}}],["client",{"_index":857,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_identitymodule",{"_index":308,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_identitymodule_declarations",{"_index":311,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_identitymodule_imports",{"_index":310,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_identitymodule_providers",{"_index":309,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_schedulemodule",{"_index":655,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_schedulemodule_declarations",{"_index":656,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_schedulemodule_imports",{"_index":657,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_schedulemodule_providers",{"_index":658,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":673,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":675,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":677,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":674,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_sharedmodule_providers",{"_index":676,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":874,"title":{},"body":{"index.html":{}}}],["collection",{"_index":712,"title":{},"body":{"injectables/StorageService.html":{}}}],["color",{"_index":574,"title":{},"body":{"components/NavigationComponent.html":{}}}],["column",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":901,"title":{},"body":{"index.html":{}}}],["common/navigation/navigation.component",{"_index":690,"title":{},"body":{"modules/SharedModule.html":{}}}],["common/shared.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":315,"title":{},"body":{"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":428,"title":{},"body":{"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["console.clear",{"_index":452,"title":{},"body":{"injectables/LoggerService.html":{}}}],["console.groupcollapsed(`%c",{"_index":454,"title":{},"body":{"injectables/LoggerService.html":{}}}],["console.log('authorization",{"_index":640,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["const",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppointmentFormComponent.html":{},"injectables/AppointmentFormService.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"injectables/ScheduleService.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["constructor(args",{"_index":242,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["constructor(config",{"_index":426,"title":{},"body":{"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(http",{"_index":671,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["constructor(identity",{"_index":289,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(message",{"_index":348,"title":{},"body":{"injectables/IdentityService.html":{}}}],["constructor(private",{"_index":300,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(service",{"_index":507,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(username",{"_index":84,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{}}}],["container",{"_index":282,"title":{},"body":{"components/IdentityComponent.html":{}}}],["content",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{},"interceptors/RequestInterceptor.html":{}}}],["context",{"_index":809,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":280,"title":{},"body":{"components/IdentityComponent.html":{}}}],["control",{"_index":466,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["controls[field.tolowercase",{"_index":621,"title":{},"body":{"components/RegisterComponent.html":{}}}],["coverage",{"_index":789,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":79,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["createdat",{"_index":240,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["credentials",{"_index":490,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["current",{"_index":748,"title":{},"body":{"injectables/StorageService.html":{}}}],["current.name",{"_index":745,"title":{},"body":{"injectables/StorageService.html":{}}}],["current?.id",{"_index":743,"title":{},"body":{"injectables/StorageService.html":{}}}],["date().valueof",{"_index":245,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["date.now",{"_index":768,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["debug",{"_index":844,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decreasing",{"_index":523,"title":{},"body":{"injectables/MessageService.html":{}}}],["default",{"_index":361,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/MessageService.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"classes/AppSettings.html":{},"components/AppointmentFormComponent.html":{},"injectables/AppointmentFormService.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"interfaces/IKeyValue.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["dependencies",{"_index":127,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":80,"title":{},"body":{"classes/Account.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["descriptor",{"_index":228,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["dev",{"_index":867,"title":{},"body":{"index.html":{}}}],["development",{"_index":863,"title":{},"body":{"index.html":{}}}],["direction",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["directives",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":878,"title":{},"body":{"index.html":{}}}],["directory",{"_index":883,"title":{},"body":{"index.html":{}}}],["display",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["dist",{"_index":882,"title":{},"body":{"index.html":{}}}],["docs",{"_index":565,"title":{},"body":{"components/NavigationComponent.html":{}}}],["documentation",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["dynamic",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":893,"title":{},"body":{"index.html":{}}}],["ease",{"_index":519,"title":{},"body":{"injectables/MessageService.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["email",{"_index":76,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"injectables/UserFormService.html":{}}}],["end",{"_index":588,"title":{},"body":{"components/NavigationComponent.html":{},"index.html":{}}}],["endpoints",{"_index":175,"title":{},"body":{"classes/AppSettings.html":{},"interfaces/IEndpoint.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":835,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/log.scope.enum",{"_index":234,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"modules/SharedModule.html":{}}}],["enums/message.enum",{"_index":372,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{}}}],["env",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["env/environment",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":393,"title":{},"body":{"injectables/IdentityService.html":{},"miscellaneous/enumerations.html":{}}}],["event",{"_index":771,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["event.body",{"_index":775,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["event.headers.get('authorization').replace('bearer",{"_index":774,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["event.headers.has('authorization",{"_index":773,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["execute",{"_index":890,"title":{},"body":{"index.html":{}}}],["existing",{"_index":497,"title":{},"body":{"components/LoginComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentFormComponent.html":{},"injectables/AppointmentFormService.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["exports",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["extends",{"_index":72,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["fa",{"_index":589,"title":{},"body":{"components/NavigationComponent.html":{}}}],["failed",{"_index":397,"title":{},"body":{"injectables/IdentityService.html":{},"components/LoginComponent.html":{}}}],["failure",{"_index":387,"title":{},"body":{"injectables/IdentityService.html":{}}}],["false",{"_index":305,"title":{},"body":{"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":500,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["field.tolowercase",{"_index":620,"title":{},"body":{"components/RegisterComponent.html":{}}}],["field.tolowercase().match('username",{"_index":487,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentFormComponent.html":{},"injectables/AppointmentFormService.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{}}}],["files",{"_index":873,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":600,"title":{},"body":{"classes/Profile.html":{}}}],["flag",{"_index":885,"title":{},"body":{"index.html":{}}}],["flex",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["font",{"_index":578,"title":{},"body":{"components/NavigationComponent.html":{},"dependencies.html":{}}}],["foreach(field",{"_index":484,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["foreach(key",{"_index":250,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["form",{"_index":186,"title":{},"body":{"components/AppointmentFormComponent.html":{}}}],["form'},{'name",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["form.component",{"_index":662,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["form.component.html",{"_index":188,"title":{},"body":{"components/AppointmentFormComponent.html":{}}}],["form.component.scss",{"_index":187,"title":{},"body":{"components/AppointmentFormComponent.html":{}}}],["form.component.ts",{"_index":185,"title":{},"body":{"components/AppointmentFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:12",{"_index":190,"title":{},"body":{"components/AppointmentFormComponent.html":{}}}],["form.component.ts:8",{"_index":189,"title":{},"body":{"components/AppointmentFormComponent.html":{}}}],["form.service",{"_index":323,"title":{},"body":{"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/ScheduleModule.html":{}}}],["form.service.ts",{"_index":195,"title":{},"body":{"injectables/AppointmentFormService.html":{},"injectables/UserFormService.html":{},"coverage.html":{}}}],["form.service.ts:15",{"_index":784,"title":{},"body":{"injectables/UserFormService.html":{}}}],["form.service.ts:4",{"_index":196,"title":{},"body":{"injectables/AppointmentFormService.html":{}}}],["form.service.ts:5",{"_index":782,"title":{},"body":{"injectables/UserFormService.html":{}}}],["form.service.ts:9",{"_index":783,"title":{},"body":{"injectables/UserFormService.html":{}}}],["form/appointment",{"_index":184,"title":{},"body":{"components/AppointmentFormComponent.html":{},"modules/ScheduleModule.html":{},"coverage.html":{}}}],["formcontrol",{"_index":785,"title":{},"body":{"injectables/UserFormService.html":{}}}],["formgroup",{"_index":460,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFormService.html":{}}}],["formservice",{"_index":462,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["forroot",{"_index":681,"title":{},"body":{"modules/SharedModule.html":{}}}],["forroot(config",{"_index":682,"title":{},"body":{"modules/SharedModule.html":{}}}],["fsevents",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["further",{"_index":895,"title":{},"body":{"index.html":{}}}],["generate",{"_index":876,"title":{},"body":{"index.html":{}}}],["generated",{"_index":859,"title":{},"body":{"index.html":{}}}],["generateloginform",{"_index":780,"title":{},"body":{"injectables/UserFormService.html":{}}}],["generateregisterform",{"_index":781,"title":{},"body":{"injectables/UserFormService.html":{}}}],["getcollection",{"_index":713,"title":{},"body":{"injectables/StorageService.html":{}}}],["getcollection$(key",{"_index":718,"title":{},"body":{"injectables/StorageService.html":{}}}],["getcollection$>(key",{"_index":754,"title":{},"body":{"injectables/StorageService.html":{}}}],["geterrors",{"_index":461,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["geterrors(control",{"_index":464,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getstorage",{"_index":714,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstorage(key",{"_index":721,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstorage>(key",{"_index":729,"title":{},"body":{"injectables/StorageService.html":{}}}],["getting",{"_index":856,"title":{"index.html":{}},"body":{}}],["go",{"_index":898,"title":{},"body":{"index.html":{}}}],["goodbye",{"_index":400,"title":{},"body":{"injectables/IdentityService.html":{}}}],["graph",{"_index":907,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":286,"title":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":287,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"overview.html":{}}}],["guid",{"_index":235,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"dependencies.html":{}}}],["guid.newguid().tostring().split",{"_index":247,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["header",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["height",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["help",{"_index":896,"title":{},"body":{"index.html":{}}}],["helpers/app.settings",{"_index":436,"title":{},"body":{"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["helpers/endpoint.interface",{"_index":180,"title":{},"body":{"classes/AppSettings.html":{}}}],["helpers/key.value",{"_index":437,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/StorageService.html":{}}}],["helpers/logger.model",{"_index":438,"title":{},"body":{"injectables/LoggerService.html":{}}}],["home",{"_index":212,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["home.component.html",{"_index":214,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":213,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":52,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["http",{"_index":350,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/ScheduleService.html":{}}}],["http://localhost:4200",{"_index":869,"title":{},"body":{"index.html":{}}}],["http://localhost:5000",{"_index":364,"title":{},"body":{"injectables/IdentityService.html":{}}}],["http_interceptors",{"_index":686,"title":{},"body":{"modules/SharedModule.html":{}}}],["httpclient",{"_index":351,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/ScheduleService.html":{}}}],["httpclientmodule",{"_index":687,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":469,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["httpevent",{"_index":638,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":635,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpinterceptor",{"_index":639,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httprequest",{"_index":634,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpresponse",{"_index":766,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["id",{"_index":81,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["identifier",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":257,"title":{"classes/Identity.html":{}},"body":{"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["identity'},{'name",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["identity(user.username",{"_index":777,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["identity.component",{"_index":324,"title":{},"body":{"modules/IdentityModule.html":{}}}],["identity.component.html",{"_index":276,"title":{},"body":{"components/IdentityComponent.html":{}}}],["identity.component.scss",{"_index":275,"title":{},"body":{"components/IdentityComponent.html":{}}}],["identity/identity.component",{"_index":335,"title":{},"body":{"modules/IdentityRoutingModule.html":{}}}],["identity/identity.module",{"_index":691,"title":{},"body":{"modules/SharedModule.html":{}}}],["identity/identity.routing.module",{"_index":319,"title":{},"body":{"modules/IdentityModule.html":{}}}],["identity/login/login.component",{"_index":320,"title":{},"body":{"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["identity/register/register.component",{"_index":321,"title":{},"body":{"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["identitycomponent",{"_index":54,"title":{"components/IdentityComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["identityguard",{"_index":159,"title":{"guards/IdentityGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/IdentityGuard.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identitymodule",{"_index":307,"title":{"modules/IdentityModule.html":{}},"body":{"modules/IdentityModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["identityresolver",{"_index":325,"title":{"guards/IdentityResolver.html":{}},"body":{"guards/IdentityResolver.html":{},"coverage.html":{}}}],["identityroutingmodule",{"_index":312,"title":{"modules/IdentityRoutingModule.html":{}},"body":{"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["identityservice",{"_index":290,"title":{"injectables/IdentityService.html":{}},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["iendpoint",{"_index":179,"title":{"interfaces/IEndpoint.html":{}},"body":{"classes/AppSettings.html":{},"interfaces/IEndpoint.html":{},"coverage.html":{}}}],["ikeyvalue",{"_index":221,"title":{"interfaces/IKeyValue.html":{}},"body":{"interfaces/IKeyValue.html":{},"injectables/LoggerService.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["iloggermodel",{"_index":226,"title":{"interfaces/ILoggerModel.html":{}},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["imodelbase",{"_index":253,"title":{"interfaces/IModelBase.html":{}},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentFormComponent.html":{},"injectables/AppointmentFormService.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["import('./identity/identity.module').then(m",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./schedule/schedule.module').then(m",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"classes/AppSettings.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":223,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentFormComponent.html":{},"injectables/AppointmentFormService.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inherited",{"_index":94,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["initialize",{"_index":423,"title":{},"body":{"injectables/LoggerService.html":{}}}],["initialize(scope",{"_index":429,"title":{},"body":{"injectables/LoggerService.html":{}}}],["injectable",{"_index":191,"title":{"injectables/AppointmentFormService.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/MessageService.html":{},"injectables/ScheduleService.html":{},"injectables/StorageService.html":{},"injectables/UserFormService.html":{}},"body":{"injectables/AppointmentFormService.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/MessageService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/ScheduleService.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{}}}],["injectables",{"_index":193,"title":{},"body":{"injectables/AppointmentFormService.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/MessageService.html":{},"injectables/ScheduleService.html":{},"injectables/StorageService.html":{},"injectables/UserFormService.html":{},"overview.html":{}}}],["instanceof",{"_index":772,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercept",{"_index":631,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["intercept(req",{"_index":633,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":627,"title":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":629,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interface",{"_index":217,"title":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{}},"body":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["interfaces",{"_index":218,"title":{},"body":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"overview.html":{}}}],["invalid",{"_index":499,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isactive",{"_index":82,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["isdefault",{"_index":83,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["item",{"_index":237,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/StorageService.html":{}}}],["item?.id",{"_index":742,"title":{},"body":{"injectables/StorageService.html":{}}}],["item?.name",{"_index":744,"title":{},"body":{"injectables/StorageService.html":{}}}],["item[key",{"_index":735,"title":{},"body":{"injectables/StorageService.html":{}}}],["items",{"_index":229,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"components/NavigationComponent.html":{},"modules/SharedModule.html":{}}}],["jquery",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('identity",{"_index":404,"title":{},"body":{"injectables/IdentityService.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":731,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(identity",{"_index":408,"title":{},"body":{"injectables/IdentityService.html":{}}}],["json.stringify(storage",{"_index":760,"title":{},"body":{"injectables/StorageService.html":{}}}],["justify",{"_index":582,"title":{},"body":{"components/NavigationComponent.html":{}}}],["karma",{"_index":892,"title":{},"body":{"index.html":{}}}],["key",{"_index":220,"title":{},"body":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"injectables/StorageService.html":{}}}],["lastname",{"_index":601,"title":{},"body":{"classes/Profile.html":{}}}],["left",{"_index":587,"title":{},"body":{"components/NavigationComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["lepooch",{"_index":562,"title":{},"body":{"components/NavigationComponent.html":{}}}],["lifecycle",{"_index":848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighten($color",{"_index":592,"title":{},"body":{"components/NavigationComponent.html":{}}}],["list",{"_index":199,"title":{},"body":{"components/AppointmentListComponent.html":{}}}],["list'},{'name",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["list.component",{"_index":663,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["list.component.html",{"_index":201,"title":{},"body":{"components/AppointmentListComponent.html":{}}}],["list.component.scss",{"_index":200,"title":{},"body":{"components/AppointmentListComponent.html":{}}}],["list.component.ts",{"_index":198,"title":{},"body":{"components/AppointmentListComponent.html":{},"coverage.html":{}}}],["list.component.ts:12",{"_index":203,"title":{},"body":{"components/AppointmentListComponent.html":{}}}],["list.component.ts:8",{"_index":202,"title":{},"body":{"components/AppointmentListComponent.html":{}}}],["list/appointment",{"_index":197,"title":{},"body":{"components/AppointmentListComponent.html":{},"modules/ScheduleModule.html":{},"coverage.html":{}}}],["literal",{"_index":176,"title":{},"body":{"classes/AppSettings.html":{},"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.removeitem('identity",{"_index":409,"title":{},"body":{"injectables/IdentityService.html":{}}}],["localstorage.setitem('identity",{"_index":407,"title":{},"body":{"injectables/IdentityService.html":{}}}],["localstorage.setitem(key",{"_index":759,"title":{},"body":{"injectables/StorageService.html":{}}}],["log",{"_index":424,"title":{},"body":{"injectables/LoggerService.html":{}}}],["log(args",{"_index":431,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logger",{"_index":703,"title":{},"body":{"modules/SharedModule.html":{}}}],["loggermodel",{"_index":238,"title":{"classes/LoggerModel.html":{}},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["loggermodel(args",{"_index":445,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerservice",{"_index":419,"title":{"injectables/LoggerService.html":{}},"body":{"injectables/LoggerService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":279,"title":{},"body":{"components/IdentityComponent.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["login'},{'name",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["login.component.html",{"_index":459,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":458,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":56,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logitems",{"_index":439,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logitems.unshift(new",{"_index":444,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel",{"_index":837,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logout",{"_index":554,"title":{},"body":{"components/NavigationComponent.html":{}}}],["logscope",{"_index":233,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"modules/SharedModule.html":{},"miscellaneous/enumerations.html":{}}}],["logscope.router",{"_index":706,"title":{},"body":{"modules/SharedModule.html":{}}}],["logscopes",{"_index":421,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logtoconsole",{"_index":425,"title":{},"body":{"injectables/LoggerService.html":{}}}],["m.identitymodule",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.schedulemodule",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["map(item",{"_index":734,"title":{},"body":{"injectables/StorageService.html":{}}}],["margin",{"_index":283,"title":{},"body":{"components/IdentityComponent.html":{},"components/NavigationComponent.html":{}}}],["matching",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentFormComponent.html":{},"injectables/AppointmentFormService.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":230,"title":{},"body":{"interfaces/ILoggerModel.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/MessageService.html":{}}}],["messageservice",{"_index":349,"title":{"injectables/MessageService.html":{}},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["messagetype",{"_index":371,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["messagetype.error",{"_index":391,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{}}}],["messagetype.information",{"_index":401,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{}}}],["messagetype.success",{"_index":384,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{}}}],["messagetype.warning",{"_index":542,"title":{},"body":{"injectables/MessageService.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["miscellaneous",{"_index":834,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modelbase",{"_index":73,"title":{"classes/ModelBase.html":{}},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["modelbase:10",{"_index":97,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:11",{"_index":95,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:12",{"_index":96,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:13",{"_index":99,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:14",{"_index":100,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:15",{"_index":101,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["models/account.model",{"_index":270,"title":{},"body":{"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{}}}],["models/base.model",{"_index":102,"title":{},"body":{"classes/Account.html":{},"classes/Profile.html":{},"injectables/StorageService.html":{}}}],["models/identity.model",{"_index":369,"title":{},"body":{"injectables/IdentityService.html":{},"interceptors/TokenInterceptor.html":{}}}],["module",{"_index":124,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":126,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithproviders",{"_index":684,"title":{},"body":{"modules/SharedModule.html":{}}}],["more",{"_index":897,"title":{},"body":{"index.html":{}}}],["multi",{"_index":710,"title":{},"body":{"modules/SharedModule.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"index.html":{}}}],["nav",{"_index":576,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigate",{"_index":868,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":551,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["navigation.component.html",{"_index":553,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":552,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigationcomponent",{"_index":58,"title":{"components/NavigationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["network",{"_index":849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new",{"_index":244,"title":{},"body":{"interfaces/ILoggerModel.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{},"injectables/UserFormService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":374,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/NavigationComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["next(await",{"_index":751,"title":{},"body":{"injectables/StorageService.html":{}}}],["next.handle(authreq",{"_index":648,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":769,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["ng",{"_index":865,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["ngx",{"_index":514,"title":{},"body":{"injectables/MessageService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["null",{"_index":272,"title":{},"body":{"classes/Identity.html":{},"injectables/IdentityService.html":{}}}],["number",{"_index":93,"title":{},"body":{"classes/Account.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["object",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(args",{"_index":249,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["object.keys(response.error",{"_index":483,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["object.keys(response.error).foreach(field",{"_index":624,"title":{},"body":{"components/RegisterComponent.html":{}}}],["object.keys(response.error.errors",{"_index":493,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["object.keys(this",{"_index":256,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{}}}],["object.keys(this.formgroup.get(control).errors",{"_index":496,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["object.keys(this.logscopes).foreach(key",{"_index":453,"title":{},"body":{"injectables/LoggerService.html":{}}}],["object.keys(values",{"_index":733,"title":{},"body":{"injectables/StorageService.html":{}}}],["observable",{"_index":331,"title":{},"body":{"guards/IdentityResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["optional",{"_index":89,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["out",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentityModule.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":900,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":813,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":572,"title":{},"body":{"components/NavigationComponent.html":{}}}],["page",{"_index":903,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":87,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["password",{"_index":77,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFormService.html":{}}}],["path",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleRoutingModule.html":{}}}],["pathmatch",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["please",{"_index":388,"title":{},"body":{"injectables/IdentityService.html":{}}}],["pooch",{"_index":602,"title":{},"body":{"classes/Profile.html":{}}}],["popper.js",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["post(`${this.baseurl}/auth",{"_index":378,"title":{},"body":{"injectables/IdentityService.html":{}}}],["private",{"_index":301,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["prod",{"_index":884,"title":{},"body":{"index.html":{}}}],["production",{"_index":182,"title":{},"body":{"classes/AppSettings.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":598,"title":{"classes/Profile.html":{}},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["project",{"_index":858,"title":{},"body":{"index.html":{}}}],["promise",{"_index":332,"title":{},"body":{"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/StorageService.html":{}}}],["promise.resolve",{"_index":398,"title":{},"body":{"injectables/IdentityService.html":{}}}],["promise.resolve().then(async",{"_index":730,"title":{},"body":{"injectables/StorageService.html":{}}}],["properties",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{}}}],["protractor",{"_index":894,"title":{},"body":{"index.html":{}}}],["provide",{"_index":707,"title":{},"body":{"modules/SharedModule.html":{}}}],["provider",{"_index":181,"title":{},"body":{"classes/AppSettings.html":{},"miscellaneous/enumerations.html":{}}}],["provider.server",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["public",{"_index":75,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{},"injectables/UserFormService.html":{}}}],["put(`${this.baseurl}/auth",{"_index":394,"title":{},"body":{"injectables/IdentityService.html":{}}}],["reactiveformsmodule",{"_index":317,"title":{},"body":{"modules/IdentityModule.html":{}}}],["readonly",{"_index":340,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/StorageService.html":{}}}],["redirectto",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["reference",{"_index":902,"title":{},"body":{"index.html":{}}}],["register",{"_index":336,"title":{},"body":{"modules/IdentityRoutingModule.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["register.component.html",{"_index":609,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":608,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":60,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reload",{"_index":871,"title":{},"body":{"index.html":{}}}],["req",{"_index":637,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["req.clone",{"_index":644,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["requestinterceptor",{"_index":628,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["require",{"_index":810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":502,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reset",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resolve",{"_index":327,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["resolve(route",{"_index":329,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["response.error",{"_index":491,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["response.error.errors",{"_index":619,"title":{},"body":{"components/RegisterComponent.html":{}}}],["response.error.errors[field",{"_index":495,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.error.errors[field][0",{"_index":623,"title":{},"body":{"components/RegisterComponent.html":{}}}],["response.error[field]['errors'][0]['errormessage",{"_index":488,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["response.error[field][0",{"_index":625,"title":{},"body":{"components/RegisterComponent.html":{}}}],["response.status",{"_index":481,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["result",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentFormComponent.html":{},"injectables/AppointmentFormService.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentFormComponent.html":{},"injectables/AppointmentFormService.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":304,"title":{},"body":{"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["right",{"_index":535,"title":{},"body":{"injectables/MessageService.html":{}}}],["root",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["route",{"_index":298,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{}}}],["router",{"_index":291,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"miscellaneous/enumerations.html":{}}}],["routermodule",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forchild",{"_index":701,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild(routes",{"_index":337,"title":{},"body":{"modules/IdentityRoutingModule.html":{},"modules/ScheduleRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":296,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["routes",{"_index":157,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":569,"title":{},"body":{"components/NavigationComponent.html":{}}}],["run",{"_index":864,"title":{},"body":{"index.html":{}}}],["running",{"_index":886,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":333,"title":{},"body":{"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":765,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["scaffolding",{"_index":875,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["schedule.component.html",{"_index":651,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["schedule.component.scss",{"_index":650,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["schedule/appointment",{"_index":661,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["schedule/schedule.component",{"_index":665,"title":{},"body":{"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{}}}],["schedule/schedule.routing.module",{"_index":666,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["schedulecomponent",{"_index":62,"title":{"components/ScheduleComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["schedulemodule",{"_index":654,"title":{"modules/ScheduleModule.html":{}},"body":{"modules/ScheduleModule.html":{},"modules.html":{},"overview.html":{}}}],["scheduleroutingmodule",{"_index":659,"title":{"modules/ScheduleRoutingModule.html":{}},"body":{"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["scheduleservice",{"_index":669,"title":{"injectables/ScheduleService.html":{}},"body":{"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["scope",{"_index":231,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"modules/SharedModule.html":{}}}],["sections/about/about.component",{"_index":692,"title":{},"body":{"modules/SharedModule.html":{}}}],["sections/home/home.component",{"_index":693,"title":{},"body":{"modules/SharedModule.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["serve",{"_index":866,"title":{},"body":{"index.html":{}}}],["server",{"_index":855,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["service",{"_index":510,"title":{},"body":{"injectables/MessageService.html":{}}}],["services",{"_index":702,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/appointment",{"_index":667,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["services/identity.guard",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["services/identity.service",{"_index":299,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["services/logger.service",{"_index":694,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/message.service",{"_index":370,"title":{},"body":{"injectables/IdentityService.html":{},"modules/SharedModule.html":{}}}],["services/request.interceptor",{"_index":695,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/schedule.service",{"_index":696,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/storage.service",{"_index":697,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/token.interceptor",{"_index":699,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/user",{"_index":322,"title":{},"body":{"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["seterrors",{"_index":622,"title":{},"body":{"components/RegisterComponent.html":{}}}],["setheaders",{"_index":645,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["setidentity",{"_index":344,"title":{},"body":{"injectables/IdentityService.html":{}}}],["setidentity(identity",{"_index":354,"title":{},"body":{"injectables/IdentityService.html":{}}}],["setstorage",{"_index":715,"title":{},"body":{"injectables/StorageService.html":{}}}],["setstorage(key",{"_index":723,"title":{},"body":{"injectables/StorageService.html":{}}}],["setstorage>(key",{"_index":756,"title":{},"body":{"injectables/StorageService.html":{}}}],["sharedmodule",{"_index":137,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedmodule.forroot",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["shop",{"_index":563,"title":{},"body":{"components/NavigationComponent.html":{}}}],["show",{"_index":506,"title":{},"body":{"injectables/MessageService.html":{}}}],["show(title",{"_index":511,"title":{},"body":{"injectables/MessageService.html":{}}}],["size",{"_index":579,"title":{},"body":{"components/NavigationComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentFormComponent.html":{},"injectables/AppointmentFormService.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"index.html":{}}}],["space",{"_index":583,"title":{},"body":{"components/NavigationComponent.html":{}}}],["spec\\.ts",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../context.enum.ts",{"_index":836,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../endpoint.interface.ts",{"_index":915,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log.level.enum.ts",{"_index":838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../log.scope.enum.ts",{"_index":839,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../message.enum.ts",{"_index":840,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../providers.enum.ts",{"_index":841,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../shared.module.ts",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/@common/enums/context.enum.ts",{"_index":842,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/enums/log.level.enum.ts",{"_index":843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/enums/log.scope.enum.ts",{"_index":846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/enums/message.enum.ts",{"_index":850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/enums/providers.enum.ts",{"_index":854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/helpers/app.settings.ts",{"_index":174,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["src/app/@common/helpers/app.settings.ts:4",{"_index":177,"title":{},"body":{"classes/AppSettings.html":{}}}],["src/app/@common/helpers/app.settings.ts:5",{"_index":178,"title":{},"body":{"classes/AppSettings.html":{}}}],["src/app/@common/helpers/endpoint.interface.ts",{"_index":219,"title":{},"body":{"interfaces/IEndpoint.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/@common/helpers/key.value.ts",{"_index":222,"title":{},"body":{"interfaces/IKeyValue.html":{},"coverage.html":{}}}],["src/app/@common/helpers/key.value.ts:1",{"_index":225,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["src/app/@common/helpers/logger.model.ts",{"_index":227,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"coverage.html":{}}}],["src/app/@common/helpers/logger.model.ts:14",{"_index":418,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:15",{"_index":414,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:16",{"_index":416,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:17",{"_index":412,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:18",{"_index":415,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:19",{"_index":413,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:20",{"_index":417,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:21",{"_index":411,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/models/account.model.ts",{"_index":71,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["src/app/@common/models/account.model.ts:4",{"_index":92,"title":{},"body":{"classes/Account.html":{}}}],["src/app/@common/models/account.model.ts:5",{"_index":91,"title":{},"body":{"classes/Account.html":{}}}],["src/app/@common/models/account.model.ts:6",{"_index":86,"title":{},"body":{"classes/Account.html":{}}}],["src/app/@common/models/base.model.ts",{"_index":254,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["src/app/@common/models/base.model.ts:10",{"_index":547,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:11",{"_index":545,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:12",{"_index":546,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:13",{"_index":548,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:14",{"_index":549,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:15",{"_index":544,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/identity.model.ts",{"_index":258,"title":{},"body":{"classes/Identity.html":{},"coverage.html":{}}}],["src/app/@common/models/identity.model.ts:4",{"_index":260,"title":{},"body":{"classes/Identity.html":{}}}],["src/app/@common/models/profile.model.ts",{"_index":599,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/app/@common/models/profile.model.ts:4",{"_index":604,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/@common/models/profile.model.ts:5",{"_index":605,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/@common/models/profile.model.ts:6",{"_index":606,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/@common/models/profile.model.ts:7",{"_index":603,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/@common/navigation/navigation.component.ts",{"_index":550,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/@common/navigation/navigation.component.ts:12",{"_index":555,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/@common/navigation/navigation.component.ts:20",{"_index":557,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/@common/navigation/navigation.component.ts:22",{"_index":556,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/@common/sections/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/@common/sections/about/about.component.ts:13",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/@common/sections/about/about.component.ts:8",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/@common/sections/home/home.component.ts",{"_index":211,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/@common/sections/home/home.component.ts:13",{"_index":216,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/@common/sections/home/home.component.ts:8",{"_index":215,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/@common/services/appointment",{"_index":194,"title":{},"body":{"injectables/AppointmentFormService.html":{},"coverage.html":{}}}],["src/app/@common/services/identity.guard.ts",{"_index":288,"title":{},"body":{"guards/IdentityGuard.html":{},"coverage.html":{}}}],["src/app/@common/services/identity.guard.ts:11",{"_index":297,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["src/app/@common/services/identity.guard.ts:6",{"_index":292,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["src/app/@common/services/identity.resolver.ts",{"_index":326,"title":{},"body":{"guards/IdentityResolver.html":{},"coverage.html":{}}}],["src/app/@common/services/identity.resolver.ts:12",{"_index":330,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["src/app/@common/services/identity.resolver.ts:7",{"_index":328,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["src/app/@common/services/identity.service.ts",{"_index":338,"title":{},"body":{"injectables/IdentityService.html":{},"coverage.html":{}}}],["src/app/@common/services/identity.service.ts:11",{"_index":365,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:13",{"_index":363,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:14",{"_index":366,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:15",{"_index":352,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:24",{"_index":357,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:34",{"_index":360,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:44",{"_index":358,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:49",{"_index":353,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:56",{"_index":355,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/logger.service.ts",{"_index":420,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/app/@common/services/logger.service.ts:11",{"_index":434,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:12",{"_index":427,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:16",{"_index":432,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:29",{"_index":430,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:40",{"_index":433,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:9",{"_index":435,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/message.service.ts",{"_index":505,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/app/@common/services/message.service.ts:23",{"_index":512,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/@common/services/message.service.ts:6",{"_index":509,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/@common/services/request.interceptor.ts",{"_index":630,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/app/@common/services/request.interceptor.ts:13",{"_index":636,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/@common/services/request.interceptor.ts:8",{"_index":632,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/@common/services/schedule.service.ts",{"_index":670,"title":{},"body":{"injectables/ScheduleService.html":{},"coverage.html":{}}}],["src/app/@common/services/schedule.service.ts:5",{"_index":672,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/@common/services/storage.service.ts",{"_index":711,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/@common/services/storage.service.ts:10",{"_index":717,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:15",{"_index":722,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:27",{"_index":727,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:41",{"_index":719,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:47",{"_index":725,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:9",{"_index":728,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/token.interceptor.ts",{"_index":761,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["src/app/@common/services/token.interceptor.ts:10",{"_index":762,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/@common/services/token.interceptor.ts:15",{"_index":763,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/@common/services/user",{"_index":779,"title":{},"body":{"injectables/UserFormService.html":{},"coverage.html":{}}}],["src/app/@common/shared.module.ts",{"_index":679,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/@common/shared.module.ts:40",{"_index":683,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/app",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/identity/identity.component.ts",{"_index":274,"title":{},"body":{"components/IdentityComponent.html":{},"coverage.html":{}}}],["src/app/identity/identity.component.ts:12",{"_index":278,"title":{},"body":{"components/IdentityComponent.html":{}}}],["src/app/identity/identity.component.ts:8",{"_index":277,"title":{},"body":{"components/IdentityComponent.html":{}}}],["src/app/identity/identity.module.ts",{"_index":314,"title":{},"body":{"modules/IdentityModule.html":{}}}],["src/app/identity/identity.routing.module.ts",{"_index":334,"title":{},"body":{"modules/IdentityRoutingModule.html":{}}}],["src/app/identity/login/login.component.ts",{"_index":457,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/identity/login/login.component.ts:15",{"_index":463,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:18",{"_index":468,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:20",{"_index":467,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:50",{"_index":465,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/register/register.component.ts",{"_index":607,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/identity/register/register.component.ts:15",{"_index":610,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/identity/register/register.component.ts:18",{"_index":612,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/identity/register/register.component.ts:20",{"_index":613,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/identity/register/register.component.ts:86",{"_index":611,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/schedule/appointment",{"_index":183,"title":{},"body":{"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"coverage.html":{}}}],["src/app/schedule/schedule.component.ts",{"_index":649,"title":{},"body":{"components/ScheduleComponent.html":{},"coverage.html":{}}}],["src/app/schedule/schedule.component.ts:12",{"_index":653,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["src/app/schedule/schedule.component.ts:8",{"_index":652,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["src/app/schedule/schedule.module.ts",{"_index":660,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["src/app/schedule/schedule.routing.module.ts",{"_index":668,"title":{},"body":{"modules/ScheduleRoutingModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stacktrace",{"_index":422,"title":{},"body":{"injectables/LoggerService.html":{}}}],["start",{"_index":585,"title":{},"body":{"components/NavigationComponent.html":{}}}],["started",{"_index":767,"title":{"index.html":{}},"body":{"interceptors/TokenInterceptor.html":{}}}],["state",{"_index":295,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["statements",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":680,"title":{},"body":{"modules/SharedModule.html":{}}}],["storage",{"_index":403,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{}}}],["storage.filter(value",{"_index":753,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.findindex(item",{"_index":741,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.push(current",{"_index":749,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.splice(index",{"_index":747,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage[item.name",{"_index":758,"title":{},"body":{"injectables/StorageService.html":{}}}],["storageservice",{"_index":678,"title":{"injectables/StorageService.html":{}},"body":{"modules/SharedModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":881,"title":{},"body":{"index.html":{}}}],["string",{"_index":85,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["subject",{"_index":367,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/StorageService.html":{}}}],["subscribe",{"_index":449,"title":{},"body":{"injectables/LoggerService.html":{}}}],["success",{"_index":852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":395,"title":{},"body":{"injectables/IdentityService.html":{}}}],["super",{"_index":103,"title":{},"body":{"classes/Account.html":{},"classes/Profile.html":{}}}],["super(username",{"_index":271,"title":{},"body":{"classes/Identity.html":{}}}],["support",{"_index":904,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":905,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":536,"title":{},"body":{"injectables/MessageService.html":{},"components/RegisterComponent.html":{}}}],["t",{"_index":720,"title":{},"body":{"injectables/StorageService.html":{}}}],["t\\t${key",{"_index":455,"title":{},"body":{"injectables/LoggerService.html":{}}}],["table",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":764,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["tap(event",{"_index":770,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["target",{"_index":232,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["test",{"_index":889,"title":{},"body":{"index.html":{}}}],["tests",{"_index":888,"title":{},"body":{"index.html":{}}}],["text",{"_index":596,"title":{},"body":{"components/NavigationComponent.html":{}}}],["theme",{"_index":568,"title":{},"body":{"components/NavigationComponent.html":{}}}],["themes.scss",{"_index":281,"title":{},"body":{"components/IdentityComponent.html":{},"components/NavigationComponent.html":{}}}],["then((result",{"_index":380,"title":{},"body":{"injectables/IdentityService.html":{}}}],["then(result",{"_index":477,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.account",{"_index":558,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.account?.username",{"_index":566,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.authstate",{"_index":405,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.checkidentity",{"_index":376,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.collection$[key",{"_index":755,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.collection[key",{"_index":732,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.collection[key].slice",{"_index":736,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.config.environment.production",{"_index":447,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.createdat",{"_index":243,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["this.email",{"_index":106,"title":{},"body":{"classes/Account.html":{}}}],["this.formgroup",{"_index":470,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formgroup.controls[field.tolowercase",{"_index":485,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formgroup.controls[field.tolowercase()]?.seterrors",{"_index":486,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formgroup.controls[field.tolowercase()]?.seterrors(field.tolowercase().match('username",{"_index":494,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.errors[field",{"_index":504,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.get(field).errors[message",{"_index":503,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formgroup.reset",{"_index":478,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formgroup.seterrors",{"_index":489,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formgroup.value",{"_index":472,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.value.email",{"_index":618,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formgroup.value.password",{"_index":617,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formservice.generateloginform",{"_index":471,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formservice.generateregisterform",{"_index":614,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.getcollection$(key",{"_index":750,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.getstorage(key",{"_index":739,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.http",{"_index":377,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity",{"_index":375,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.next(identity",{"_index":410,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.next(storage",{"_index":406,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.subscribe",{"_index":373,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity.authstate",{"_index":302,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["this.identity.identity",{"_index":559,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.identity.identity$.subscribe",{"_index":560,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.identity.identity?.token",{"_index":642,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.identity.setidentity(new",{"_index":776,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.identity.userlogin(new",{"_index":473,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.identity.userlogout",{"_index":561,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.identity.username",{"_index":383,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity.userregister(new",{"_index":615,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.initialize(args.scope",{"_index":443,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.log",{"_index":705,"title":{},"body":{"modules/SharedModule.html":{}}}],["this.logscopes$[args?.scope",{"_index":442,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes$[args?.scope].next(logitems",{"_index":446,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes$[scope",{"_index":448,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes[args?.scope",{"_index":440,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes[key].length",{"_index":456,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes[scope",{"_index":450,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logtoconsole",{"_index":451,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.message.show('login",{"_index":386,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.message.show('registration",{"_index":396,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.message.show('signing",{"_index":399,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.message.show('success",{"_index":381,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.password",{"_index":105,"title":{},"body":{"classes/Account.html":{}}}],["this.router.events.subscribe",{"_index":704,"title":{},"body":{"modules/SharedModule.html":{}}}],["this.router.navigate(['account",{"_index":303,"title":{},"body":{"guards/IdentityGuard.html":{},"components/NavigationComponent.html":{}}}],["this.router.navigatebyurl('schedule",{"_index":479,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.service.error(message",{"_index":538,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.info(message",{"_index":540,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.success(message",{"_index":541,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.autodismiss",{"_index":516,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.closebutton",{"_index":517,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.easing",{"_index":518,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.extendedtimeout",{"_index":530,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.maxopened",{"_index":524,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.newestontop",{"_index":520,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.positionclass",{"_index":532,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.preventduplicates",{"_index":527,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.progressanimation",{"_index":522,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.progressbar",{"_index":521,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.taptodismiss",{"_index":526,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.timeout",{"_index":528,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.warning(message",{"_index":543,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.setidentity",{"_index":402,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.setstorage(key",{"_index":752,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.token",{"_index":273,"title":{},"body":{"classes/Identity.html":{}}}],["this.uid",{"_index":246,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["this.username",{"_index":104,"title":{},"body":{"classes/Account.html":{}}}],["this[key",{"_index":251,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["throw",{"_index":392,"title":{},"body":{"injectables/IdentityService.html":{}}}],["title",{"_index":513,"title":{},"body":{"injectables/MessageService.html":{}}}],["titlecase",{"_index":501,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["tmodel",{"_index":224,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["toast",{"_index":533,"title":{},"body":{"injectables/MessageService.html":{}}}],["toastr",{"_index":515,"title":{},"body":{"injectables/MessageService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":685,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastrmodule.forroot",{"_index":700,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["toastrservice",{"_index":508,"title":{},"body":{"injectables/MessageService.html":{}}}],["token",{"_index":259,"title":{},"body":{"classes/Identity.html":{},"interceptors/TokenInterceptor.html":{}}}],["tokeninterceptor",{"_index":698,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["topromise",{"_index":379,"title":{},"body":{"injectables/IdentityService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["true",{"_index":306,"title":{},"body":{"guards/IdentityGuard.html":{},"injectables/MessageService.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":389,"title":{},"body":{"injectables/IdentityService.html":{}}}],["ts",{"_index":236,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"dependencies.html":{}}}],["tslib",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":88,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/IEndpoint.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"injectables/ScheduleService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":913,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["uid",{"_index":239,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["unit",{"_index":887,"title":{},"body":{"index.html":{}}}],["updatestorage",{"_index":716,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatestorage(key",{"_index":726,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatestorage>(key",{"_index":737,"title":{},"body":{"injectables/StorageService.html":{}}}],["use",{"_index":877,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":709,"title":{},"body":{"modules/SharedModule.html":{}}}],["user",{"_index":498,"title":{},"body":{"components/LoginComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["user.email",{"_index":778,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["userformservice",{"_index":313,"title":{"injectables/UserFormService.html":{}},"body":{"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFormService.html":{},"coverage.html":{},"overview.html":{}}}],["userlogin",{"_index":345,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userlogin(account",{"_index":356,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userlogout",{"_index":346,"title":{},"body":{"injectables/IdentityService.html":{}}}],["username",{"_index":78,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFormService.html":{}}}],["userregister",{"_index":347,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userregister(account",{"_index":359,"title":{},"body":{"injectables/IdentityService.html":{}}}],["usevalue",{"_index":708,"title":{},"body":{"modules/SharedModule.html":{}}}],["validators",{"_index":786,"title":{},"body":{"injectables/UserFormService.html":{}}}],["validators.email",{"_index":788,"title":{},"body":{"injectables/UserFormService.html":{}}}],["validators.required",{"_index":787,"title":{},"body":{"injectables/UserFormService.html":{}}}],["value",{"_index":362,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.email",{"_index":476,"title":{},"body":{"components/LoginComponent.html":{}}}],["value.password",{"_index":475,"title":{},"body":{"components/LoginComponent.html":{}}}],["values",{"_index":724,"title":{},"body":{"injectables/StorageService.html":{}}}],["values.foreach(current",{"_index":740,"title":{},"body":{"injectables/StorageService.html":{}}}],["values.foreach(item",{"_index":757,"title":{},"body":{"injectables/StorageService.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["variable",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":916,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":862,"title":{},"body":{"index.html":{}}}],["via",{"_index":891,"title":{},"body":{"index.html":{}}}],["view",{"_index":206,"title":{},"body":{"components/AppointmentViewComponent.html":{}}}],["view'},{'name",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["view.component",{"_index":664,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["view.component.html",{"_index":208,"title":{},"body":{"components/AppointmentViewComponent.html":{}}}],["view.component.scss",{"_index":207,"title":{},"body":{"components/AppointmentViewComponent.html":{}}}],["view.component.ts",{"_index":205,"title":{},"body":{"components/AppointmentViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:12",{"_index":210,"title":{},"body":{"components/AppointmentViewComponent.html":{}}}],["view.component.ts:8",{"_index":209,"title":{},"body":{"components/AppointmentViewComponent.html":{}}}],["view/appointment",{"_index":204,"title":{},"body":{"components/AppointmentViewComponent.html":{},"modules/ScheduleModule.html":{},"coverage.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["warn",{"_index":845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["warning",{"_index":853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["welcome",{"_index":382,"title":{},"body":{"injectables/IdentityService.html":{}}}],["white",{"_index":575,"title":{},"body":{"components/NavigationComponent.html":{}}}],["works",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentFormComponent.html":{},"components/AppointmentListComponent.html":{},"components/AppointmentViewComponent.html":{},"components/HomeComponent.html":{}}}],["y",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["yes",{"_index":90,"title":{},"body":{"classes/Account.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{},"injectables/StorageService.html":{}}}],["zone.js",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/sections/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/sections/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/sections/about/about.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  about works!\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  about works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentFormComponent', 'selector': 'app-appointment-form'},{'name': 'AppointmentListComponent', 'selector': 'app-appointment-list'},{'name': 'AppointmentViewComponent', 'selector': 'app-appointment-view'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/account.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ModelBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                userName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userName?: string, password?: string, email?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/account.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/account.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/account.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/account.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelBase } from '@models/base.model'\n\nexport class Account extends ModelBase {\n  public userName: string;\n  public password: string;\n  public email   : string;\n  // ======================================= //\n  constructor(userName?: string, password?: string, email?: string) {\n    super();\n    this.userName = userName ?? userName;\n    this.password = password ?? password;\n    this.email    = email    ?? email   ;\n  }\n  // ======================================= //\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector   :  'app-root'            ,\n  templateUrl:  './app.component.html',\n  styleUrls  : ['./app.component.scss']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .content {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n\n  .content-header {\n    height: 50px;\n  }\n  .content-main {\n    flex: auto;\n    overflow-y: auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentFormComponent', 'selector': 'app-appointment-form'},{'name': 'AppointmentListComponent', 'selector': 'app-appointment-list'},{'name': 'AppointmentViewComponent', 'selector': 'app-appointment-view'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                } from '@angular/core'\nimport { BrowserModule           } from '@angular/platform-browser'\nimport { SharedModule            } from '@common/shared.module'\nimport { environment      as env } from '@env/environment'\nimport { AppRoutingModule        } from './app-routing.module'\nimport { AppComponent            } from './app.component'\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule.forRoot({ environment: env })\n  ],\n  declarations: [AppComponent],\n  bootstrap   : [AppComponent],\n  providers   : [            ],\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule              } from '@angular/core'\nimport { RouterModule , Routes } from '@angular/router'\nimport { IdentityGuard         } from '@services/identity.guard'\n\nconst routes: Routes = [\n  // ======================================= //\n  { path: 'account'  ,                               loadChildren: () => \"import('./identity/identity.module').then(m => m.IdentityModule)\" },\n  { path: 'schedule' , canActivate: [IdentityGuard], loadChildren: () => \"import('./schedule/schedule.module').then(m => m.ScheduleModule)\" },\n  { path: ''         , canActivate: [IdentityGuard], loadChildren: () => \"import('./schedule/schedule.module').then(m => m.ScheduleModule)\" },\n  { path: '**', pathMatch: 'full', redirectTo: '' }\n];\n// ======================================= //\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppSettings.html":{"url":"classes/AppSettings.html","title":"class - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/app.settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                endpoints\n                            \n                            \n                                    Public\n                                environment\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/app.settings.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/app.settings.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Endpoints, IEndpoint } from '@helpers/endpoint.interface'\n\nexport class AppSettings {\n  public endpoints?: { [provider: string]: IEndpoint };\n  public environment: { production: boolean, endpoints: Endpoints };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppointmentFormComponent.html":{"url":"components/AppointmentFormComponent.html","title":"component - AppointmentFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppointmentFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/schedule/appointment-form/appointment-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-appointment-form\n            \n\n            \n                styleUrls\n                ./appointment-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./appointment-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/schedule/appointment-form/appointment-form.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/schedule/appointment-form/appointment-form.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appointment-form',\n  templateUrl: './appointment-form.component.html',\n  styleUrls: ['./appointment-form.component.scss']\n})\nexport class AppointmentFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  appointment-form works!\n\n\n    \n\n    \n                \n                    ./appointment-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  appointment-form works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentFormComponent', 'selector': 'app-appointment-form'},{'name': 'AppointmentListComponent', 'selector': 'app-appointment-list'},{'name': 'AppointmentViewComponent', 'selector': 'app-appointment-view'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppointmentFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppointmentFormService.html":{"url":"injectables/AppointmentFormService.html","title":"injectable - AppointmentFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppointmentFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/appointment-form.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/appointment-form.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AppointmentFormService {\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppointmentListComponent.html":{"url":"components/AppointmentListComponent.html","title":"component - AppointmentListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppointmentListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/schedule/appointment-list/appointment-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-appointment-list\n            \n\n            \n                styleUrls\n                ./appointment-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./appointment-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/schedule/appointment-list/appointment-list.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/schedule/appointment-list/appointment-list.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appointment-list',\n  templateUrl: './appointment-list.component.html',\n  styleUrls: ['./appointment-list.component.scss']\n})\nexport class AppointmentListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  appointment-list works!\n\n\n    \n\n    \n                \n                    ./appointment-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  appointment-list works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentFormComponent', 'selector': 'app-appointment-form'},{'name': 'AppointmentListComponent', 'selector': 'app-appointment-list'},{'name': 'AppointmentViewComponent', 'selector': 'app-appointment-view'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppointmentListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppointmentViewComponent.html":{"url":"components/AppointmentViewComponent.html","title":"component - AppointmentViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppointmentViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/schedule/appointment-view/appointment-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-appointment-view\n            \n\n            \n                styleUrls\n                ./appointment-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./appointment-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/schedule/appointment-view/appointment-view.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/schedule/appointment-view/appointment-view.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appointment-view',\n  templateUrl: './appointment-view.component.html',\n  styleUrls: ['./appointment-view.component.scss']\n})\nexport class AppointmentViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  appointment-view works!\n\n\n    \n\n    \n                \n                    ./appointment-view.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  appointment-view works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentFormComponent', 'selector': 'app-appointment-form'},{'name': 'AppointmentListComponent', 'selector': 'app-appointment-list'},{'name': 'AppointmentViewComponent', 'selector': 'app-appointment-view'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppointmentViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/sections/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/sections/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/sections/home/home.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  home works!\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  home works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentFormComponent', 'selector': 'app-appointment-form'},{'name': 'AppointmentListComponent', 'selector': 'app-appointment-list'},{'name': 'AppointmentViewComponent', 'selector': 'app-appointment-view'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEndpoint.html":{"url":"interfaces/IEndpoint.html","title":"interface - IEndpoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEndpoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/endpoint.interface.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface IEndpoint {\n}\nexport type Endpoints = { [key: string]: IEndpoint };\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeyValue.html":{"url":"interfaces/IKeyValue.html","title":"interface - IKeyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/key.value.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    TModel\n\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/helpers/key.value.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface IKeyValue {\n  // ======================================= //\n  [ key: string ]: TModel;\n  // ======================================= //\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILoggerModel.html":{"url":"interfaces/ILoggerModel.html","title":"interface - ILoggerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILoggerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/logger.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        descriptor\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        scope\n                                \n                                \n                                            Optional\n                                        target\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        descriptor\n                                    \n                                \n                                \n                                    \n                                        descriptor:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:         LogScope\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LogScope\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LogScope } from '@enums/log.scope.enum'\nimport { Guid } from 'guid-ts';\n\nexport interface ILoggerModel {\n  message   ?: string  ;\n  descriptor?: any     ;\n  name      ?: any     ;\n  scope     ?: LogScope;\n  target    ?: any     ;\n  items?: { [item: string]: any };\n}\nexport class LoggerModel {\n  // ======================================= //\n  public uid        : string  ;\n  public createdAt  : number  ;\n  public scope      : LogScope;\n  public caller     : string  ;\n  public description: string  ;\n  public class      : string  ;\n  public source     : string  ;\n  public items: { [item: string]: any };\n  // ======================================= //\n  constructor(args?: ILoggerModel) {\n    this.createdAt = new Date().valueOf();\n    this.uid = Guid.newGuid().toString().split('-')[0];\n    // ======================================= //\n    Object.keys(args)\n      .forEach(key => this[key] = args[key] );\n  }\n  // ======================================= //\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IModelBase.html":{"url":"interfaces/IModelBase.html","title":"interface - IModelBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IModelBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/base.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        isActive\n                                \n                                \n                                            Optional\n                                        isDefault\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDefault\n                                    \n                                \n                                \n                                    \n                                        isDefault:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IModelBase {\n  id         ?: number ;\n  name       ?: string ;\n  description?: string ;\n  isActive   ?: boolean;\n  isDefault  ?: boolean;\n}\nexport class ModelBase> {\n  // ======================================= //\n  public id         : number ;\n  public created    : number ;\n  public description: string ;\n  public isActive   : boolean;\n  public isDefault  : boolean;\n  public name       : string ;\n  // ======================================= //\n  constructor(args?: IModelBase) {\n    args ?? Object.keys(this)\n      .forEach(key => this[key] = this[key] ?? args[key]);\n  }\n  // ======================================= //\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Identity.html":{"url":"classes/Identity.html","title":"class - Identity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Identity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/identity.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Account\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                userName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, email: string, token: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/identity.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/identity.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account } from '@models/account.model'\n\nexport class Identity extends Account {\n  public token: string;\n  // ======================================= //\n  constructor(username: string, email: string, token: string) {\n    super(username, null, email);\n    this.token = token;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IdentityComponent.html":{"url":"components/IdentityComponent.html","title":"component - IdentityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IdentityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/identity.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-identity\n            \n\n            \n                styleUrls\n                ./identity.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./identity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/identity.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/identity.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-identity',\n  templateUrl: './identity.component.html',\n  styleUrls: ['./identity.component.scss']\n})\nexport class IdentityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n       Login to continue\n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./identity.component.scss\n                \n                @import \"themes.scss\";\n\n.container {\n  margin: 5% auto 0px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 Login to continue                                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentFormComponent', 'selector': 'app-appointment-form'},{'name': 'AppointmentListComponent', 'selector': 'app-appointment-list'},{'name': 'AppointmentViewComponent', 'selector': 'app-appointment-view'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IdentityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IdentityGuard.html":{"url":"guards/IdentityGuard.html","title":"guard - IdentityGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    IdentityGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/@common/services/identity.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/identity.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable                                                       } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router'\nimport { IdentityService                                                  } from '@services/identity.service'\n\n@Injectable()\nexport class IdentityGuard implements CanActivate {\n  // ======================================= //\n  constructor(private identity: IdentityService, private router: Router) { }\n  // ======================================= //\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!this.identity.authState) {\n      this.router.navigate(['account']);\n      return false;\n    }\n    return true;\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentityModule.html":{"url":"modules/IdentityModule.html","title":"module - IdentityModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentityModule\n\n\n\ncluster_IdentityModule_providers\n\n\n\ncluster_IdentityModule_imports\n\n\n\ncluster_IdentityModule_declarations\n\n\n\n\nIdentityComponent\n\nIdentityComponent\n\n\n\nIdentityModule\n\nIdentityModule\n\nIdentityModule -->\n\nIdentityComponent->IdentityModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nIdentityModule -->\n\nLoginComponent->IdentityModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nIdentityModule -->\n\nRegisterComponent->IdentityModule\n\n\n\n\n\nIdentityRoutingModule\n\nIdentityRoutingModule\n\nIdentityModule -->\n\nIdentityRoutingModule->IdentityModule\n\n\n\n\n\nUserFormService\n\nUserFormService\n\nIdentityModule -->\n\nUserFormService->IdentityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/identity/identity.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IdentityComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            UserFormService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentityRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule          } from '@angular/common'\nimport { NgModule              } from '@angular/core'\nimport { ReactiveFormsModule   } from '@angular/forms'\nimport { IdentityRoutingModule } from '@identity/identity.routing.module'\nimport { LoginComponent        } from '@identity/login/login.component'\nimport { RegisterComponent     } from '@identity/register/register.component'\nimport { UserFormService       } from '@services/user-form.service'\nimport { IdentityComponent     } from './identity.component'\n\n@NgModule({\n  imports     : [CommonModule     , ReactiveFormsModule, IdentityRoutingModule],\n  declarations: [IdentityComponent, LoginComponent, RegisterComponent         ],\n  providers   : [UserFormService                                              ]\n})\nexport class IdentityModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IdentityResolver.html":{"url":"guards/IdentityResolver.html","title":"guard - IdentityResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    IdentityResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/@common/services/identity.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/identity.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.resolver.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable                              } from 'rxjs'\nimport { Injectable                              } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router'\nimport { IdentityService                         } from '@services/identity.service'\n\n@Injectable()\nexport class IdentityResolver implements Resolve {\n  // ======================================= //\n  constructor(private identity: IdentityService, private router: Router) { }\n  // ======================================= //\n\n  resolve(route: ActivatedRouteSnapshot): Observable | Promise | any {\n\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentityRoutingModule.html":{"url":"modules/IdentityRoutingModule.html","title":"module - IdentityRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentityRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/identity/identity.routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                  } from '@angular/core'\nimport { RouterModule     , Routes } from '@angular/router'\nimport { IdentityComponent         } from '@identity/identity.component'         ;\nimport { LoginComponent            } from '@identity/login/login.component'\nimport { RegisterComponent         } from '@identity/register/register.component'\n\nconst routes: Routes = [\n  // ======================================= //\n  { path: ''        , component:         IdentityComponent          },\n  { path: 'login'   , component:         LoginComponent             },\n  { path: 'register', component:         RegisterComponent          },\n  { path: '**'      , pathMatch: 'full', redirectTo       : 'login' }\n];\n// ======================================= //\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IdentityRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentityService.html":{"url":"injectables/IdentityService.html","title":"injectable - IdentityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IdentityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/identity.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authState\n                            \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Public\n                                identity\n                            \n                            \n                                    Public\n                                identity$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkIdentity\n                            \n                            \n                                    Public\n                                setIdentity\n                            \n                            \n                                    Public\n                                userLogin\n                            \n                            \n                                    Public\n                                userLogout\n                            \n                            \n                                    Public\n                                userRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: MessageService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/identity.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            checkIdentity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIdentity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setIdentity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setIdentity(identity?: Identity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identity\n                                    \n                                                Identity\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogin(account: Account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                Account\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userRegister(account: Account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                Account\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/identity.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:5000'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/identity.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Identity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/identity.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identity$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/identity.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject        } from 'rxjs'\nimport { HttpClient     } from '@angular/common/http'\nimport { Injectable     } from '@angular/core'\nimport { Account        } from '@models/account.model'\nimport { Identity       } from '@models/identity.model'\nimport { MessageService } from '@services/message.service'\nimport { MessageType    } from '@enums/message.enum'\n\n@Injectable()\nexport class IdentityService {\n  private readonly baseUrl: string = 'http://localhost:5000';\n  // ======================================= //\n  public authState: boolean = false                            ;\n  public identity : Identity                                   ;\n  public identity$: Subject = new Subject();\n  // ======================================= //\n  constructor(private message: MessageService, private http: HttpClient) {\n    this.identity$.subscribe({\n      next: result => this.identity = result\n    });\n    this.checkIdentity();\n  }\n  // ======================================= //\n  public userLogin(account: Account): Promise {\n    return this.http\n      .post(`${this.baseUrl}/auth`, account)\n      .toPromise()\n      .then((result) => {\n        this.message.show('Success!', `Welcome ${this.identity.userName}`, MessageType.Success);\n        return result;\n      })\n      .catch((error) => { this.message.show('Login Failure!', 'Please try again', MessageType.Error); throw error });\n  }\n  public userRegister(account: Account): Promise {\n    return this.http\n      .put(`${this.baseUrl}/auth`, account)\n      .toPromise()\n      .then((result) => {\n        this.message.show('Success!', `Account successfully created`, MessageType.Success)\n        return result;\n      })\n      .catch((error) => { this.message.show('Registration Failed!', '', MessageType.Error); throw error });\n  }\n  public userLogout(): Promise {\n    return Promise.resolve()\n      .then(() => this.message.show('Signing Out', `Goodbye ${this.identity.userName}`, MessageType.Information))\n      .then(() => this.setIdentity());\n  }\n  public async checkIdentity() {\n    const storage: Identity = JSON.parse(localStorage.getItem('identity')) as Identity;\n    this.authState = storage != null;\n    if (storage && !this.identity) {\n      this.identity$.next(storage);\n    }\n  }\n  public setIdentity(identity?: Identity) {\n    identity\n      ? localStorage.setItem('identity', JSON.stringify(identity))\n      : localStorage.removeItem('identity');\n    this.authState = identity != null;\n    this.identity$.next(identity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerModel.html":{"url":"classes/LoggerModel.html","title":"class - LoggerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/logger.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                caller\n                            \n                            \n                                    Public\n                                class\n                            \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                scope\n                            \n                            \n                                    Public\n                                source\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ILoggerModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/helpers/logger.model.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ILoggerModel\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            caller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogScope\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LogScope } from '@enums/log.scope.enum'\nimport { Guid } from 'guid-ts';\n\nexport interface ILoggerModel {\n  message   ?: string  ;\n  descriptor?: any     ;\n  name      ?: any     ;\n  scope     ?: LogScope;\n  target    ?: any     ;\n  items?: { [item: string]: any };\n}\nexport class LoggerModel {\n  // ======================================= //\n  public uid        : string  ;\n  public createdAt  : number  ;\n  public scope      : LogScope;\n  public caller     : string  ;\n  public description: string  ;\n  public class      : string  ;\n  public source     : string  ;\n  public items: { [item: string]: any };\n  // ======================================= //\n  constructor(args?: ILoggerModel) {\n    this.createdAt = new Date().valueOf();\n    this.uid = Guid.newGuid().toString().split('-')[0];\n    // ======================================= //\n    Object.keys(args)\n      .forEach(key => this[key] = args[key] );\n  }\n  // ======================================= //\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logScopes\n                            \n                            \n                                    Public\n                                logScopes$\n                            \n                            \n                                    Private\n                                stackTrace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Private\n                                logToConsole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/logger.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(scope: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scope\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(args?: ILoggerModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ILoggerModel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            logToConsole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logToConsole()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/logger.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logScopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/logger.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logScopes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue>\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/logger.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stackTrace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/logger.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { Injectable } from '@angular/core'\nimport { AppSettings } from '@helpers/app.settings'\nimport { IKeyValue } from '@helpers/key.value'\nimport { ILoggerModel, LoggerModel } from '@helpers/logger.model'\n\n@Injectable()\nexport class LoggerService {\n  private stackTrace: any = {};\n  // ======================================= //\n  public logScopes: IKeyValue = {};\n  public logScopes$: IKeyValue> = {};\n  // ======================================= //\n  constructor(private config: AppSettings) { }\n  // ======================================= //\n  public log(args?: ILoggerModel) {\n    let logItems = this.logScopes[args?.scope]\n      ? this.logScopes[args?.scope]\n      : new Array();\n\n    if (!this.logScopes$[args?.scope]) {\n      this.logScopes$[args?.scope] = new Subject();\n      this.initialize(args.scope);\n    }\n    logItems.unshift(new LoggerModel(args));\n    this.logScopes$[args?.scope].next(logItems);\n  }\n\n  private initialize(scope: string) {\n    if (!this.config.environment.production) {\n      this.logScopes$[scope]\n        .subscribe({\n          next: (value: LoggerModel[]) => {\n            this.logScopes[scope] = value;\n            this.logToConsole();\n          }\n        });\n    }\n  }\n  private logToConsole() {\n    // console.clear();\n    // Object.keys(this.logScopes).forEach(key => {\n    //   console.groupCollapsed(`%c \\t\\t${key} Scope => ${this.logScopes[key].length \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getErrors\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, formService: UserFormService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        UserFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getErrors(control: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/login/login.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/login/login.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/login/login.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/identity/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpErrorResponse         } from '@angular/common/http'\nimport { Component        , OnInit } from '@angular/core'\nimport { FormGroup                 } from '@angular/forms'\nimport { Router                    } from '@angular/router'\nimport { Account                   } from '@models/account.model'\nimport { IdentityService           } from '@services/identity.service'\nimport { UserFormService           } from '@services/user-form.service'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public formGroup: FormGroup;\n  // ======================================= //\n  constructor(private identity: IdentityService, private formService: UserFormService, private router: Router) { }\n  ngOnInit() { this.formGroup = this.formService.generateLoginForm(); }\n  // ======================================= //\n  public login() {\n    const value = this.formGroup.value;\n    this.identity.userLogin(new Account(value.username, value.password, value.email))\n      .then(result => {\n        this.formGroup.reset();\n        this.router.navigateByUrl('schedule');\n      })\n      .catch((response: HttpErrorResponse) => {\n        if (response.status == 401) {\n          Object.keys(response.error)\n            .forEach(field => {\n              if (this.formGroup.controls[field.toLowerCase()]) {\n                this.formGroup.controls[field.toLowerCase()]?.setErrors(\n                  field.toLowerCase().match('username')\n                    ? { username: response.error[field]['errors'][0]['errorMessage'] }\n                    : { password: response.error[field]['errors'][0]['errorMessage'] });\n              }\n              else this.formGroup.setErrors({ 'credentials': response.error })\n            });\n        }\n        else if (response.status == 400) {\n          Object.keys(response.error.errors)\n            .forEach(field => {\n              this.formGroup.controls[field.toLowerCase()]?.setErrors(field.toLowerCase().match('username')\n                ? { username: response.error.errors[field] }\n                : { password: response.error.errors[field] });\n            });\n        }\n      });\n  }\n  public getErrors(control: string) {\n    return Object.keys(this.formGroup.get(control).errors);\n  }\n}\n    \n\n    \n        \n  \n  \n    \n    Existing User Login\n  \n  \n    \n      \n        \n\n      \n    \n    \n      \n        Username:\n        \n          \n          \n        \n        \n      \n    \n    \n      \n        Password:\n        \n          \n          \n        \n      \n    \n    \n  \n\n  \n    \n       Login\n  \n\n\n\n  \n  \n     Invalid {{field | titlecase}}\n    \n      \n      \n      {{field | titlecase}} is required\n      {{this.formGroup.get(field).errors[message]}}\n    \n    \n    \n       Login Failed!\n      {{this.formGroup.errors[field]}}\n    \n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Existing User Login                                                  Username:                                                                        Password:                                                                 Login           Invalid {{field | titlecase}}                      {{field | titlecase}} is required      {{this.formGroup.get(field).errors[message]}}                   Login Failed!      {{this.formGroup.errors[field]}}      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentFormComponent', 'selector': 'app-appointment-form'},{'name': 'AppointmentListComponent', 'selector': 'app-appointment-list'},{'name': 'AppointmentViewComponent', 'selector': 'app-appointment-view'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/message.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/message.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(title: string, message: string, type: MessageType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/message.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                MessageType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        MessageType.Information\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ToastrService } from 'ngx-toastr'\nimport { Injectable    } from '@angular/core'\nimport { MessageType   } from '@enums/message.enum'\n\n@Injectable()\nexport class MessageService {\n  // ======================================= //\n  constructor(private service: ToastrService) {\n    this.service.toastrConfig.autoDismiss       = true                ;\n    this.service.toastrConfig.closeButton       = true                ;\n    this.service.toastrConfig.easing            = 'ease-in-out'       ;\n    this.service.toastrConfig.newestOnTop       = false               ;\n    this.service.toastrConfig.progressBar       = true                ;\n    this.service.toastrConfig.progressAnimation = 'decreasing'        ;\n    this.service.toastrConfig.maxOpened         = 2                   ;\n    this.service.toastrConfig.tapToDismiss      = true                ;\n    this.service.toastrConfig.preventDuplicates = false               ;\n    this.service.toastrConfig.timeOut           = 1500                ;\n    this.service.toastrConfig.extendedTimeOut   = 1000                ;\n    this.service.toastrConfig.positionClass     = 'toast-bottom-right';\n  }\n  // ======================================= //\n  public show(title: string, message: string, type: MessageType = MessageType.Information) {\n    switch (type) {\n      case MessageType.Error:\n        this.service.error(message, title);\n        break;\n        case MessageType.Information:\n        this.service.info(message, title);\n        break;\n        case MessageType.Success:\n        this.service.success(message, title);\n        break;\n        case MessageType.Warning:\n        this.service.warning(message, title);\n        break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModelBase.html":{"url":"classes/ModelBase.html","title":"class - ModelBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/base.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IModelBase)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/base.model.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IModelBase\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IModelBase {\n  id         ?: number ;\n  name       ?: string ;\n  description?: string ;\n  isActive   ?: boolean;\n  isDefault  ?: boolean;\n}\nexport class ModelBase> {\n  // ======================================= //\n  public id         : number ;\n  public created    : number ;\n  public description: string ;\n  public isActive   : boolean;\n  public isDefault  : boolean;\n  public name       : string ;\n  // ======================================= //\n  constructor(args?: IModelBase) {\n    args ?? Object.keys(this)\n      .forEach(key => this[key] = this[key] ?? args[key]);\n  }\n  // ======================================= //\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/navigation/navigation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                account\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/navigation/navigation.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/navigation/navigation.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/navigation/navigation.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Account\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/navigation/navigation.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component      , OnInit } from '@angular/core'\nimport { Router                  } from '@angular/router'           ;\nimport { Account                 } from '@models/account.model'\nimport { IdentityService         } from '@services/identity.service'\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n  public account: Account;\n  constructor(private identity: IdentityService, private router: Router) {\n    this.account = this.identity.identity;\n    this.identity.identity$.subscribe({\n      next: (result: Account) => this.account = result\n    });\n  }\n\n  ngOnInit() { }\n\n  public logout() {\n    this.identity.userLogout();\n    this.router.navigate(['account']);\n  }\n}\n\n    \n\n    \n        \n  \n     LePooch Shop\n  \n  \n    \n       Api Docs\n    \n    \n      \n        \n           {{this.account?.userName}} \n          \n        \n        \n           Logout\n           Login\n        \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                @import \"themes.scss\";\n\n.navigation {\n  background: $theme;\n  height: 50px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px 30px;\n  color: white;\n\n  .nav-brand {\n    font-size: 20px;\n  }\n  .nav-actions {\n    flex: auto;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    .nav-start {\n      display: flex;\n      .nav-action {\n        margin-left: 20px;\n      }\n    }\n    .nav-end {\n      display: flex;\n    }\n  }\n  .fa {\n    font-size: 18px;\n  }\n  .nav-action {\n    color: white;\n    display: flex;\n    align-items: center;\n  }\n  .nav-action:hover {\n    background: lighten($color: $theme, $amount: 10%);\n  }\n}\n.btn-text {\n  margin-left: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       LePooch Shop               Api Docs                                 {{this.account?.userName}}                                      Logout           Login                          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentFormComponent', 'selector': 'app-appointment-form'},{'name': 'AppointmentListComponent', 'selector': 'app-appointment-list'},{'name': 'AppointmentViewComponent', 'selector': 'app-appointment-view'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/profile.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ModelBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                pooch\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/profile.model.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/profile.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/profile.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/profile.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pooch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/profile.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelBase } from '@models/base.model';\n\nexport class Profile extends ModelBase {\n  public email    : string;\n  public firstName: string;\n  public lastName : string;\n  public pooch    : string;\n  // ======================================= //\n  constructor() { super(); }\n  // ======================================= //\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, formService: UserFormService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/register/register.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        UserFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getErrors(control: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/register/register.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/register/register.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/register/register.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/identity/register/register.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http'\nimport { Component, OnInit } from '@angular/core'\nimport { FormGroup } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { Account } from '@models/account.model'\nimport { IdentityService } from '@services/identity.service'\nimport { UserFormService } from '@services/user-form.service'\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  public formGroup: FormGroup;\n  // ======================================= //\n  constructor(private identity: IdentityService, private formService: UserFormService, private router: Router) { }\n  ngOnInit() { this.formGroup = this.formService.generateRegisterForm(); }\n  // ======================================= //\n  public register() {\n    this.identity.userRegister(new Account(this.formGroup.value.username, this.formGroup.value.password, this.formGroup.value.email))\n      .then(result => {\n        this.formGroup.reset();\n        this.router.navigateByUrl('schedule');\n      })\n      .catch((response: HttpErrorResponse) => {\n        if (response.status == 401) {\n          Object.keys(response.error)\n            .forEach(field => {\n              if (this.formGroup.controls[field.toLowerCase()]) {\n                this.formGroup.controls[field.toLowerCase()]?.setErrors(\n                  field.toLowerCase().match('username')\n                    ? { username: response.error[field]['errors'][0]['errorMessage'] }\n                    : { password: response.error[field]['errors'][0]['errorMessage'] });\n              }\n              else this.formGroup.setErrors({ 'credentials': response.error })\n            });\n        }\n        else if (response.status == 400) {\n          if (response.error.errors) {\n            Object.keys(response.error.errors)\n              .forEach(field => {\n                switch (field.toLowerCase()) {\n                  case 'username':\n                    this.formGroup\n                      .controls[field.toLowerCase()]\n                      .setErrors({ 'username': response.error.errors[field][0] });\n                    break;\n                  case 'password':\n                    this.formGroup\n                      .controls[field.toLowerCase()]\n                      .setErrors({ 'password': response.error.errors[field][0] });\n                    break;\n                  case 'email':\n                    this.formGroup\n                      .controls[field.toLowerCase()]\n                      .setErrors({ 'email': response.error.errors[field][0] });\n                    break;\n                }\n              });\n          }\n          else {\n            Object.keys(response.error).forEach(field => {\n              switch (field.toLowerCase()) {\n                case 'username':\n                  this.formGroup\n                    .controls[field.toLowerCase()]\n                    .setErrors({ 'username': response.error[field][0] });\n                  break;\n                case 'password':\n                  this.formGroup\n                    .controls[field.toLowerCase()]\n                    .setErrors({ 'password': response.error[field][0] });\n                  break;\n                case 'email':\n                  this.formGroup\n                    .controls[field.toLowerCase()]\n                    .setErrors({ 'email': response.error[field][0] });\n                  break;\n              }\n            });\n          }\n        }\n      });\n  }\n  public getErrors(control: string) {\n    return Object.keys(this.formGroup.get(control).errors);\n  }\n}\n    \n\n    \n        \n  \n  \n    \n    Register a New Account\n  \n  \n\n    \n      \n        Username:\n        \n          \n          \n        \n      \n      \n        Password:\n        \n          \n          \n        \n      \n    \n    \n      \n        \n        \n      \n    \n\n    \n      \n        Email:\n        \n          \n          \n        \n        \n      \n    \n  \n  \n    \n       Register\n    \n       Clear\n  \n\n\n\n  \n     Invalid {{field | titlecase}}\n    \n      \n      \n      {{field | titlecase}} is required\n      {{this.formGroup.get(field).errors[message]}}\n    \n  \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Register a New Account                      Username:                                                        Password:                                                                                                    Email:                                                                     Register           Clear         Invalid {{field | titlecase}}                      {{field | titlecase}} is required      {{this.formGroup.get(field).errors[message]}}      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentFormComponent', 'selector': 'app-appointment-form'},{'name': 'AppointmentListComponent', 'selector': 'app-appointment-list'},{'name': 'AppointmentViewComponent', 'selector': 'app-appointment-view'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/request.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings, identity: IdentityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/request.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/request.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable                                                 } from 'rxjs'\nimport { HttpEvent      , HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable                                                 } from '@angular/core'\nimport { AppSettings                                                } from '@helpers/app.settings'\nimport { IdentityService                                            } from '@services/identity.service'\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  // ======================================= //\n  constructor(private config: AppSettings, private identity: IdentityService) { }\n  // ======================================= //\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    console.log('Authorization', `Bearer ${this.identity.identity?.token}`);\n    const authReq = req.clone({\n      setHeaders: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.identity.identity?.token}`\n      }\n    });\n    return next.handle(authReq);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScheduleComponent.html":{"url":"components/ScheduleComponent.html","title":"component - ScheduleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScheduleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/schedule/schedule.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-schedule\n            \n\n            \n                styleUrls\n                ./schedule.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./schedule.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/schedule/schedule.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/schedule/schedule.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.scss']\n})\nexport class ScheduleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n  \n    \n      \n        \n          info\n        \n      \n      \n        \n          info\n        \n      \n      \n        \n          info\n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n      \n        \n          \n          \n        \n      \n    \n\n  \n\n    \n\n    \n                \n                    ./schedule.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      info                                      info                                      info                                                                                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentFormComponent', 'selector': 'app-appointment-form'},{'name': 'AppointmentListComponent', 'selector': 'app-appointment-list'},{'name': 'AppointmentViewComponent', 'selector': 'app-appointment-view'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScheduleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScheduleModule.html":{"url":"modules/ScheduleModule.html","title":"module - ScheduleModule","body":"\n                   \n\n\n\n\n    Modules\n    ScheduleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScheduleModule\n\n\n\ncluster_ScheduleModule_declarations\n\n\n\ncluster_ScheduleModule_imports\n\n\n\ncluster_ScheduleModule_providers\n\n\n\n\nAppointmentFormComponent\n\nAppointmentFormComponent\n\n\n\nScheduleModule\n\nScheduleModule\n\nScheduleModule -->\n\nAppointmentFormComponent->ScheduleModule\n\n\n\n\n\nAppointmentListComponent\n\nAppointmentListComponent\n\nScheduleModule -->\n\nAppointmentListComponent->ScheduleModule\n\n\n\n\n\nAppointmentViewComponent\n\nAppointmentViewComponent\n\nScheduleModule -->\n\nAppointmentViewComponent->ScheduleModule\n\n\n\n\n\nScheduleComponent\n\nScheduleComponent\n\nScheduleModule -->\n\nScheduleComponent->ScheduleModule\n\n\n\n\n\nScheduleRoutingModule\n\nScheduleRoutingModule\n\nScheduleModule -->\n\nScheduleRoutingModule->ScheduleModule\n\n\n\n\n\nAppointmentFormService\n\nAppointmentFormService\n\nScheduleModule -->\n\nAppointmentFormService->ScheduleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/schedule/schedule.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppointmentFormComponent\n                        \n                        \n                            AppointmentListComponent\n                        \n                        \n                            AppointmentViewComponent\n                        \n                        \n                            ScheduleComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppointmentFormService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ScheduleRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule             } from '@angular/common'\nimport { NgModule                 } from '@angular/core'\nimport { AppointmentFormComponent } from '@schedule/appointment-form/appointment-form.component'\nimport { AppointmentListComponent } from '@schedule/appointment-list/appointment-list.component'\nimport { AppointmentViewComponent } from '@schedule/appointment-view/appointment-view.component'\nimport { ScheduleComponent        } from '@schedule/schedule.component'\nimport { ScheduleRoutingModule    } from '@schedule/schedule.routing.module'\nimport { AppointmentFormService   } from '@services/appointment-form.service'\n\n@NgModule({\n  imports     : [CommonModule          , ScheduleRoutingModule                                                       ],\n  declarations: [ScheduleComponent     , AppointmentViewComponent, AppointmentFormComponent, AppointmentListComponent],\n  providers   : [AppointmentFormService                                                                              ]\n})\nexport class ScheduleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScheduleRoutingModule.html":{"url":"modules/ScheduleRoutingModule.html","title":"module - ScheduleRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ScheduleRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/schedule/schedule.routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                  } from '@angular/core'\nimport { RouterModule     , Routes } from '@angular/router'\nimport { ScheduleComponent         } from '@schedule/schedule.component'\n\nconst routes: Routes = [\n  // ======================================= //\n  { path: '', component: ScheduleComponent },\n];\n// ======================================= //\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ScheduleRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleService.html":{"url":"injectables/ScheduleService.html","title":"injectable - ScheduleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/schedule.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/schedule.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ScheduleService {\n\n  constructor(private http: HttpClient) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAboutComponent->SharedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nSharedModule -->\n\nHomeComponent->SharedModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nAboutComponent \n\nAboutComponent \n\nAboutComponent  -->\n\nSharedModule->AboutComponent \n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nSharedModule->HomeComponent \n\n\n\n\n\nIdentityModule \n\nIdentityModule \n\nIdentityModule  -->\n\nSharedModule->IdentityModule \n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nIdentityModule\n\nIdentityModule\n\nSharedModule -->\n\nIdentityModule->SharedModule\n\n\n\n\n\nIdentityService\n\nIdentityService\n\nSharedModule -->\n\nIdentityService->SharedModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nSharedModule -->\n\nLoggerService->SharedModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nSharedModule -->\n\nMessageService->SharedModule\n\n\n\n\n\nScheduleService\n\nScheduleService\n\nSharedModule -->\n\nScheduleService->SharedModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nSharedModule -->\n\nStorageService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/@common/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            NavigationComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            IdentityService\n                        \n                        \n                            LoggerService\n                        \n                        \n                            MessageService\n                        \n                        \n                            ScheduleService\n                        \n                        \n                            StorageService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            IdentityModule\n                        \n                        \n                            NavigationComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: AppSettings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/shared.module.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                AppSettings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ToastrModule                              } from 'ngx-toastr'\nimport { CommonModule                              } from '@angular/common'\nimport { HTTP_INTERCEPTORS      , HttpClientModule } from '@angular/common/http'\nimport { ModuleWithProviders    , NgModule         } from '@angular/core'\nimport { BrowserAnimationsModule                   } from '@angular/platform-browser/animations'\nimport { Router                 , RouterModule     } from '@angular/router'\nimport { NavigationComponent                       } from '@common/navigation/navigation.component'\nimport { LogScope                                  } from '@enums/log.scope.enum'\nimport { AppSettings                               } from '@helpers/app.settings'\nimport { IdentityModule                            } from '@identity/identity.module'\nimport { AboutComponent                            } from '@sections/about/about.component'\nimport { HomeComponent                             } from '@sections/home/home.component'\nimport { IdentityGuard                             } from '@services/identity.guard'\nimport { IdentityService                           } from '@services/identity.service'\nimport { LoggerService                             } from '@services/logger.service'\nimport { MessageService                            } from '@services/message.service'\nimport { RequestInterceptor                        } from '@services/request.interceptor'\nimport { ScheduleService                           } from '@services/schedule.service'\nimport { StorageService                            } from '@services/storage.service'\nimport { TokenInterceptor                          } from '@services/token.interceptor'\n\n// ======================================= //\nconst components: any[] = [AboutComponent, HomeComponent          , NavigationComponent                                                                   ];\nconst modules   : any[] = [CommonModule  , BrowserAnimationsModule, HttpClientModule   , IdentityModule, ToastrModule.forRoot(), RouterModule.forChild([])];\nconst services  : any[] = [MessageService, ScheduleService        , IdentityService    , IdentityGuard, LoggerService, StorageService                     ];\n// ======================================= //\n@NgModule({\n  declarations:  components,\n  imports     :  modules   ,\n  providers   :  services  ,\n  exports     : [modules   , components]\n})\nexport class SharedModule {\n  constructor(private logger: LoggerService, private router: Router) {\n    this.router.events.subscribe({\n      next: (value) => this.logger.log({ scope: LogScope.Router, items: { value: value } })\n    });\n  }\n\n  static forRoot(config: AppSettings): ModuleWithProviders {\n    return {\n      ngModule: SharedModule,\n      providers: [\n        { provide: AppSettings, useValue: config },\n        services,\n        { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true }\n      ]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                collection\n                            \n                            \n                                    Private\n                                    Readonly\n                                collection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCollection$\n                            \n                            \n                                    Public\n                                getStorage\n                            \n                            \n                                    Private\n                                setStorage\n                            \n                            \n                                    Public\n                                updateStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCollection$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollection$(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/storage.service.ts:41\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/storage.service.ts:15\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(key: string, values?: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/storage.service.ts:47\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    values\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStorage(key: string, values: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/storage.service.ts:27\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    values\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/storage.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            collection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue>\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/storage.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject     } from 'rxjs'\nimport { Injectable  } from '@angular/core'\nimport { AppSettings } from '@helpers/app.settings'\nimport { IKeyValue   } from '@helpers/key.value'\nimport { ModelBase   } from '@models/base.model'\n\n@Injectable()\nexport class StorageService {\n  private readonly collection: IKeyValue = {};\n  private readonly collection$: IKeyValue> = {};\n\n  // ======================================= //\n  constructor(private config: AppSettings) { }\n  // ======================================= //\n  public getStorage>(key: string): Promise {\n    return Promise.resolve().then(async () => {\n\n      const values: IKeyValue = JSON.parse(localStorage.getItem(key));\n      this.collection[key] = values\n        ? Object.keys(values)\n          .map(item => item[key])\n        : new Array();\n\n      return this.collection[key].slice() as T[];\n    });\n  }\n  public updateStorage>(key: string, values: T[]): Promise {\n    return Promise.resolve().then(async () => {\n\n      const storage: T[] = await this.getStorage(key);\n      values.forEach(current => {\n        const index = storage.findIndex(item => item?.id == current?.id || item?.name == current.name);\n        index > -1 ? storage.splice(index, 1, current) : storage.push(current);\n      });\n      this.getCollection$(key)\n        .next(await this.setStorage(key, storage.filter(value => value)));\n\n      return storage.filter(value => value) as T[];\n    });\n  }\n  public getCollection$>(key: string): Subject {\n    if (!this.collection$[key])\n      this.collection$[key] = new Subject();\n\n    return this.collection$[key] as Subject;\n  }\n  private setStorage>(key: string, values?: T[]): Promise {\n    return Promise.resolve().then(async () => {\n\n      const storage: IKeyValue = {};\n      values.forEach(item => storage[item.name] = item);\n      localStorage.setItem(key, JSON.stringify(storage));\n\n      return await this.getStorage(key) as T[];\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/token.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings, identity: IdentityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/token.interceptor.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/token.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable                                                               } from 'rxjs'\nimport { tap                                                                      } from 'rxjs/operators'\nimport { HttpEvent      , HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable                                                               } from '@angular/core'\nimport { AppSettings                                                              } from '@helpers/app.settings'\nimport { Identity                                                                 } from '@models/identity.model'\nimport { IdentityService                                                          } from '@services/identity.service'\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  // ======================================= //\n  constructor(private config: AppSettings, private identity: IdentityService) { }\n  // ======================================= //\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const started = Date.now();\n    return next.handle(req).pipe(\n      tap(event => {\n        if (event instanceof HttpResponse) {\n          if (event.headers.has('Authorization')) {\n            const token = event.headers.get('Authorization').replace('Bearer ', '');\n            const user: any = event.body;\n            this.identity.setIdentity(new Identity(user.userName, user.email, token));\n          }\n        }\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFormService.html":{"url":"injectables/UserFormService.html","title":"injectable - UserFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/user-form.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateLoginForm\n                            \n                            \n                                    Public\n                                generateRegisterForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/user-form.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateLoginForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateLoginForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/user-form.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateRegisterForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRegisterForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/user-form.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Injectable()\nexport class UserFormService {\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n  public generateLoginForm() {\n    return new FormGroup({\n      'username': new FormControl('', Validators.required),\n      'password': new FormControl('', Validators.required)\n    });\n  }\n  public generateRegisterForm() {\n    return new FormGroup({\n      'username': new FormControl('',  Validators.required                   ),\n      'password': new FormControl('',  Validators.required                   ),\n      'email'   : new FormControl('', [Validators.required, Validators.email]),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/@common/helpers/app.settings.ts\n            \n            class\n            AppSettings\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/endpoint.interface.ts\n            \n            interface\n            IEndpoint\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/key.value.ts\n            \n            interface\n            IKeyValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/logger.model.ts\n            \n            class\n            LoggerModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/logger.model.ts\n            \n            interface\n            ILoggerModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/@common/models/account.model.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/@common/models/base.model.ts\n            \n            class\n            ModelBase\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/@common/models/base.model.ts\n            \n            interface\n            IModelBase\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/@common/models/identity.model.ts\n            \n            class\n            Identity\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/@common/models/profile.model.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/@common/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/@common/sections/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/sections/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/appointment-form.service.ts\n            \n            injectable\n            AppointmentFormService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/@common/services/identity.guard.ts\n            \n            guard\n            IdentityGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/identity.resolver.ts\n            \n            guard\n            IdentityResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/identity.service.ts\n            \n            injectable\n            IdentityService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/@common/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/@common/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/request.interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/schedule.service.ts\n            \n            injectable\n            ScheduleService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/@common/services/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/@common/services/token.interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/user-form.service.ts\n            \n            injectable\n            UserFormService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/@common/shared.module.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/shared.module.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/shared.module.ts\n            \n            variable\n            services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/identity/identity.component.ts\n            \n            component\n            IdentityComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/identity/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/schedule/appointment-form/appointment-form.component.ts\n            \n            component\n            AppointmentFormComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/schedule/appointment-list/appointment-list.component.ts\n            \n            component\n            AppointmentListComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/schedule/appointment-view/appointment-view.component.ts\n            \n            component\n            AppointmentViewComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/schedule/schedule.component.ts\n            \n            component\n            ScheduleComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            endpoints\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            endpoints\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            bootstrap : ^4.5.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.2.1\n        \n            guid-ts : ^1.1.0\n        \n            jquery : ^3.5.1\n        \n            ngx-toastr : ^13.2.0\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Context   (src/.../context.enum.ts)\n                        \n                        \n                            LogLevel   (src/.../log.level.enum.ts)\n                        \n                        \n                            LogScope   (src/.../log.scope.enum.ts)\n                        \n                        \n                            MessageType   (src/.../message.enum.ts)\n                        \n                        \n                            Provider   (src/.../providers.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/@common/enums/context.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Context\n                    \n                \n                        \n                            \n                                 Account\n                            \n                        \n                        \n                            \n                                Value : Account\n                            \n                        \n                        \n                            \n                                 Identity\n                            \n                        \n                        \n                            \n                                Value : Identity\n                            \n                        \n            \n        \n\n    src/app/@common/enums/log.level.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : Debug\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : Error\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                Value : Info\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : Warn\n                            \n                        \n            \n        \n\n    src/app/@common/enums/log.scope.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LogScope\n                    \n                \n                        \n                            \n                                 Authentication\n                            \n                        \n                        \n                            \n                                Value : Authentication\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : Error\n                            \n                        \n                        \n                            \n                                 Lifecycle\n                            \n                        \n                        \n                            \n                                Value : Lifecycle\n                            \n                        \n                        \n                            \n                                 Network\n                            \n                        \n                        \n                            \n                                Value : Network\n                            \n                        \n                        \n                            \n                                 Router\n                            \n                        \n                        \n                            \n                                Value : Router\n                            \n                        \n                        \n                            \n                                 Storage\n                            \n                        \n                        \n                            \n                                Value : Storage\n                            \n                        \n            \n        \n\n    src/app/@common/enums/message.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageType\n                    \n                \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                 Information\n                            \n                        \n                        \n                            \n                                 Success\n                            \n                        \n                        \n                            \n                                 Warning\n                            \n                        \n            \n        \n\n    src/app/@common/enums/providers.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Provider\n                    \n                \n                        \n                            \n                                 Server\n                            \n                        \n                        \n                            \n                                Value : Server\n                            \n                        \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : Other\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClient\nThis project was generated with Angular CLI version 11.0.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentityRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScheduleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScheduleRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_IdentityModule\n\n\n\ncluster_IdentityModule_declarations\n\n\n\ncluster_IdentityModule_imports\n\n\n\ncluster_IdentityModule_providers\n\n\n\ncluster_ScheduleModule\n\n\n\ncluster_ScheduleModule_declarations\n\n\n\ncluster_ScheduleModule_imports\n\n\n\ncluster_ScheduleModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAboutComponent \n\nAboutComponent \n\nAboutComponent  -->\n\nSharedModule->AboutComponent \n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nSharedModule->HomeComponent \n\n\n\n\n\nIdentityModule \n\nIdentityModule \n\nIdentityModule  -->\n\nSharedModule->IdentityModule \n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nIdentityComponent\n\nIdentityComponent\n\n\n\nIdentityModule\n\nIdentityModule\n\nIdentityModule -->\n\nIdentityComponent->IdentityModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nIdentityModule -->\n\nLoginComponent->IdentityModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nIdentityModule -->\n\nRegisterComponent->IdentityModule\n\n\n\nSharedModule -->\n\nIdentityModule->SharedModule\n\n\n\n\n\nIdentityRoutingModule\n\nIdentityRoutingModule\n\nIdentityModule -->\n\nIdentityRoutingModule->IdentityModule\n\n\n\n\n\nUserFormService\n\nUserFormService\n\nIdentityModule -->\n\nUserFormService->IdentityModule\n\n\n\n\n\nAppointmentFormComponent\n\nAppointmentFormComponent\n\n\n\nScheduleModule\n\nScheduleModule\n\nScheduleModule -->\n\nAppointmentFormComponent->ScheduleModule\n\n\n\n\n\nAppointmentListComponent\n\nAppointmentListComponent\n\nScheduleModule -->\n\nAppointmentListComponent->ScheduleModule\n\n\n\n\n\nAppointmentViewComponent\n\nAppointmentViewComponent\n\nScheduleModule -->\n\nAppointmentViewComponent->ScheduleModule\n\n\n\n\n\nScheduleComponent\n\nScheduleComponent\n\nScheduleModule -->\n\nScheduleComponent->ScheduleModule\n\n\n\n\n\nScheduleRoutingModule\n\nScheduleRoutingModule\n\nScheduleModule -->\n\nScheduleRoutingModule->ScheduleModule\n\n\n\n\n\nAppointmentFormService\n\nAppointmentFormService\n\nScheduleModule -->\n\nAppointmentFormService->ScheduleModule\n\n\n\n\n\nAboutComponent\n\nAboutComponent\n\nSharedModule -->\n\nAboutComponent->SharedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nSharedModule -->\n\nHomeComponent->SharedModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nIdentityService\n\nIdentityService\n\nSharedModule -->\n\nIdentityService->SharedModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nSharedModule -->\n\nLoggerService->SharedModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nSharedModule -->\n\nMessageService->SharedModule\n\n\n\n\n\nScheduleService\n\nScheduleService\n\nSharedModule -->\n\nScheduleService->SharedModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nSharedModule -->\n\nStorageService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Endpoints   (src/.../endpoint.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/@common/helpers/endpoint.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Endpoints\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            components   (src/.../shared.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            endpoints   (src/.../environment.prod.ts)\n                        \n                        \n                            endpoints   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            modules   (src/.../shared.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            services   (src/.../shared.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/@common/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [AboutComponent, HomeComponent          , NavigationComponent                                                                   ]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [CommonModule  , BrowserAnimationsModule, HttpClientModule   , IdentityModule, ToastrModule.forRoot(), RouterModule.forChild([])]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [MessageService, ScheduleService        , IdentityService    , IdentityGuard, LoggerService, StorageService                     ]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Endpoints\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [Provider.Server]: {\n\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  endpoints: endpoints\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Endpoints\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [Provider.Server]: {\n\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  endpoints: endpoints\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
