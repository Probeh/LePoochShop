var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.707,1,1.175]],["body/components/AboutComponent.html",[0,1.109,1,1.977,2,1.715,3,0.197,4,0.197,5,1.595,6,1.595,7,1.595,8,1.595,9,0.197,10,3.082,11,1.815,12,2.625,13,1.595,14,3.099,15,2.748,16,2.169,17,5.579,18,2.169,19,4.91,20,0.491,21,1.298,22,2.817,23,1.045,24,0.763,25,3.611,26,3.611,27,0.954,28,0.022,29,1.415,30,0.334,31,0.491,32,0.223,33,0.1,34,3.08,35,1.127,36,2.169,37,2.169,38,1.595,39,2.645,40,1.595,41,0.715,42,1.595,43,1.261,44,1.595,45,1.261,46,1.595,47,1.261,48,1.595,49,1.192,50,1.595,51,1.192,52,1.595,53,1.192,54,1.595,55,1.192,56,1.595,57,1.192,58,1.595,59,1.192,60,1.501,61,1.595,62,1.595,63,0.011,64,0.014,65,0.011]],["title/classes/Account.html",[33,0.098,66,1.572]],["body/classes/Account.html",[3,0.175,4,0.175,9,0.175,20,0.435,23,0.6,24,1.046,28,0.022,30,0.296,32,0.198,33,0.088,41,0.762,63,0.009,64,0.013,65,0.009,66,1.996,67,1.724,68,2.733,69,3.42,70,3.337,71,1.578,72,2.245,73,4.097,74,4.097,75,3.904,76,2.618,77,2.432,78,2.834,79,2.834,80,2.834,81,3.856,82,2.213,83,4.518,84,0.895,85,1.187,86,0.757,87,3.033,88,3.202,89,3.202,90,2.432,91,4.711,92,2.424,93,2.424,94,2.424,95,2.27,96,2.424,97,2.424,98,2.424,99,2.424,100,2.733,101,3.202,102,3.202,103,3.202]],["title/components/AppComponent.html",[0,0.707,43,1.243]],["body/components/AppComponent.html",[0,0.976,1,0.941,2,1.452,3,0.156,4,0.156,5,1.26,6,1.837,7,1.26,8,1.26,9,0.156,13,1.26,14,2.971,15,2.634,16,1.837,18,1.837,28,0.022,30,0.454,31,0.388,32,0.176,33,0.079,35,0.89,36,1.837,37,1.837,38,1.26,39,2.383,40,1.26,41,0.605,42,1.26,43,1.883,44,1.26,45,0.996,46,1.26,47,0.996,48,1.26,49,0.941,50,1.26,51,0.941,52,1.26,53,0.941,54,1.26,55,0.941,56,1.26,57,0.941,58,1.26,59,0.941,60,1.186,61,1.26,62,1.26,63,0.008,64,0.012,65,0.008,104,2.434,105,4.158,106,4.907,107,4.158,108,2.852,109,4.34,110,4.602,111,5.6,112,4.188,113,4.907,114,4.893,115,4.907,116,2.852,117,4.893,118,4.158,119,4.34,120,4.907,121,4.158,122,5.392,123,2.852,124,4.907,125,5.985,126,4.158,127,2.852,128,2.852,129,5.733,130,2.852,131,2.852,132,3.548,133,4.158,134,2.434,135,2.434,136,2.852,137,2.434,138,2.608,139,2.434,140,1.953,141,2.852,142,2.852,143,2.434,144,2.159,145,2.434,146,2.852]],["title/modules/AppModule.html",[147,1.243,148,2.437]],["body/modules/AppModule.html",[3,0.21,4,0.21,9,0.21,15,1.507,28,0.022,30,0.608,31,0.523,32,0.238,33,0.106,35,1.2,43,2.474,63,0.011,64,0.015,65,0.011,147,1.343,148,4.817,149,1.422,150,1.932,151,3.337,152,3.101,153,2.968,154,1.809,155,3.282,156,3.282,157,3.282,158,3.282,159,4.127,160,4.013,161,2.968,162,2.228,163,1.809,164,3.845,165,2.574,166,2.574,167,5.122,168,2.911,169,2.911,170,3.845,171,3.508,172,5.122,173,3.845,174,3.845,175,3.845,176,3.845]],["title/modules/AppRoutingModule.html",[147,1.243,159,2.232]],["body/modules/AppRoutingModule.html",[3,0.223,4,0.223,9,0.223,28,0.022,30,0.549,31,0.556,32,0.253,33,0.113,60,1.699,63,0.012,64,0.016,65,0.012,66,1.806,149,1.511,154,1.923,159,3.345,165,2.053,166,2.679,177,4.086,178,4.086,179,3.652,180,3.439,181,1.806,182,3.439,183,3.488,184,1.923,185,4.762,186,5.935,187,4.086,188,4.086,189,4.551,190,5.332,191,5.332,192,3.488,193,3.488,194,3.488,195,4.086]],["title/classes/AppSettings.html",[33,0.098,196,1.788]],["body/classes/AppSettings.html",[3,0.251,4,0.251,9,0.251,20,0.624,24,0.893,28,0.021,30,0.424,32,0.284,33,0.127,63,0.014,64,0.017,65,0.014,67,2.471,71,2.006,72,2.154,82,1.433,85,1.158,86,1.357,95,2.306,171,4.293,196,2.886,197,3.918,198,4.328,199,3.603,200,4.59,201,4.59,202,3.933,203,4.59,204,3.918,205,3.475]],["title/components/AppointmentComponent.html",[0,0.707,45,1.243]],["body/components/AppointmentComponent.html",[0,1.112,1,1.199,2,1.721,3,0.198,4,0.198,5,1.604,6,1.604,7,1.604,8,1.604,9,0.198,11,1.822,12,2.633,13,1.604,14,3.101,15,2.75,16,2.178,18,2.178,20,0.494,21,1.303,22,2.824,23,1.048,24,0.766,27,0.96,28,0.021,29,1.423,30,0.336,31,0.494,32,0.224,33,0.1,34,3.092,35,1.134,36,2.178,37,2.178,38,1.604,39,2.652,40,1.604,41,0.717,42,1.604,43,1.268,44,1.604,45,2.096,46,1.604,47,1.268,48,1.604,49,1.199,50,1.604,51,1.199,52,1.604,53,1.199,54,1.604,55,1.199,56,1.604,57,1.199,58,1.604,59,1.199,60,1.509,61,1.604,62,1.604,63,0.011,64,0.014,65,0.011,206,3.099,207,6.001,208,5.595,209,4.928,210,3.631,211,3.631]],["title/modules/AppointmentModule.html",[147,1.243,212,2.437]],["body/modules/AppointmentModule.html",[3,0.249,4,0.249,9,0.249,28,0.022,30,0.578,31,0.62,32,0.282,33,0.126,35,1.423,45,2.405,63,0.013,64,0.017,65,0.013,147,1.592,149,1.685,150,2.29,151,3.62,152,2.454,153,2.641,154,2.145,161,3.313,162,2.641,163,2.145,165,2.29,166,2.873,212,4.716,213,3.89,214,3.89,215,4.558,216,3.587,217,2.859,218,4.558]],["title/components/AppointmentsComponent.html",[0,0.707,47,1.243]],["body/components/AppointmentsComponent.html",[0,1.112,1,1.199,2,1.721,3,0.198,4,0.198,5,1.604,6,1.604,7,1.604,8,1.604,9,0.198,11,1.822,12,2.633,13,1.604,14,3.101,15,2.75,16,2.178,18,2.178,20,0.494,21,1.303,22,2.824,23,1.048,24,0.766,27,0.96,28,0.021,29,1.423,30,0.336,31,0.494,32,0.224,33,0.1,34,3.092,35,1.134,36,2.178,37,2.178,38,1.604,39,2.652,40,1.604,41,0.717,42,1.604,43,1.268,44,1.604,45,1.268,46,1.604,47,2.096,48,1.604,49,1.199,50,1.604,51,1.199,52,1.604,53,1.199,54,1.604,55,1.199,56,1.604,57,1.199,58,1.604,59,1.199,60,1.509,61,1.604,62,1.604,63,0.011,64,0.014,65,0.011,219,3.099,220,6.001,221,5.595,222,4.928,223,3.631,224,3.631]],["title/injectables/ErrorService.html",[225,0.94,226,2.062]],["body/injectables/ErrorService.html",[3,0.262,4,0.262,9,0.262,23,0.898,24,0.745,28,0.022,30,0.545,31,0.652,32,0.296,33,0.132,41,0.698,63,0.014,64,0.017,65,0.014,84,1.339,85,0.845,86,1.132,225,1.559,226,3.418,227,2.408,228,4.091,229,4.091,230,5.048,231,4.793,232,4.466,233,2.408,234,1.674]],["title/components/HomeComponent.html",[0,0.707,49,1.175]],["body/components/HomeComponent.html",[0,1.103,1,1.179,2,1.702,3,0.195,4,0.195,5,1.578,6,1.578,7,1.578,8,1.578,9,0.195,11,1.802,12,2.61,13,1.578,14,3.093,15,2.743,16,2.153,18,2.153,20,0.486,21,1.288,22,2.804,23,1.039,24,0.757,27,0.944,28,0.022,29,1.399,30,0.33,31,0.486,32,0.221,33,0.099,34,3.057,35,1.115,36,2.153,37,2.153,38,1.578,39,2.633,40,1.578,41,0.709,42,1.578,43,1.247,44,1.578,45,1.247,46,1.578,47,1.247,48,1.578,49,1.968,50,1.578,51,1.179,52,1.578,53,1.179,54,1.578,55,1.179,56,1.578,57,1.179,58,1.578,59,1.179,60,1.485,61,1.578,62,1.578,63,0.011,64,0.014,65,0.011,235,3.048,236,5.96,237,5.547,238,4.873,239,3.571,240,3.571]],["title/interfaces/IEndpoint.html",[202,2.437,241,1.479]],["body/interfaces/IEndpoint.html",[3,0.288,4,0.288,9,0.288,28,0.021,32,0.387,63,0.016,64,0.018,65,0.016,82,1.648,85,0.931,198,3.311,202,4.564,241,2.195,242,3.311,243,3.996,244,3.996]],["title/interfaces/IKeyValue.html",[241,1.479,245,2.232]],["body/interfaces/IKeyValue.html",[3,0.279,4,0.279,9,0.279,24,0.795,28,0.022,32,0.316,63,0.015,64,0.018,65,0.015,82,1.916,241,2.126,242,3.207,244,4.644,245,3.849,246,4.364,247,5.113,248,6.136,249,5.113]],["title/interfaces/ILoggerModel.html",[241,1.479,250,2.232]],["body/interfaces/ILoggerModel.html",[3,0.179,4,0.251,9,0.179,20,0.446,28,0.022,30,0.425,32,0.284,33,0.127,41,0.837,63,0.01,64,0.014,65,0.01,71,1.606,72,2.052,77,1.767,82,2.112,85,1.159,86,1.631,90,1.767,138,3.797,140,3.149,199,2.884,241,1.365,242,2.059,250,3.329,251,2.485,252,4.907,253,3.938,254,4.145,255,4.907,256,4.145,257,2.485,258,3.48,259,2.485,260,2.059,261,2.802,262,2.802,263,2.802,264,2.248,265,2.802,266,1.545,267,2.802,268,2.802,269,2.802,270,2.485,271,2.802,272,2.248,273,2.248,274,2.248]],["title/interfaces/IModelBase.html",[241,1.479,275,2.437]],["body/interfaces/IModelBase.html",[3,0.199,4,0.199,9,0.199,20,0.495,28,0.022,32,0.305,33,0.101,41,0.914,63,0.011,64,0.015,65,0.011,70,1.829,71,1.725,72,2.022,76,2.11,77,3.381,78,3.94,79,3.94,80,3.94,82,2.104,85,1.107,86,1.632,90,3.381,95,3.386,241,1.514,242,2.284,264,2.494,272,2.494,273,3.382,274,2.494,275,3.837,276,2.756,277,2.494,278,3.107]],["title/classes/Identity.html",[33,0.098,279,1.316]],["body/classes/Identity.html",[3,0.153,4,0.153,9,0.153,20,0.382,23,0.526,24,1.082,28,0.021,30,0.26,32,0.174,33,0.078,41,0.829,63,0.008,64,0.012,65,0.008,66,2.962,67,1.512,69,3.112,70,2.991,71,1.436,72,2.275,73,3.734,74,2.579,75,3.051,76,3.102,77,2.882,78,3.358,79,3.358,80,3.358,81,3.509,82,2.185,84,0.785,85,1.227,86,0.664,90,2.882,91,5.205,92,2.126,93,2.126,94,2.126,95,2.69,96,2.126,97,2.126,98,2.126,279,1.52,280,2.397,281,5.248,282,4.112,283,2.809,284,2.809,285,2.809,286,2.809,287,2.809,288,2.809,289,2.809,290,2.809,291,2.809,292,1.762,293,2.809,294,2.397,295,2.809]],["title/components/IdentityComponent.html",[0,0.707,51,1.175]],["body/components/IdentityComponent.html",[0,1.097,1,1.166,2,1.689,3,0.193,4,0.193,5,1.561,6,1.561,7,1.561,8,1.561,9,0.193,11,1.789,12,2.596,13,1.561,14,3.088,15,2.738,16,2.137,18,2.137,20,0.48,21,1.278,22,2.792,23,1.033,24,0.752,27,0.934,28,0.021,29,1.384,30,0.447,31,0.48,32,0.218,33,0.098,35,1.103,36,2.137,37,2.137,38,1.561,39,2.621,40,1.561,41,0.704,42,1.561,43,1.234,44,1.561,45,1.234,46,1.561,47,1.234,48,1.561,49,1.166,50,1.561,51,1.959,52,1.561,53,1.166,54,1.561,55,1.166,56,1.561,57,1.166,58,1.561,59,1.166,60,1.469,61,1.561,62,1.561,63,0.01,64,0.014,65,0.01,119,2.674,279,1.789,296,3.015,297,5.516,298,4.837,299,3.532,300,3.532,301,3.313,302,4.837,303,3.015,304,3.532,305,3.015,306,3.532,307,3.015]],["title/guards/IdentityGuard.html",[182,2.062,308,2.694]],["body/guards/IdentityGuard.html",[3,0.219,4,0.219,9,0.219,11,1.478,20,0.544,21,1.389,23,0.749,24,0.817,27,1.057,28,0.022,30,0.543,31,0.544,32,0.247,33,0.11,41,0.765,63,0.012,64,0.015,65,0.012,84,1.469,85,0.927,86,1.242,95,2.009,181,1.767,182,3.046,189,5.324,225,1.389,234,1.397,279,1.944,309,3.027,310,3.413,311,2.508,312,2.307,313,3.65,314,3.998,315,5.257,316,5.324,317,5.873,318,6.238,319,3.998,320,3.413,321,2.009,322,1.662,323,3.998,324,3.413,325,2.474,326,2.738,327,2.738]],["title/modules/IdentityModule.html",[147,1.243,328,2.062]],["body/modules/IdentityModule.html",[3,0.203,4,0.203,9,0.203,28,0.022,30,0.626,31,0.505,32,0.23,33,0.103,35,1.159,51,2.15,53,2.15,57,2.15,63,0.011,64,0.015,65,0.011,147,1.297,149,1.373,150,1.866,151,3.279,152,1.999,153,3.279,154,1.747,161,2.899,162,2.152,163,1.747,165,2.514,166,2.514,216,3.139,217,2.33,328,4.13,329,3.169,330,3.169,331,3.169,332,3.169,333,4.086,334,3.507,335,3.713,336,5.004,337,2.33,338,3.713,339,3.169,340,3.169,341,2.811,342,2.811,343,3.713]],["title/guards/IdentityResolver.html",[308,2.694,344,2.694]],["body/guards/IdentityResolver.html",[3,0.221,4,0.221,9,0.221,11,1.492,20,0.549,21,1.398,23,0.756,24,0.822,27,1.067,28,0.022,30,0.579,31,0.549,32,0.249,33,0.112,41,0.77,63,0.012,64,0.016,65,0.012,84,1.478,85,0.932,86,1.25,181,1.783,225,1.398,234,1.41,279,1.956,309,3.055,311,2.532,312,2.315,313,3.659,316,5.343,320,3.444,321,2.028,322,1.678,344,4.003,345,3.444,346,6.26,347,4.036,348,5.289,349,4.036,350,4.465,351,4.003,352,2.173]],["title/modules/IdentityRoutingModule.html",[147,1.243,333,2.232]],["body/modules/IdentityRoutingModule.html",[0,1.189,3,0.227,4,0.227,9,0.227,28,0.022,30,0.606,31,0.565,32,0.257,33,0.115,51,1.778,53,1.778,57,1.778,63,0.012,64,0.016,65,0.012,149,1.535,154,1.953,165,2.086,166,2.707,179,3.689,180,3.465,181,1.834,184,1.953,185,4.791,192,3.543,193,3.543,194,3.543,301,3.689,333,3.379,339,3.543,340,3.543,353,4.151,354,4.151,355,3.543,356,3.543]],["title/injectables/IdentityService.html",[225,0.94,312,1.316]],["body/injectables/IdentityService.html",[3,0.121,4,0.121,9,0.121,20,0.3,21,0.906,23,0.414,24,0.956,27,1.356,28,0.022,29,0.865,30,0.524,31,0.3,32,0.137,33,0.061,41,0.69,63,0.015,64,0.01,65,0.006,66,2.81,71,1.198,72,2.171,76,1.28,82,1.071,84,1.324,85,1.033,86,1.12,87,1.28,95,1.723,163,1.039,184,1.039,225,0.906,227,1.11,230,3.588,232,3.183,233,1.11,234,0.771,253,2.349,266,1.614,279,2.476,292,1.386,294,2.927,312,1.268,322,1.971,325,2.415,326,2.349,351,4.112,352,1.189,357,1.885,358,4.205,359,3.588,360,4.205,361,4.205,362,4.74,363,3.43,364,3.43,365,4.74,366,3.43,367,2.209,368,2.552,369,3.43,370,2.209,371,3.43,372,2.209,373,3.43,374,2.209,375,2.209,376,3.43,377,2.209,378,2.638,379,2.113,380,2.209,381,3.43,382,2.209,383,2.209,384,3.885,385,1.885,386,1.885,387,1.672,388,1.885,389,2.209,390,1.28,391,3.43,392,2.209,393,3.43,394,2.209,395,3.43,396,3.43,397,3.43,398,2.209,399,3.43,400,2.927,401,3.43,402,2.209,403,2.209,404,2.209,405,2.209,406,2.209,407,2.927,408,3.43,409,2.927,410,2.209,411,2.209,412,2.209,413,1.885,414,2.209,415,2.209,416,2.209,417,1.885,418,2.209,419,3.183,420,2.209,421,3.43,422,2.209,423,2.209,424,2.209,425,2.209,426,2.209]],["title/classes/LoggerModel.html",[33,0.098,260,2.232]],["body/classes/LoggerModel.html",[3,0.164,4,0.302,9,0.164,20,0.409,23,0.564,24,1.017,28,0.022,30,0.4,32,0.267,33,0.153,41,0.629,63,0.009,64,0.013,65,0.009,67,1.62,71,1.51,72,2.249,77,2.724,82,2.14,84,0.841,85,1.171,86,0.711,87,1.744,90,2.327,138,3.469,140,2.961,199,1.888,241,1.251,250,3.469,251,2.278,252,2.569,253,2.061,254,3.787,255,2.569,256,3.787,257,2.278,258,3.273,259,2.278,260,2.712,261,4.318,262,4.318,263,4.318,264,2.961,265,2.569,266,1.416,267,2.569,268,2.569,269,2.569,270,2.278,271,2.569,272,2.061,273,2.061,274,2.061,277,2.061,427,4.323,428,3.01,429,3.01,430,3.01,431,3.01,432,3.01,433,3.01,434,3.01]],["title/injectables/LoggerService.html",[225,0.94,435,2.062]],["body/injectables/LoggerService.html",[3,0.157,4,0.157,9,0.157,20,0.39,21,1.104,23,0.538,24,0.962,27,1.302,28,0.022,29,1.93,30,0.531,31,0.39,32,0.177,33,0.079,41,0.717,63,0.008,64,0.012,65,0.008,71,1.459,72,2.019,82,1.538,84,1.376,85,1.058,86,1.164,87,1.663,196,2.718,225,1.104,227,1.442,234,1.003,245,3.606,250,3.393,254,2.861,260,2.621,266,1.966,277,1.966,322,2.689,352,1.545,378,3.09,379,2.888,384,3.162,390,1.663,435,2.421,436,2.45,437,5.999,438,4.925,439,4.178,440,4.178,441,5.409,442,1.966,443,4.178,444,2.621,445,4.178,446,2.871,447,4.178,448,2.871,449,2.871,450,2.871,451,2.871,452,1.801,453,2.45,454,2.871,455,2.871,456,4.178,457,2.45,458,4.178,459,2.871,460,2.871,461,2.871,462,2.871,463,2.871,464,2.871,465,2.871,466,2.871,467,2.871,468,2.871,469,2.871,470,2.871,471,2.871,472,2.871]],["title/components/LoginComponent.html",[0,0.707,53,1.175]],["body/components/LoginComponent.html",[0,0.847,1,0.744,2,1.217,3,0.123,4,0.123,5,0.996,6,0.996,7,0.996,8,0.996,9,0.123,11,1.289,12,2.004,13,0.996,14,2.824,15,2.504,16,1.54,18,1.54,20,0.307,21,0.921,22,2.255,23,0.422,24,0.805,27,1.126,28,0.022,29,1.365,30,0.528,31,0.307,32,0.139,33,0.062,35,0.704,36,1.54,37,1.54,38,0.996,39,2.117,40,0.996,41,0.697,42,0.996,43,0.787,44,0.996,45,0.787,46,0.996,47,0.787,48,0.996,49,0.744,50,0.996,51,0.744,52,0.996,53,1.582,54,0.996,55,0.744,56,0.996,57,0.744,58,0.996,59,0.744,60,0.937,61,0.996,62,0.996,63,0.007,64,0.01,65,0.007,66,0.996,71,1.217,72,1.89,74,3.006,75,3.006,82,1.33,84,0.974,85,0.751,86,0.823,181,0.996,184,1.061,233,1.133,234,0.787,279,1.289,292,1.414,301,4.377,311,1.414,312,1.772,313,3.074,321,1.133,322,1.449,325,1.061,334,2.58,337,1.414,341,1.707,342,1.707,379,1.133,413,2.974,473,1.924,474,4.26,475,3.485,476,4.146,477,2.974,478,3.635,479,3.485,480,2.974,481,2.255,482,1.924,483,2.255,484,2.255,485,2.974,486,1.924,487,2.255,488,2.255,489,2.255,490,2.255,491,2.255,492,2.255,493,1.924,494,1.924,495,1.924,496,1.924,497,2.974,498,1.924,499,1.924,500,2.974,501,1.924,502,1.924,503,1.924,504,2.974,505,1.924,506,1.924,507,1.924,508,1.924,509,1.924,510,2.255,511,3.485,512,1.924,513,3.485,514,2.974,515,2.974,516,4.09,517,4.09,518,2.974,519,2.974,520,3.485]],["title/injectables/MessageService.html",[225,0.94,368,1.916]],["body/injectables/MessageService.html",[3,0.18,4,0.18,9,0.18,20,0.449,21,1.219,23,0.618,24,0.717,27,0.872,28,0.022,29,1.293,30,0.492,31,0.449,32,0.204,33,0.091,41,0.672,63,0.01,64,0.014,65,0.01,72,1.661,82,1.962,84,1.289,85,1.108,86,1.09,163,1.553,225,1.219,227,1.658,234,1.152,253,3.644,326,3.16,327,3.946,368,2.484,378,2.07,379,1.658,387,4.362,388,2.816,400,2.816,407,2.816,417,4.541,521,2.816,522,4.614,523,3.3,524,5.762,525,3.3,526,4.614,527,4.614,528,3.3,529,6.064,530,2.498,531,2.498,532,3.3,533,3.3,534,3.3,535,3.3,536,3.3,537,3.3,538,3.3,539,3.3,540,3.3,541,2.816,542,3.3,543,3.3,544,3.3,545,3.3,546,3.3,547,3.3,548,3.3,549,3.3,550,3.3,551,3.3,552,2.816,553,4.918,554,3.3,555,4.918,556,3.3,557,3.3,558,3.3,559,3.3]],["title/classes/ModelBase.html",[33,0.098,70,1.788]],["body/classes/ModelBase.html",[3,0.187,4,0.187,9,0.187,20,0.466,23,0.643,24,1.013,28,0.022,32,0.293,33,0.095,41,0.895,63,0.01,64,0.014,65,0.01,67,1.847,70,2.382,71,1.656,72,2.241,76,3.147,77,3.154,78,3.676,79,3.676,80,3.676,82,1.986,84,0.958,85,1.149,86,0.81,87,1.987,90,3.311,95,3.195,241,1.426,264,3.246,272,2.349,273,3.246,274,2.349,275,4.013,276,2.596,277,3.246,278,2.927,560,4.74,561,3.43,562,3.43,563,3.43,564,3.43,565,3.43]],["title/components/NavigationComponent.html",[0,0.707,55,1.175]],["body/components/NavigationComponent.html",[0,0.878,1,0.789,2,1.273,3,0.131,4,0.131,5,1.057,6,1.057,7,1.057,8,1.057,9,0.131,11,1.348,12,2.079,13,1.057,14,2.862,15,2.538,16,1.611,18,1.611,20,0.325,21,0.964,22,2.326,23,0.448,24,0.768,27,0.964,28,0.022,29,1.429,30,0.492,31,0.325,32,0.148,33,0.066,35,0.747,36,1.611,37,1.611,38,1.057,39,2.184,40,1.057,41,0.643,42,1.057,43,0.835,44,1.057,45,0.835,46,1.057,47,0.835,48,1.057,49,0.789,50,1.057,51,0.789,52,1.057,53,0.789,54,1.057,55,1.632,56,1.057,57,0.789,58,1.057,59,0.789,60,0.994,61,1.057,62,1.057,63,0.013,64,0.011,65,0.007,66,2.576,71,1.273,72,1.751,84,0.668,85,0.643,86,0.565,109,1.81,110,4.541,111,5.13,112,3.112,114,2.041,117,2.041,119,1.81,132,3.112,134,2.041,135,2.041,137,3.771,138,2.772,139,3.771,143,2.041,144,1.81,145,3.112,181,1.057,234,0.835,279,1.348,292,1.5,301,2.497,303,2.041,305,3.112,307,2.041,311,1.5,312,1.827,313,3.139,321,1.201,322,0.994,324,2.041,390,1.385,566,2.041,567,4.418,568,4.418,569,3.646,570,5.607,571,3.646,572,2.391,573,2.391,574,3.646,575,2.391,576,2.391,577,2.391,578,3.646,579,3.646,580,3.646,581,3.646,582,3.646,583,3.646,584,3.646,585,2.391,586,2.391,587,3.646,588,5.831,589,2.391,590,3.112,591,3.646,592,3.646,593,2.391,594,2.391,595,2.391,596,3.646,597,3.646,598,2.041,599,2.391,600,2.391,601,2.391,602,2.391,603,2.391,604,2.391,605,2.391]],["title/injectables/NetworkService.html",[225,0.94,606,2.694]],["body/injectables/NetworkService.html",[3,0.262,4,0.262,9,0.262,23,0.898,24,0.745,28,0.022,30,0.545,31,0.652,32,0.296,33,0.132,41,0.698,63,0.014,64,0.017,65,0.014,84,1.339,85,0.845,86,1.132,225,1.559,227,2.408,229,4.091,230,5.048,232,4.466,233,2.408,234,1.674,606,4.466,607,4.091,608,4.793]],["title/classes/Profile.html",[33,0.098,609,2.694]],["body/classes/Profile.html",[3,0.187,4,0.187,9,0.187,20,0.465,23,1.016,24,1.071,28,0.022,30,0.316,32,0.211,33,0.095,41,0.689,63,0.01,64,0.014,65,0.01,67,1.842,69,3.582,70,3.386,71,1.653,72,2.277,73,3.403,76,2.741,77,2.547,78,2.968,79,2.968,80,2.968,82,2.13,85,1.203,90,2.547,91,4.81,92,2.59,93,2.59,94,2.59,95,2.377,96,2.59,97,2.59,98,2.59,99,2.59,100,2.92,609,3.582,610,2.92,611,5.424,612,5.424,613,5.424,614,4.732,615,3.421,616,3.421,617,3.421]],["title/components/RegisterComponent.html",[0,0.707,57,1.175]],["body/components/RegisterComponent.html",[0,0.801,1,0.682,2,1.137,3,0.113,4,0.113,5,0.912,6,0.912,7,0.912,8,0.912,9,0.113,11,1.203,12,1.895,13,0.912,14,2.764,15,2.451,16,1.438,18,1.438,20,0.281,21,0.86,22,2.15,23,0.387,24,0.773,27,1.064,28,0.022,29,1.275,30,0.511,31,0.281,32,0.128,33,0.057,35,0.645,36,1.438,37,1.438,38,0.912,39,2.019,40,0.912,41,0.665,42,0.912,43,0.721,44,0.912,45,0.721,46,0.912,47,0.721,48,0.912,49,0.682,50,0.912,51,0.682,52,0.912,53,0.682,54,0.912,55,0.682,56,0.912,57,1.509,58,0.912,59,0.682,60,0.859,61,0.912,62,0.912,63,0.006,64,0.01,65,0.006,66,1.779,71,1.137,72,1.84,73,3.313,74,3.467,75,3.467,82,1.257,84,0.909,85,0.71,86,0.769,181,0.912,233,1.038,234,0.721,266,1.531,279,1.203,292,1.295,311,1.295,312,1.69,313,2.976,321,1.038,322,1.353,325,0.972,334,2.46,337,1.295,341,1.563,342,1.563,355,5.149,476,3.998,477,2.777,478,3.437,480,2.777,482,1.763,485,2.777,486,4.717,493,1.763,494,1.763,495,1.763,496,1.763,497,2.777,498,1.763,499,1.763,500,2.777,501,1.763,502,1.763,503,1.763,504,2.777,505,1.763,506,1.763,507,1.763,508,1.763,509,1.763,512,1.763,515,2.777,516,3.9,517,3.9,518,2.777,519,2.777,552,2.777,553,4.507,555,4.507,618,1.763,619,4.027,620,3.254,621,3.254,622,2.065,623,2.065,624,2.065,625,2.065,626,2.065,627,2.065,628,2.065,629,2.065,630,2.065,631,3.254,632,5.281,633,5.281,634,4.027,635,2.065,636,4.027,637,3.254]],["title/interceptors/RequestInterceptor.html",[638,2.694,639,2.437]],["body/interceptors/RequestInterceptor.html",[3,0.204,4,0.204,9,0.204,11,1.381,20,0.508,21,1.328,23,0.7,24,0.781,27,0.987,28,0.022,30,0.586,31,0.508,32,0.231,33,0.103,41,0.731,63,0.011,64,0.015,65,0.011,84,1.404,85,1.001,86,1.187,109,2.827,184,1.757,196,3.05,225,1.328,233,1.877,234,1.304,279,2.099,312,2.245,321,1.877,322,1.553,325,1.757,350,4.297,352,2.011,390,3.289,442,2.558,444,3.151,452,2.343,639,3.44,640,3.188,641,3.188,642,4.287,643,3.735,644,4.287,645,5.181,646,5.181,647,3.735,648,3.188,649,3.188,650,4.287,651,3.735,652,5.023,653,5.023,654,3.735,655,3.735,656,3.735,657,3.735,658,3.735,659,3.735]],["title/components/ScheduleComponent.html",[0,0.707,59,1.175]],["body/components/ScheduleComponent.html",[0,1.112,1,1.199,2,1.721,3,0.198,4,0.198,5,1.604,6,1.604,7,1.604,8,1.604,9,0.198,11,1.822,12,2.633,13,1.604,14,3.101,15,2.75,16,2.178,18,2.178,20,0.494,21,1.303,22,2.824,23,1.048,24,0.766,27,0.96,28,0.021,29,1.423,30,0.336,31,0.494,32,0.224,33,0.1,34,3.092,35,1.134,36,2.178,37,2.178,38,1.604,39,2.652,40,1.604,41,0.717,42,1.604,43,1.268,44,1.604,45,1.268,46,1.604,47,1.268,48,1.604,49,1.199,50,1.604,51,1.199,52,1.604,53,1.199,54,1.604,55,1.199,56,1.604,57,1.199,58,1.604,59,1.981,60,2.608,61,1.604,62,1.604,63,0.011,64,0.014,65,0.011,660,3.099,661,5.595,662,4.928,663,3.631,664,3.631]],["title/modules/ScheduleModule.html",[147,1.243,665,2.437]],["body/modules/ScheduleModule.html",[3,0.223,4,0.223,9,0.223,28,0.022,30,0.603,31,0.556,32,0.253,33,0.113,35,1.276,47,2.337,59,2.209,63,0.012,64,0.016,65,0.012,147,1.427,149,1.511,150,2.053,151,3.439,152,2.2,153,2.368,154,1.923,161,3.089,162,2.368,163,1.923,165,2.679,166,2.679,216,3.345,217,2.563,665,4.829,666,3.488,667,3.488,668,3.488,669,4.198,670,4.086,671,4.086,672,4.086,673,3.488]],["title/modules/ScheduleRoutingModule.html",[147,1.243,669,2.232]],["body/modules/ScheduleRoutingModule.html",[0,0.929,3,0.255,4,0.255,9,0.255,28,0.022,30,0.584,31,0.635,32,0.289,33,0.129,59,1.917,63,0.014,64,0.017,65,0.014,149,1.728,154,2.199,165,2.348,166,2.918,179,3.977,180,3.661,181,2.065,184,2.199,185,3.537,356,3.988,669,3.643,673,3.988,674,4.673]],["title/modules/SharedModule.html",[147,1.243,160,2.232]],["body/modules/SharedModule.html",[1,2.066,2,1.465,3,0.12,4,0.12,9,0.12,21,0.582,24,0.342,27,0.582,28,0.022,30,0.631,31,0.299,32,0.136,33,0.061,35,0.687,41,0.32,49,2.066,55,2.066,63,0.006,64,0.01,65,0.006,84,0.615,85,0.388,86,0.52,138,1.381,147,0.769,149,1.749,150,1.106,151,2.431,152,1.185,153,2.741,154,1.974,160,4.406,161,1.982,162,1.275,163,1.036,165,1.719,166,2.108,168,1.666,179,1.508,181,0.973,182,1.982,183,1.879,184,1.974,196,2.575,216,2.146,217,1.381,226,3.143,233,1.106,234,0.769,254,1.508,256,1.508,257,1.666,312,2.006,313,2.259,321,1.106,322,0.915,325,1.036,327,2.343,328,3.625,368,2.92,379,2.108,386,1.879,390,1.275,435,3.28,444,2.146,452,1.381,530,1.666,531,1.666,639,2.343,675,1.879,676,1.879,677,2.201,678,1.879,679,1.879,680,3.143,681,1.666,682,3.421,683,2.201,684,3.421,685,2.201,686,4.195,687,2.201,688,4.195,689,2.92,690,2.92,691,2.201,692,2.201,693,2.201,694,2.201,695,2.201,696,2.201,697,2.201,698,2.201,699,2.201,700,2.343,701,2.201,702,1.879,703,1.879,704,3.176,705,2.201,706,2.201,707,2.201,708,2.201,709,4.195,710,2.201,711,3.421,712,3.421]],["title/injectables/StorageService.html",[225,0.94,680,2.062]],["body/injectables/StorageService.html",[3,0.127,4,0.127,9,0.127,20,0.59,21,0.941,23,0.434,24,0.897,27,1.285,28,0.022,30,0.485,31,0.315,32,0.143,33,0.064,41,0.764,63,0.007,64,0.01,65,0.007,70,1.165,71,1.244,72,1.906,82,2.008,84,1.706,85,1.118,86,1.24,87,1.344,99,1.755,140,1.588,184,2.289,196,2.444,225,0.941,227,1.165,234,0.81,244,3.682,245,3.619,266,1.676,322,2.538,325,2.714,351,4.193,352,1.248,359,4.728,378,2.234,379,2.444,384,3.972,419,2.696,442,1.588,444,2.234,452,1.455,453,1.979,457,1.979,680,2.063,713,1.979,714,5.539,715,3.561,716,3.561,717,3.561,718,3.561,719,3.561,720,2.319,721,2.319,722,6.585,723,2.319,724,2.319,725,2.319,726,5.953,727,2.319,728,2.319,729,2.319,730,2.319,731,2.319,732,4.335,733,2.319,734,2.319,735,2.319,736,2.319,737,2.319,738,2.319,739,2.319,740,3.561,741,3.561,742,2.319,743,2.319,744,2.319,745,2.319,746,2.319,747,2.319,748,3.561,749,2.319,750,2.319,751,2.319,752,2.319,753,2.319,754,2.319,755,3.561,756,2.319,757,4.335,758,2.319,759,2.319,760,2.319,761,2.319,762,2.319]],["title/interceptors/TokenInterceptor.html",[638,2.694,700,2.437]],["body/interceptors/TokenInterceptor.html",[3,0.19,4,0.19,9,0.19,11,1.289,20,0.474,21,1.267,23,0.653,24,0.745,27,0.921,28,0.022,30,0.605,31,0.474,32,0.215,33,0.096,41,0.698,63,0.01,64,0.014,65,0.01,84,1.339,85,0.845,86,1.132,184,2.577,196,2.964,225,1.267,233,1.751,234,1.217,279,2.181,281,4.09,312,2.181,321,1.751,322,1.449,325,1.64,350,4.146,352,1.876,385,2.974,390,3.174,442,2.387,444,3.006,452,2.186,514,2.974,640,2.974,642,4.09,644,4.09,645,5.035,646,5.035,648,2.974,649,2.974,650,4.09,700,3.282,763,2.974,764,3.485,765,3.485,766,3.485,767,3.485,768,4.792,769,2.974,770,3.485,771,3.485,772,3.485,773,3.485,774,3.485,775,3.485,776,3.485,777,3.485,778,3.485,779,3.485,780,3.485]],["title/injectables/UserFormService.html",[225,0.94,334,1.916]],["body/injectables/UserFormService.html",[3,0.217,4,0.217,9,0.217,20,0.539,21,1.381,23,1.095,24,0.909,27,1.381,28,0.022,30,0.483,31,0.539,32,0.245,33,0.109,63,0.012,64,0.015,65,0.012,72,2.071,73,2.485,74,3.278,75,3.278,225,1.381,227,1.991,266,3.184,325,2.459,334,2.813,337,2.485,476,4.425,781,5.305,782,3.381,783,6.216,784,6.216,785,3.962,786,3.962,787,3.962,788,6.635,789,3.962,790,6.461,791,3.962]],["title/coverage.html",[792,4.149]],["body/coverage.html",[0,1.292,1,0.902,2,0.954,9,0.149,10,2.332,28,0.022,33,0.163,43,0.954,45,0.954,47,0.954,49,0.902,51,0.902,53,0.902,55,0.902,57,0.902,59,0.902,63,0.008,64,0.012,65,0.008,66,1.207,68,2.332,70,1.373,85,0.482,104,2.332,149,1.01,171,2.759,182,1.583,196,1.373,197,2.332,198,2.528,202,1.871,206,2.332,219,2.332,225,1.611,226,1.583,228,2.332,235,2.332,241,2.196,243,2.068,245,1.714,246,2.332,250,1.714,251,3.05,260,1.714,266,1.286,270,5.555,275,1.871,276,3.05,279,1.01,280,2.332,296,2.332,308,3.05,310,2.332,312,1.01,334,1.471,344,2.068,345,2.332,357,2.332,368,1.471,435,1.583,436,2.332,473,2.332,521,2.332,566,2.332,606,2.068,607,2.332,609,2.068,610,2.332,618,2.332,638,3.05,639,1.871,641,2.332,660,2.332,680,1.583,681,3.623,700,1.871,704,2.068,713,2.332,763,2.332,781,2.332,782,2.332,792,2.332,793,2.732,794,2.732,795,2.732,796,6.666,797,6.666,798,2.732,799,2.732,800,4.029,801,4.786,802,4.786,803,2.732,804,2.732,805,2.732,806,4.029,807,2.732,808,6.387,809,3.439,810,3.439,811,3.439,812,2.068,813,2.332,814,2.732,815,2.732]],["title/dependencies.html",[150,2.151,816,2.969]],["body/dependencies.html",[28,0.022,31,0.616,63,0.013,64,0.017,65,0.013,150,2.274,152,2.437,168,4.309,169,4.309,181,2,217,2.84,258,3.426,259,3.426,337,2.84,352,2.437,530,3.426,531,3.426,590,3.863,817,4.526,818,6.023,819,4.526,820,4.526,821,4.526,822,4.526,823,4.526,824,4.526,825,4.526,826,4.526,827,4.526,828,4.526,829,4.526,830,4.526,831,4.526,832,4.526,833,4.526,834,4.526,835,4.526,836,4.526]],["title/miscellaneous/enumerations.html",[837,1.72,838,3.654]],["body/miscellaneous/enumerations.html",[3,0.298,20,0.576,28,0.021,63,0.012,64,0.016,65,0.012,66,2.41,204,4.655,256,3.736,279,2.017,313,2.937,379,3.643,387,4.129,409,5.631,419,4.129,812,4.129,837,2.452,838,3.612,839,4.232,840,5.455,841,4.232,842,4.232,843,4.232,844,4.232,845,4.232,846,4.232,847,5.455,848,5.455,849,4.232,850,5.455,851,5.455,852,5.455,853,4.232,854,4.232,855,4.232,856,4.232,857,4.232,858,4.655]],["title/index.html",[20,0.404,769,2.534,859,2.969]],["body/index.html",[0,1.175,4,0.221,15,1.586,28,0.016,41,0.589,63,0.012,64,0.016,65,0.012,163,1.905,205,3.064,266,1.905,598,5.35,818,3.455,858,4.523,860,4.048,861,5.299,862,4.048,863,5.908,864,5.908,865,4.048,866,4.048,867,6.506,868,6.801,869,4.048,870,4.048,871,4.048,872,4.048,873,4.048,874,4.048,875,4.048,876,4.048,877,4.048,878,4.048,879,5.908,880,5.908,881,4.048,882,6.506,883,4.048,884,4.048,885,4.048,886,4.048,887,4.048,888,4.048,889,5.299,890,5.299,891,6.268,892,4.048,893,5.299,894,5.299,895,4.048,896,4.048,897,4.048,898,4.048,899,5.908,900,4.048,901,4.048,902,4.048,903,3.064,904,4.048,905,4.048,906,4.048]],["title/modules.html",[149,1.798]],["body/modules.html",[28,0.018,63,0.014,64,0.018,65,0.014,148,3.369,149,1.819,159,3.086,160,3.086,169,5.222,212,3.369,328,2.85,333,3.086,665,3.369,669,3.086,907,6.899,908,6.899,909,7.169,910,6.465,911,6.465]],["title/overview.html",[903,3.68]],["body/overview.html",[1,2.075,2,1.054,28,0.021,35,0.942,43,2.195,45,1.769,47,1.769,49,2.075,51,1.672,53,1.672,55,2.075,57,1.672,59,1.672,63,0.009,64,0.013,65,0.009,67,1.624,144,3.278,147,1.054,148,4.485,149,1.116,150,1.516,151,1.748,152,1.624,153,1.748,154,1.42,155,2.575,156,2.575,157,2.575,158,2.575,159,3.178,160,4.532,161,2.509,162,1.748,163,1.42,180,1.748,212,3.791,213,2.575,214,2.575,226,2.935,227,1.516,242,1.893,309,2.284,312,1.873,328,4.074,329,2.575,330,2.575,331,2.575,332,2.575,333,3.178,334,2.727,368,2.727,435,2.935,541,2.575,665,4.404,666,2.575,667,2.575,668,2.575,669,3.178,675,2.575,676,2.575,678,2.575,679,2.575,680,2.935,903,2.284,912,3.017,913,3.017,914,3.017,915,3.017]],["title/routes.html",[180,2.817]],["body/routes.html",[28,0.019,63,0.017,64,0.019,65,0.017,180,3.313]],["title/miscellaneous/typealiases.html",[837,1.72,916,4.281]],["body/miscellaneous/typealiases.html",[20,0.748,28,0.019,63,0.016,64,0.019,65,0.016,85,1.13,198,4.019,199,3.451,243,4.164,837,3.188,917,5.501,918,5.501]],["title/miscellaneous/variables.html",[837,1.72,919,3.654]],["body/miscellaneous/variables.html",[1,1.216,2,1.738,20,0.501,28,0.022,49,1.216,55,1.216,63,0.011,64,0.015,65,0.011,85,1.207,149,1.84,171,4.134,182,2.133,198,4.341,199,2.31,205,3.766,216,2.31,226,2.133,312,1.361,326,2.522,327,3.408,328,2.133,368,1.982,378,4.238,379,3.394,435,2.133,680,2.133,681,2.787,689,3.143,690,3.143,702,3.143,703,3.143,704,3.766,809,3.143,810,3.143,811,3.143,812,3.766,813,4.246,837,2.133,919,3.143,920,5.635,921,4.976,922,4.976,923,4.976,924,3.682,925,3.682,926,4.976,927,4.976]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":270,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"coverage.html":{}}}],["0.10.2",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":307,"title":{},"body":{"components/IdentityComponent.html":{},"components/NavigationComponent.html":{}}}],["1",{"_index":748,"title":{},"body":{"injectables/StorageService.html":{}}}],["1.1.0",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{},"overview.html":{}}}],["1000",{"_index":547,"title":{},"body":{"injectables/MessageService.html":{}}}],["100vh",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["100vw",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["11.0.0",{"_index":818,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["13.2.0",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["1500",{"_index":545,"title":{},"body":{"injectables/MessageService.html":{}}}],["18px",{"_index":600,"title":{},"body":{"components/NavigationComponent.html":{}}}],["2",{"_index":541,"title":{},"body":{"injectables/MessageService.html":{},"overview.html":{}}}],["2.0.0",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":592,"title":{},"body":{"components/NavigationComponent.html":{}}}],["250px",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["3.5.1",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":586,"title":{},"body":{"components/NavigationComponent.html":{}}}],["4",{"_index":915,"title":{},"body":{"overview.html":{}}}],["4.5.0",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":508,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["401",{"_index":498,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["5",{"_index":306,"title":{},"body":{"components/IdentityComponent.html":{}}}],["50px",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["5px",{"_index":605,"title":{},"body":{"components/NavigationComponent.html":{}}}],["6",{"_index":914,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":913,"title":{},"body":{"overview.html":{}}}],["8",{"_index":912,"title":{},"body":{"overview.html":{}}}],["about'},{'name",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":66,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"modules/AppRoutingModule.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["account(this.formgroup.value.username",{"_index":627,"title":{},"body":{"components/RegisterComponent.html":{}}}],["account(value.username",{"_index":490,"title":{},"body":{"components/LoginComponent.html":{}}}],["account:10",{"_index":288,"title":{},"body":{"classes/Identity.html":{}}}],["account:11",{"_index":286,"title":{},"body":{"classes/Identity.html":{}}}],["account:12",{"_index":287,"title":{},"body":{"classes/Identity.html":{}}}],["account:13",{"_index":289,"title":{},"body":{"classes/Identity.html":{}}}],["account:14",{"_index":290,"title":{},"body":{"classes/Identity.html":{}}}],["account:15",{"_index":291,"title":{},"body":{"classes/Identity.html":{}}}],["account:4",{"_index":285,"title":{},"body":{"classes/Identity.html":{}}}],["account:5",{"_index":284,"title":{},"body":{"classes/Identity.html":{}}}],["account:6",{"_index":283,"title":{},"body":{"classes/Identity.html":{}}}],["action",{"_index":596,"title":{},"body":{"components/NavigationComponent.html":{}}}],["action:hover",{"_index":601,"title":{},"body":{"components/NavigationComponent.html":{}}}],["actions",{"_index":593,"title":{},"body":{"components/NavigationComponent.html":{}}}],["activatedroutesnapshot",{"_index":316,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{}}}],["actual_component",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["again",{"_index":406,"title":{},"body":{"injectables/IdentityService.html":{}}}],["aliases",{"_index":917,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["amount",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["angular",{"_index":863,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":217,"title":{},"body":{"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":233,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/NetworkService.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["angular/compiler",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":337,"title":{},"body":{"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFormService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["api",{"_index":580,"title":{},"body":{"components/NavigationComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"index.html":{}}}],["app.component",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":43,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":657,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["appmodule",{"_index":148,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointment",{"_index":207,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointment'},{'name",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["appointment.component",{"_index":218,"title":{},"body":{"modules/AppointmentModule.html":{}}}],["appointment.component.html",{"_index":209,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointment.component.scss",{"_index":208,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointmentcomponent",{"_index":45,"title":{"components/AppointmentComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appointmentmodule",{"_index":212,"title":{"modules/AppointmentModule.html":{}},"body":{"modules/AppointmentModule.html":{},"modules.html":{},"overview.html":{}}}],["appointments",{"_index":220,"title":{},"body":{"components/AppointmentsComponent.html":{}}}],["appointments'},{'name",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["appointments.component.html",{"_index":222,"title":{},"body":{"components/AppointmentsComponent.html":{}}}],["appointments.component.scss",{"_index":221,"title":{},"body":{"components/AppointmentsComponent.html":{}}}],["appointmentscomponent",{"_index":47,"title":{"components/AppointmentsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"coverage.html":{},"overview.html":{}}}],["approutingmodule",{"_index":159,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":196,"title":{"classes/AppSettings.html":{}},"body":{"classes/AppSettings.html":{},"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["args",{"_index":277,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{}}}],["args[key",{"_index":274,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["array",{"_index":457,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/StorageService.html":{}}}],["artifacts",{"_index":883,"title":{},"body":{"index.html":{}}}],["async",{"_index":361,"title":{},"body":{"injectables/IdentityService.html":{}}}],["authentication",{"_index":850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authorization",{"_index":658,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authreq",{"_index":654,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authstate",{"_index":358,"title":{},"body":{"injectables/IdentityService.html":{}}}],["auto",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/IdentityComponent.html":{},"components/NavigationComponent.html":{}}}],["automatically",{"_index":873,"title":{},"body":{"index.html":{}}}],["available",{"_index":911,"title":{},"body":{"modules.html":{}}}],["await",{"_index":740,"title":{},"body":{"injectables/StorageService.html":{}}}],["awesome",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["baseurl",{"_index":360,"title":{},"body":{"injectables/IdentityService.html":{}}}],["bearer",{"_index":652,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["between",{"_index":594,"title":{},"body":{"components/NavigationComponent.html":{}}}],["bg",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":95,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["bootstrap",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bottom",{"_index":550,"title":{},"body":{"injectables/MessageService.html":{}}}],["brand",{"_index":589,"title":{},"body":{"components/NavigationComponent.html":{}}}],["break",{"_index":555,"title":{},"body":{"injectables/MessageService.html":{},"components/RegisterComponent.html":{}}}],["browse",{"_index":909,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":691,"title":{},"body":{"modules/SharedModule.html":{}}}],["browseranimationsmodule",{"_index":690,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":603,"title":{},"body":{"components/NavigationComponent.html":{}}}],["build",{"_index":882,"title":{},"body":{"index.html":{}}}],["caller",{"_index":263,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["canactivate",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/IdentityGuard.html":{}}}],["canactivate(route",{"_index":315,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["case",{"_index":553,"title":{},"body":{"injectables/MessageService.html":{},"components/RegisterComponent.html":{}}}],["catch((error",{"_index":401,"title":{},"body":{"injectables/IdentityService.html":{}}}],["catch((response",{"_index":496,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["center",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["change",{"_index":875,"title":{},"body":{"index.html":{}}}],["check",{"_index":902,"title":{},"body":{"index.html":{}}}],["checkidentity",{"_index":362,"title":{},"body":{"injectables/IdentityService.html":{}}}],["class",{"_index":33,"title":{"classes/Account.html":{},"classes/AppSettings.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{}}}],["classes",{"_index":67,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"overview.html":{}}}],["clear",{"_index":637,"title":{},"body":{"components/RegisterComponent.html":{}}}],["cli",{"_index":864,"title":{},"body":{"index.html":{}}}],["client",{"_index":860,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appointmentmodule",{"_index":213,"title":{},"body":{"modules/AppointmentModule.html":{},"overview.html":{}}}],["cluster_appointmentmodule_declarations",{"_index":214,"title":{},"body":{"modules/AppointmentModule.html":{},"overview.html":{}}}],["cluster_identitymodule",{"_index":329,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_identitymodule_declarations",{"_index":331,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_identitymodule_imports",{"_index":330,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_identitymodule_providers",{"_index":332,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_schedulemodule",{"_index":666,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_schedulemodule_declarations",{"_index":668,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_schedulemodule_imports",{"_index":667,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":675,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":678,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":676,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":677,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_sharedmodule_providers",{"_index":679,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":877,"title":{},"body":{"index.html":{}}}],["collection",{"_index":714,"title":{},"body":{"injectables/StorageService.html":{}}}],["color",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["column",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":904,"title":{},"body":{"index.html":{}}}],["common/navigation/navigation.component",{"_index":692,"title":{},"body":{"modules/SharedModule.html":{}}}],["common/shared.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":216,"title":{},"body":{"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":444,"title":{},"body":{"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["console.clear",{"_index":468,"title":{},"body":{"injectables/LoggerService.html":{}}}],["console.groupcollapsed(`%c",{"_index":470,"title":{},"body":{"injectables/LoggerService.html":{}}}],["console.log('authorization",{"_index":651,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["const",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["constructor(args",{"_index":264,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["constructor(config",{"_index":442,"title":{},"body":{"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(http",{"_index":229,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/NetworkService.html":{}}}],["constructor(identity",{"_index":311,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(message",{"_index":367,"title":{},"body":{"injectables/IdentityService.html":{}}}],["constructor(private",{"_index":234,"title":{},"body":{"injectables/ErrorService.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(service",{"_index":523,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(username",{"_index":81,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{}}}],["container",{"_index":304,"title":{},"body":{"components/IdentityComponent.html":{}}}],["content",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{},"interceptors/RequestInterceptor.html":{}}}],["context",{"_index":812,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":302,"title":{},"body":{"components/IdentityComponent.html":{}}}],["control",{"_index":482,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["controls[field.tolowercase",{"_index":632,"title":{},"body":{"components/RegisterComponent.html":{}}}],["coverage",{"_index":792,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":76,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["createdat",{"_index":262,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["credentials",{"_index":506,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["current",{"_index":750,"title":{},"body":{"injectables/StorageService.html":{}}}],["current.name",{"_index":747,"title":{},"body":{"injectables/StorageService.html":{}}}],["current?.id",{"_index":745,"title":{},"body":{"injectables/StorageService.html":{}}}],["darken($color",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["date().valueof",{"_index":267,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["date.now",{"_index":770,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["debug",{"_index":847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decreasing",{"_index":539,"title":{},"body":{"injectables/MessageService.html":{}}}],["default",{"_index":378,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/MessageService.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IKeyValue.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["dependencies",{"_index":150,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":77,"title":{},"body":{"classes/Account.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["descriptor",{"_index":252,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["dev",{"_index":870,"title":{},"body":{"index.html":{}}}],["development",{"_index":866,"title":{},"body":{"index.html":{}}}],["direction",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["directives",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":881,"title":{},"body":{"index.html":{}}}],["directory",{"_index":886,"title":{},"body":{"index.html":{}}}],["display",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["dist",{"_index":885,"title":{},"body":{"index.html":{}}}],["docs",{"_index":581,"title":{},"body":{"components/NavigationComponent.html":{}}}],["documentation",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["dynamic",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":896,"title":{},"body":{"index.html":{}}}],["ease",{"_index":535,"title":{},"body":{"injectables/MessageService.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["email",{"_index":73,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"injectables/UserFormService.html":{}}}],["end",{"_index":598,"title":{},"body":{"components/NavigationComponent.html":{},"index.html":{}}}],["endpoints",{"_index":198,"title":{},"body":{"classes/AppSettings.html":{},"interfaces/IEndpoint.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":838,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/log.scope.enum",{"_index":257,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"modules/SharedModule.html":{}}}],["enums/message.enum",{"_index":388,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{}}}],["env",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["env/environment",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":409,"title":{},"body":{"injectables/IdentityService.html":{},"miscellaneous/enumerations.html":{}}}],["errorservice",{"_index":226,"title":{"injectables/ErrorService.html":{}},"body":{"injectables/ErrorService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["evenly",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["event",{"_index":773,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["event.body",{"_index":777,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["event.headers.get('authorization').replace('bearer",{"_index":776,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["event.headers.has('authorization",{"_index":775,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["execute",{"_index":893,"title":{},"body":{"index.html":{}}}],["existing",{"_index":513,"title":{},"body":{"components/LoginComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["exports",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["extends",{"_index":69,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["fa",{"_index":599,"title":{},"body":{"components/NavigationComponent.html":{}}}],["failed",{"_index":413,"title":{},"body":{"injectables/IdentityService.html":{},"components/LoginComponent.html":{}}}],["failure",{"_index":403,"title":{},"body":{"injectables/IdentityService.html":{}}}],["false",{"_index":326,"title":{},"body":{"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":516,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["field.tolowercase",{"_index":631,"title":{},"body":{"components/RegisterComponent.html":{}}}],["field.tolowercase().match('username",{"_index":503,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{}}}],["files",{"_index":876,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":611,"title":{},"body":{"classes/Profile.html":{}}}],["flag",{"_index":888,"title":{},"body":{"index.html":{}}}],["flex",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["font",{"_index":590,"title":{},"body":{"components/NavigationComponent.html":{},"dependencies.html":{}}}],["foreach(field",{"_index":500,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["foreach(key",{"_index":272,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["form.service",{"_index":342,"title":{},"body":{"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["form.service.ts",{"_index":782,"title":{},"body":{"injectables/UserFormService.html":{},"coverage.html":{}}}],["form.service.ts:15",{"_index":787,"title":{},"body":{"injectables/UserFormService.html":{}}}],["form.service.ts:5",{"_index":785,"title":{},"body":{"injectables/UserFormService.html":{}}}],["form.service.ts:9",{"_index":786,"title":{},"body":{"injectables/UserFormService.html":{}}}],["formcontrol",{"_index":788,"title":{},"body":{"injectables/UserFormService.html":{}}}],["formgroup",{"_index":476,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFormService.html":{}}}],["formservice",{"_index":478,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["forroot",{"_index":683,"title":{},"body":{"modules/SharedModule.html":{}}}],["forroot(config",{"_index":684,"title":{},"body":{"modules/SharedModule.html":{}}}],["fsevents",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["further",{"_index":898,"title":{},"body":{"index.html":{}}}],["generate",{"_index":879,"title":{},"body":{"index.html":{}}}],["generated",{"_index":862,"title":{},"body":{"index.html":{}}}],["generateloginform",{"_index":783,"title":{},"body":{"injectables/UserFormService.html":{}}}],["generateregisterform",{"_index":784,"title":{},"body":{"injectables/UserFormService.html":{}}}],["getcollection",{"_index":715,"title":{},"body":{"injectables/StorageService.html":{}}}],["getcollection$(key",{"_index":720,"title":{},"body":{"injectables/StorageService.html":{}}}],["getcollection$>(key",{"_index":756,"title":{},"body":{"injectables/StorageService.html":{}}}],["geterrors",{"_index":477,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["geterrors(control",{"_index":480,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getstorage",{"_index":716,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstorage(key",{"_index":723,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstorage>(key",{"_index":731,"title":{},"body":{"injectables/StorageService.html":{}}}],["getting",{"_index":859,"title":{"index.html":{}},"body":{}}],["go",{"_index":901,"title":{},"body":{"index.html":{}}}],["goodbye",{"_index":416,"title":{},"body":{"injectables/IdentityService.html":{}}}],["graph",{"_index":910,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":308,"title":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":309,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"overview.html":{}}}],["guid",{"_index":258,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"dependencies.html":{}}}],["guid.newguid().tostring().split",{"_index":269,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["header",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["height",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["help",{"_index":899,"title":{},"body":{"index.html":{}}}],["helpers/app.settings",{"_index":452,"title":{},"body":{"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["helpers/endpoint.interface",{"_index":203,"title":{},"body":{"classes/AppSettings.html":{}}}],["helpers/key.value",{"_index":453,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/StorageService.html":{}}}],["helpers/logger.model",{"_index":454,"title":{},"body":{"injectables/LoggerService.html":{}}}],["hidden",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":236,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["home.component.html",{"_index":238,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":237,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":49,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["hover",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["http",{"_index":232,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/NetworkService.html":{}}}],["http://localhost:4200",{"_index":872,"title":{},"body":{"index.html":{}}}],["http://localhost:5000",{"_index":381,"title":{},"body":{"injectables/IdentityService.html":{}}}],["http_interceptors",{"_index":688,"title":{},"body":{"modules/SharedModule.html":{}}}],["httpclient",{"_index":230,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/NetworkService.html":{}}}],["httpclientmodule",{"_index":689,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":485,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["httpevent",{"_index":649,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":646,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpinterceptor",{"_index":650,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httprequest",{"_index":645,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpresponse",{"_index":768,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["id",{"_index":78,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["identifier",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":279,"title":{"classes/Identity.html":{}},"body":{"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["identity'},{'name",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["identity(user.username",{"_index":779,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["identity.component",{"_index":343,"title":{},"body":{"modules/IdentityModule.html":{}}}],["identity.component.html",{"_index":298,"title":{},"body":{"components/IdentityComponent.html":{}}}],["identity.component.scss",{"_index":297,"title":{},"body":{"components/IdentityComponent.html":{}}}],["identity/identity.component",{"_index":354,"title":{},"body":{"modules/IdentityRoutingModule.html":{}}}],["identity/identity.module",{"_index":693,"title":{},"body":{"modules/SharedModule.html":{}}}],["identity/identity.routing.module",{"_index":338,"title":{},"body":{"modules/IdentityModule.html":{}}}],["identity/login/login.component",{"_index":339,"title":{},"body":{"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["identity/register/register.component",{"_index":340,"title":{},"body":{"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["identitycomponent",{"_index":51,"title":{"components/IdentityComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["identityguard",{"_index":182,"title":{"guards/IdentityGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/IdentityGuard.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identitymodule",{"_index":328,"title":{"modules/IdentityModule.html":{}},"body":{"modules/IdentityModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["identityresolver",{"_index":344,"title":{"guards/IdentityResolver.html":{}},"body":{"guards/IdentityResolver.html":{},"coverage.html":{}}}],["identityroutingmodule",{"_index":333,"title":{"modules/IdentityRoutingModule.html":{}},"body":{"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["identityservice",{"_index":312,"title":{"injectables/IdentityService.html":{}},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["iendpoint",{"_index":202,"title":{"interfaces/IEndpoint.html":{}},"body":{"classes/AppSettings.html":{},"interfaces/IEndpoint.html":{},"coverage.html":{}}}],["ikeyvalue",{"_index":245,"title":{"interfaces/IKeyValue.html":{}},"body":{"interfaces/IKeyValue.html":{},"injectables/LoggerService.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["iloggermodel",{"_index":250,"title":{"interfaces/ILoggerModel.html":{}},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["imodelbase",{"_index":275,"title":{"interfaces/IModelBase.html":{}},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["import('./identity/identity.module').then(m",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./schedule/schedule.module').then(m",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":247,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inherited",{"_index":91,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["initialize",{"_index":439,"title":{},"body":{"injectables/LoggerService.html":{}}}],["initialize(scope",{"_index":445,"title":{},"body":{"injectables/LoggerService.html":{}}}],["injectable",{"_index":225,"title":{"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"injectables/StorageService.html":{},"injectables/UserFormService.html":{}},"body":{"injectables/ErrorService.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{}}}],["injectables",{"_index":227,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"injectables/StorageService.html":{},"injectables/UserFormService.html":{},"overview.html":{}}}],["instanceof",{"_index":774,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercept",{"_index":642,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["intercept(req",{"_index":644,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":638,"title":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":640,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interface",{"_index":241,"title":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{}},"body":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["interfaces",{"_index":242,"title":{},"body":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"overview.html":{}}}],["invalid",{"_index":515,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isactive",{"_index":79,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["isdefault",{"_index":80,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["item",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/StorageService.html":{}}}],["item?.id",{"_index":744,"title":{},"body":{"injectables/StorageService.html":{}}}],["item?.name",{"_index":746,"title":{},"body":{"injectables/StorageService.html":{}}}],["item[key",{"_index":737,"title":{},"body":{"injectables/StorageService.html":{}}}],["items",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"components/NavigationComponent.html":{},"modules/SharedModule.html":{}}}],["jquery",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('identity",{"_index":420,"title":{},"body":{"injectables/IdentityService.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":733,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(identity",{"_index":424,"title":{},"body":{"injectables/IdentityService.html":{}}}],["json.stringify(storage",{"_index":762,"title":{},"body":{"injectables/StorageService.html":{}}}],["justify",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["karma",{"_index":895,"title":{},"body":{"index.html":{}}}],["key",{"_index":244,"title":{},"body":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"injectables/StorageService.html":{}}}],["lastname",{"_index":612,"title":{},"body":{"classes/Profile.html":{}}}],["left",{"_index":597,"title":{},"body":{"components/NavigationComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["lepooch",{"_index":578,"title":{},"body":{"components/NavigationComponent.html":{}}}],["lifecycle",{"_index":851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighten($color",{"_index":602,"title":{},"body":{"components/NavigationComponent.html":{}}}],["literal",{"_index":199,"title":{},"body":{"classes/AppSettings.html":{},"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.removeitem('identity",{"_index":425,"title":{},"body":{"injectables/IdentityService.html":{}}}],["localstorage.setitem('identity",{"_index":423,"title":{},"body":{"injectables/IdentityService.html":{}}}],["localstorage.setitem(key",{"_index":761,"title":{},"body":{"injectables/StorageService.html":{}}}],["log",{"_index":440,"title":{},"body":{"injectables/LoggerService.html":{}}}],["log(args",{"_index":447,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logger",{"_index":705,"title":{},"body":{"modules/SharedModule.html":{}}}],["loggermodel",{"_index":260,"title":{"classes/LoggerModel.html":{}},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["loggermodel(args",{"_index":461,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerservice",{"_index":435,"title":{"injectables/LoggerService.html":{}},"body":{"injectables/LoggerService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":301,"title":{},"body":{"components/IdentityComponent.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["login'},{'name",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["login.component.html",{"_index":475,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":474,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":53,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logitems",{"_index":455,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logitems.unshift(new",{"_index":460,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel",{"_index":840,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logout",{"_index":570,"title":{},"body":{"components/NavigationComponent.html":{}}}],["logscope",{"_index":256,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"modules/SharedModule.html":{},"miscellaneous/enumerations.html":{}}}],["logscope.router",{"_index":708,"title":{},"body":{"modules/SharedModule.html":{}}}],["logscopes",{"_index":437,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logtoconsole",{"_index":441,"title":{},"body":{"injectables/LoggerService.html":{}}}],["m.identitymodule",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.schedulemodule",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["map(item",{"_index":736,"title":{},"body":{"injectables/StorageService.html":{}}}],["margin",{"_index":305,"title":{},"body":{"components/IdentityComponent.html":{},"components/NavigationComponent.html":{}}}],["matching",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":253,"title":{},"body":{"interfaces/ILoggerModel.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/MessageService.html":{}}}],["messageservice",{"_index":368,"title":{"injectables/MessageService.html":{}},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["messagetype",{"_index":387,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["messagetype.error",{"_index":407,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{}}}],["messagetype.information",{"_index":417,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{}}}],["messagetype.success",{"_index":400,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{}}}],["messagetype.warning",{"_index":558,"title":{},"body":{"injectables/MessageService.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["min",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":837,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modelbase",{"_index":70,"title":{"classes/ModelBase.html":{}},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["modelbase:10",{"_index":94,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:11",{"_index":92,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:12",{"_index":93,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:13",{"_index":96,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:14",{"_index":97,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:15",{"_index":98,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["models/account.model",{"_index":292,"title":{},"body":{"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{}}}],["models/base.model",{"_index":99,"title":{},"body":{"classes/Account.html":{},"classes/Profile.html":{},"injectables/StorageService.html":{}}}],["models/identity.model",{"_index":385,"title":{},"body":{"injectables/IdentityService.html":{},"interceptors/TokenInterceptor.html":{}}}],["module",{"_index":147,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":149,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithproviders",{"_index":686,"title":{},"body":{"modules/SharedModule.html":{}}}],["more",{"_index":900,"title":{},"body":{"index.html":{}}}],["multi",{"_index":712,"title":{},"body":{"modules/SharedModule.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"index.html":{}}}],["nav",{"_index":588,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigate",{"_index":871,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":567,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["navigation.component.html",{"_index":569,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":568,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigationcomponent",{"_index":55,"title":{"components/NavigationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["network",{"_index":852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["networkservice",{"_index":606,"title":{"injectables/NetworkService.html":{}},"body":{"injectables/NetworkService.html":{},"coverage.html":{}}}],["new",{"_index":266,"title":{},"body":{"interfaces/ILoggerModel.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{},"injectables/UserFormService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":390,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/NavigationComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["next(await",{"_index":753,"title":{},"body":{"injectables/StorageService.html":{}}}],["next.handle(authreq",{"_index":659,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":771,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["ng",{"_index":868,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["ngx",{"_index":530,"title":{},"body":{"injectables/MessageService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["null",{"_index":294,"title":{},"body":{"classes/Identity.html":{},"injectables/IdentityService.html":{}}}],["number",{"_index":90,"title":{},"body":{"classes/Account.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["object",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(args",{"_index":271,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["object.keys(response.error",{"_index":499,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["object.keys(response.error).foreach(field",{"_index":635,"title":{},"body":{"components/RegisterComponent.html":{}}}],["object.keys(response.error.errors",{"_index":509,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["object.keys(this",{"_index":278,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{}}}],["object.keys(this.formgroup.get(control).errors",{"_index":512,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["object.keys(this.logscopes).foreach(key",{"_index":469,"title":{},"body":{"injectables/LoggerService.html":{}}}],["object.keys(values",{"_index":735,"title":{},"body":{"injectables/StorageService.html":{}}}],["observable",{"_index":350,"title":{},"body":{"guards/IdentityResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["optional",{"_index":86,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"injectables/ErrorService.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["out",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":903,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":816,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":585,"title":{},"body":{"components/NavigationComponent.html":{}}}],["page",{"_index":906,"title":{},"body":{"index.html":{}}}],["panel",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"classes/Account.html":{},"injectables/ErrorService.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["password",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFormService.html":{}}}],["path",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleRoutingModule.html":{}}}],["pathmatch",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["please",{"_index":404,"title":{},"body":{"injectables/IdentityService.html":{}}}],["pooch",{"_index":613,"title":{},"body":{"classes/Profile.html":{}}}],["popper.js",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["post(`${this.baseurl}/auth",{"_index":394,"title":{},"body":{"injectables/IdentityService.html":{}}}],["private",{"_index":322,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["prod",{"_index":887,"title":{},"body":{"index.html":{}}}],["production",{"_index":205,"title":{},"body":{"classes/AppSettings.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":609,"title":{"classes/Profile.html":{}},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["project",{"_index":861,"title":{},"body":{"index.html":{}}}],["promise",{"_index":351,"title":{},"body":{"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/StorageService.html":{}}}],["promise.resolve",{"_index":414,"title":{},"body":{"injectables/IdentityService.html":{}}}],["promise.resolve().then(async",{"_index":732,"title":{},"body":{"injectables/StorageService.html":{}}}],["properties",{"_index":71,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{}}}],["protractor",{"_index":897,"title":{},"body":{"index.html":{}}}],["provide",{"_index":709,"title":{},"body":{"modules/SharedModule.html":{}}}],["provider",{"_index":204,"title":{},"body":{"classes/AppSettings.html":{},"miscellaneous/enumerations.html":{}}}],["provider.server",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["public",{"_index":72,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{},"injectables/UserFormService.html":{}}}],["put(`${this.baseurl}/auth",{"_index":410,"title":{},"body":{"injectables/IdentityService.html":{}}}],["reactiveformsmodule",{"_index":336,"title":{},"body":{"modules/IdentityModule.html":{}}}],["readonly",{"_index":359,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/StorageService.html":{}}}],["redirectto",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["reference",{"_index":905,"title":{},"body":{"index.html":{}}}],["register",{"_index":355,"title":{},"body":{"modules/IdentityRoutingModule.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["register.component.html",{"_index":620,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":619,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":57,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reload",{"_index":874,"title":{},"body":{"index.html":{}}}],["req",{"_index":648,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["req.clone",{"_index":655,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["requestinterceptor",{"_index":639,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["require",{"_index":813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":518,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reset",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resolve",{"_index":346,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["resolve(route",{"_index":348,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["response.error",{"_index":507,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["response.error.errors",{"_index":630,"title":{},"body":{"components/RegisterComponent.html":{}}}],["response.error.errors[field",{"_index":511,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.error.errors[field][0",{"_index":634,"title":{},"body":{"components/RegisterComponent.html":{}}}],["response.error[field]['errors'][0]['errormessage",{"_index":504,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["response.error[field][0",{"_index":636,"title":{},"body":{"components/RegisterComponent.html":{}}}],["response.status",{"_index":497,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["result",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":325,"title":{},"body":{"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{}}}],["right",{"_index":551,"title":{},"body":{"injectables/MessageService.html":{}}}],["root",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["route",{"_index":320,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{}}}],["router",{"_index":313,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"miscellaneous/enumerations.html":{}}}],["routermodule",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forchild",{"_index":703,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild(routes",{"_index":356,"title":{},"body":{"modules/IdentityRoutingModule.html":{},"modules/ScheduleRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":318,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["routes",{"_index":180,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":584,"title":{},"body":{"components/NavigationComponent.html":{}}}],["run",{"_index":867,"title":{},"body":{"index.html":{}}}],["running",{"_index":889,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":352,"title":{},"body":{"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":767,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["scaffolding",{"_index":878,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["schedule.component.html",{"_index":662,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["schedule.component.scss",{"_index":661,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["schedule/appointments/appointments.component",{"_index":671,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["schedule/schedule.component",{"_index":673,"title":{},"body":{"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{}}}],["schedule/schedule.routing.module",{"_index":672,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["schedulecomponent",{"_index":59,"title":{"components/ScheduleComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["schedulemodule",{"_index":665,"title":{"modules/ScheduleModule.html":{}},"body":{"modules/ScheduleModule.html":{},"modules.html":{},"overview.html":{}}}],["scheduleroutingmodule",{"_index":669,"title":{"modules/ScheduleRoutingModule.html":{}},"body":{"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["scope",{"_index":254,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"modules/SharedModule.html":{}}}],["secondary",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["sections/about/about.component",{"_index":694,"title":{},"body":{"modules/SharedModule.html":{}}}],["sections/home/home.component",{"_index":695,"title":{},"body":{"modules/SharedModule.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["serve",{"_index":869,"title":{},"body":{"index.html":{}}}],["server",{"_index":858,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["service",{"_index":526,"title":{},"body":{"injectables/MessageService.html":{}}}],["services",{"_index":704,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/error.service",{"_index":696,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/identity.guard",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["services/identity.service",{"_index":321,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["services/logger.service",{"_index":697,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/message.service",{"_index":386,"title":{},"body":{"injectables/IdentityService.html":{},"modules/SharedModule.html":{}}}],["services/request.interceptor",{"_index":698,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/storage.service",{"_index":699,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/token.interceptor",{"_index":701,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/user",{"_index":341,"title":{},"body":{"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["seterrors",{"_index":633,"title":{},"body":{"components/RegisterComponent.html":{}}}],["setheaders",{"_index":656,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["setidentity",{"_index":363,"title":{},"body":{"injectables/IdentityService.html":{}}}],["setidentity(identity",{"_index":371,"title":{},"body":{"injectables/IdentityService.html":{}}}],["setstorage",{"_index":717,"title":{},"body":{"injectables/StorageService.html":{}}}],["setstorage(key",{"_index":725,"title":{},"body":{"injectables/StorageService.html":{}}}],["setstorage>(key",{"_index":758,"title":{},"body":{"injectables/StorageService.html":{}}}],["sharedmodule",{"_index":160,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedmodule.forroot",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["shop",{"_index":579,"title":{},"body":{"components/NavigationComponent.html":{}}}],["show",{"_index":522,"title":{},"body":{"injectables/MessageService.html":{}}}],["show(title",{"_index":527,"title":{},"body":{"injectables/MessageService.html":{}}}],["size",{"_index":591,"title":{},"body":{"components/NavigationComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/AppointmentsComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/ScheduleRoutingModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserFormService.html":{},"index.html":{}}}],["space",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["spec\\.ts",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../context.enum.ts",{"_index":839,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../endpoint.interface.ts",{"_index":918,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log.level.enum.ts",{"_index":841,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../log.scope.enum.ts",{"_index":842,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../message.enum.ts",{"_index":843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../providers.enum.ts",{"_index":844,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../shared.module.ts",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/@common/enums/context.enum.ts",{"_index":845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/enums/log.level.enum.ts",{"_index":846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/enums/log.scope.enum.ts",{"_index":849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/enums/message.enum.ts",{"_index":853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/enums/providers.enum.ts",{"_index":857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/helpers/app.settings.ts",{"_index":197,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["src/app/@common/helpers/app.settings.ts:4",{"_index":200,"title":{},"body":{"classes/AppSettings.html":{}}}],["src/app/@common/helpers/app.settings.ts:5",{"_index":201,"title":{},"body":{"classes/AppSettings.html":{}}}],["src/app/@common/helpers/endpoint.interface.ts",{"_index":243,"title":{},"body":{"interfaces/IEndpoint.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/@common/helpers/key.value.ts",{"_index":246,"title":{},"body":{"interfaces/IKeyValue.html":{},"coverage.html":{}}}],["src/app/@common/helpers/key.value.ts:1",{"_index":249,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["src/app/@common/helpers/logger.model.ts",{"_index":251,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"coverage.html":{}}}],["src/app/@common/helpers/logger.model.ts:14",{"_index":434,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:15",{"_index":430,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:16",{"_index":432,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:17",{"_index":428,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:18",{"_index":431,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:19",{"_index":429,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:20",{"_index":433,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/helpers/logger.model.ts:21",{"_index":427,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/app/@common/models/account.model.ts",{"_index":68,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["src/app/@common/models/account.model.ts:4",{"_index":89,"title":{},"body":{"classes/Account.html":{}}}],["src/app/@common/models/account.model.ts:5",{"_index":88,"title":{},"body":{"classes/Account.html":{}}}],["src/app/@common/models/account.model.ts:6",{"_index":83,"title":{},"body":{"classes/Account.html":{}}}],["src/app/@common/models/base.model.ts",{"_index":276,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["src/app/@common/models/base.model.ts:10",{"_index":563,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:11",{"_index":561,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:12",{"_index":562,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:13",{"_index":564,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:14",{"_index":565,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/base.model.ts:15",{"_index":560,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/app/@common/models/identity.model.ts",{"_index":280,"title":{},"body":{"classes/Identity.html":{},"coverage.html":{}}}],["src/app/@common/models/identity.model.ts:4",{"_index":282,"title":{},"body":{"classes/Identity.html":{}}}],["src/app/@common/models/profile.model.ts",{"_index":610,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/app/@common/models/profile.model.ts:4",{"_index":615,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/@common/models/profile.model.ts:5",{"_index":616,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/@common/models/profile.model.ts:6",{"_index":617,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/@common/models/profile.model.ts:7",{"_index":614,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/@common/navigation/navigation.component.ts",{"_index":566,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/@common/navigation/navigation.component.ts:12",{"_index":571,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/@common/navigation/navigation.component.ts:20",{"_index":573,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/@common/navigation/navigation.component.ts:22",{"_index":572,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/@common/sections/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/@common/sections/about/about.component.ts:13",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/@common/sections/about/about.component.ts:8",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/@common/sections/home/home.component.ts",{"_index":235,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/@common/sections/home/home.component.ts:13",{"_index":240,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/@common/sections/home/home.component.ts:8",{"_index":239,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/@common/services/error.service.ts",{"_index":228,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["src/app/@common/services/error.service.ts:5",{"_index":231,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/@common/services/identity.guard.ts",{"_index":310,"title":{},"body":{"guards/IdentityGuard.html":{},"coverage.html":{}}}],["src/app/@common/services/identity.guard.ts:11",{"_index":319,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["src/app/@common/services/identity.guard.ts:6",{"_index":314,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["src/app/@common/services/identity.resolver.ts",{"_index":345,"title":{},"body":{"guards/IdentityResolver.html":{},"coverage.html":{}}}],["src/app/@common/services/identity.resolver.ts:12",{"_index":349,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["src/app/@common/services/identity.resolver.ts:7",{"_index":347,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["src/app/@common/services/identity.service.ts",{"_index":357,"title":{},"body":{"injectables/IdentityService.html":{},"coverage.html":{}}}],["src/app/@common/services/identity.service.ts:11",{"_index":382,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:13",{"_index":380,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:14",{"_index":383,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:15",{"_index":369,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:24",{"_index":374,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:34",{"_index":377,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:44",{"_index":375,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:49",{"_index":370,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/identity.service.ts:56",{"_index":372,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/app/@common/services/logger.service.ts",{"_index":436,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/app/@common/services/logger.service.ts:11",{"_index":450,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:12",{"_index":443,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:16",{"_index":448,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:29",{"_index":446,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:40",{"_index":449,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:9",{"_index":451,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/message.service.ts",{"_index":521,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/app/@common/services/message.service.ts:23",{"_index":528,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/@common/services/message.service.ts:6",{"_index":525,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/@common/services/network.service.ts",{"_index":607,"title":{},"body":{"injectables/NetworkService.html":{},"coverage.html":{}}}],["src/app/@common/services/network.service.ts:5",{"_index":608,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/@common/services/request.interceptor.ts",{"_index":641,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/app/@common/services/request.interceptor.ts:13",{"_index":647,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/@common/services/request.interceptor.ts:8",{"_index":643,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/@common/services/storage.service.ts",{"_index":713,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/@common/services/storage.service.ts:10",{"_index":719,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:15",{"_index":724,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:27",{"_index":729,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:41",{"_index":721,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:47",{"_index":727,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/storage.service.ts:9",{"_index":730,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/@common/services/token.interceptor.ts",{"_index":763,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["src/app/@common/services/token.interceptor.ts:10",{"_index":764,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/@common/services/token.interceptor.ts:15",{"_index":765,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/@common/services/user",{"_index":781,"title":{},"body":{"injectables/UserFormService.html":{},"coverage.html":{}}}],["src/app/@common/shared.module.ts",{"_index":681,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/@common/shared.module.ts:40",{"_index":685,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/app",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/appointment/appointment.component.ts",{"_index":206,"title":{},"body":{"components/AppointmentComponent.html":{},"coverage.html":{}}}],["src/app/appointment/appointment.component.ts:12",{"_index":211,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.component.ts:8",{"_index":210,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.module.ts",{"_index":215,"title":{},"body":{"modules/AppointmentModule.html":{}}}],["src/app/identity/identity.component.ts",{"_index":296,"title":{},"body":{"components/IdentityComponent.html":{},"coverage.html":{}}}],["src/app/identity/identity.component.ts:12",{"_index":300,"title":{},"body":{"components/IdentityComponent.html":{}}}],["src/app/identity/identity.component.ts:8",{"_index":299,"title":{},"body":{"components/IdentityComponent.html":{}}}],["src/app/identity/identity.module.ts",{"_index":335,"title":{},"body":{"modules/IdentityModule.html":{}}}],["src/app/identity/identity.routing.module.ts",{"_index":353,"title":{},"body":{"modules/IdentityRoutingModule.html":{}}}],["src/app/identity/login/login.component.ts",{"_index":473,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/identity/login/login.component.ts:15",{"_index":479,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:18",{"_index":484,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:20",{"_index":483,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:50",{"_index":481,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/register/register.component.ts",{"_index":618,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/identity/register/register.component.ts:15",{"_index":621,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/identity/register/register.component.ts:18",{"_index":623,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/identity/register/register.component.ts:20",{"_index":624,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/identity/register/register.component.ts:86",{"_index":622,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/schedule/appointments/appointments.component.ts",{"_index":219,"title":{},"body":{"components/AppointmentsComponent.html":{},"coverage.html":{}}}],["src/app/schedule/appointments/appointments.component.ts:12",{"_index":224,"title":{},"body":{"components/AppointmentsComponent.html":{}}}],["src/app/schedule/appointments/appointments.component.ts:8",{"_index":223,"title":{},"body":{"components/AppointmentsComponent.html":{}}}],["src/app/schedule/schedule.component.ts",{"_index":660,"title":{},"body":{"components/ScheduleComponent.html":{},"coverage.html":{}}}],["src/app/schedule/schedule.component.ts:12",{"_index":664,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["src/app/schedule/schedule.component.ts:8",{"_index":663,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["src/app/schedule/schedule.module.ts",{"_index":670,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["src/app/schedule/schedule.routing.module.ts",{"_index":674,"title":{},"body":{"modules/ScheduleRoutingModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stacktrace",{"_index":438,"title":{},"body":{"injectables/LoggerService.html":{}}}],["start",{"_index":595,"title":{},"body":{"components/NavigationComponent.html":{}}}],["started",{"_index":769,"title":{"index.html":{}},"body":{"interceptors/TokenInterceptor.html":{}}}],["state",{"_index":317,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["statements",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":682,"title":{},"body":{"modules/SharedModule.html":{}}}],["storage",{"_index":419,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{}}}],["storage.filter(value",{"_index":755,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.findindex(item",{"_index":743,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.push(current",{"_index":751,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.splice(index",{"_index":749,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage[item.name",{"_index":760,"title":{},"body":{"injectables/StorageService.html":{}}}],["storageservice",{"_index":680,"title":{"injectables/StorageService.html":{}},"body":{"modules/SharedModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":884,"title":{},"body":{"index.html":{}}}],["string",{"_index":82,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["subject",{"_index":384,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/StorageService.html":{}}}],["subscribe",{"_index":465,"title":{},"body":{"injectables/LoggerService.html":{}}}],["success",{"_index":855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":411,"title":{},"body":{"injectables/IdentityService.html":{}}}],["super",{"_index":100,"title":{},"body":{"classes/Account.html":{},"classes/Profile.html":{}}}],["super(username",{"_index":293,"title":{},"body":{"classes/Identity.html":{}}}],["support",{"_index":907,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":908,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":552,"title":{},"body":{"injectables/MessageService.html":{},"components/RegisterComponent.html":{}}}],["t",{"_index":722,"title":{},"body":{"injectables/StorageService.html":{}}}],["t\\t${key",{"_index":471,"title":{},"body":{"injectables/LoggerService.html":{}}}],["table",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":766,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["tap(event",{"_index":772,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["target",{"_index":255,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["test",{"_index":892,"title":{},"body":{"index.html":{}}}],["tests",{"_index":891,"title":{},"body":{"index.html":{}}}],["text",{"_index":604,"title":{},"body":{"components/NavigationComponent.html":{}}}],["theme",{"_index":583,"title":{},"body":{"components/NavigationComponent.html":{}}}],["themes",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["themes.scss",{"_index":303,"title":{},"body":{"components/IdentityComponent.html":{},"components/NavigationComponent.html":{}}}],["then((result",{"_index":396,"title":{},"body":{"injectables/IdentityService.html":{}}}],["then(result",{"_index":493,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.account",{"_index":574,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.account?.username",{"_index":582,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.authstate",{"_index":421,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.checkidentity",{"_index":392,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.collection$[key",{"_index":757,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.collection[key",{"_index":734,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.collection[key].slice",{"_index":738,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.config.environment.production",{"_index":463,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.createdat",{"_index":265,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["this.email",{"_index":103,"title":{},"body":{"classes/Account.html":{}}}],["this.formgroup",{"_index":486,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formgroup.controls[field.tolowercase",{"_index":501,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formgroup.controls[field.tolowercase()]?.seterrors",{"_index":502,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formgroup.controls[field.tolowercase()]?.seterrors(field.tolowercase().match('username",{"_index":510,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.errors[field",{"_index":520,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.get(field).errors[message",{"_index":519,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formgroup.reset",{"_index":494,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formgroup.seterrors",{"_index":505,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formgroup.value",{"_index":488,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.value.email",{"_index":629,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formgroup.value.password",{"_index":628,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formservice.generateloginform",{"_index":487,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formservice.generateregisterform",{"_index":625,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.getcollection$(key",{"_index":752,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.getstorage(key",{"_index":741,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.http",{"_index":393,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity",{"_index":391,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.next(identity",{"_index":426,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.next(storage",{"_index":422,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.subscribe",{"_index":389,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity.authstate",{"_index":323,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["this.identity.identity",{"_index":575,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.identity.identity$.subscribe",{"_index":576,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.identity.identity?.token",{"_index":653,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.identity.setidentity(new",{"_index":778,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.identity.userlogin(new",{"_index":489,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.identity.userlogout",{"_index":577,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.identity.username",{"_index":399,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity.userregister(new",{"_index":626,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.initialize(args.scope",{"_index":459,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.log",{"_index":707,"title":{},"body":{"modules/SharedModule.html":{}}}],["this.logscopes$[args?.scope",{"_index":458,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes$[args?.scope].next(logitems",{"_index":462,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes$[scope",{"_index":464,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes[args?.scope",{"_index":456,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes[key].length",{"_index":472,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes[scope",{"_index":466,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logtoconsole",{"_index":467,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.message.show('login",{"_index":402,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.message.show('registration",{"_index":412,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.message.show('signing",{"_index":415,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.message.show('success",{"_index":397,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.password",{"_index":102,"title":{},"body":{"classes/Account.html":{}}}],["this.router.events.subscribe",{"_index":706,"title":{},"body":{"modules/SharedModule.html":{}}}],["this.router.navigate(['account",{"_index":324,"title":{},"body":{"guards/IdentityGuard.html":{},"components/NavigationComponent.html":{}}}],["this.router.navigatebyurl('schedule",{"_index":495,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.service.error(message",{"_index":554,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.info(message",{"_index":556,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.success(message",{"_index":557,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.autodismiss",{"_index":532,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.closebutton",{"_index":533,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.easing",{"_index":534,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.extendedtimeout",{"_index":546,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.maxopened",{"_index":540,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.newestontop",{"_index":536,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.positionclass",{"_index":548,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.preventduplicates",{"_index":543,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.progressanimation",{"_index":538,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.progressbar",{"_index":537,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.taptodismiss",{"_index":542,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.timeout",{"_index":544,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.warning(message",{"_index":559,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.setidentity",{"_index":418,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.setstorage(key",{"_index":754,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.token",{"_index":295,"title":{},"body":{"classes/Identity.html":{}}}],["this.uid",{"_index":268,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["this.username",{"_index":101,"title":{},"body":{"classes/Account.html":{}}}],["this[key",{"_index":273,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["throw",{"_index":408,"title":{},"body":{"injectables/IdentityService.html":{}}}],["title",{"_index":529,"title":{},"body":{"injectables/MessageService.html":{}}}],["titlecase",{"_index":517,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["tmodel",{"_index":248,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["toast",{"_index":549,"title":{},"body":{"injectables/MessageService.html":{}}}],["toastr",{"_index":531,"title":{},"body":{"injectables/MessageService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":687,"title":{},"body":{"modules/SharedModule.html":{}}}],["toastrmodule.forroot",{"_index":702,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["toastrservice",{"_index":524,"title":{},"body":{"injectables/MessageService.html":{}}}],["token",{"_index":281,"title":{},"body":{"classes/Identity.html":{},"interceptors/TokenInterceptor.html":{}}}],["tokeninterceptor",{"_index":700,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["topromise",{"_index":395,"title":{},"body":{"injectables/IdentityService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["true",{"_index":327,"title":{},"body":{"guards/IdentityGuard.html":{},"injectables/MessageService.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":405,"title":{},"body":{"injectables/IdentityService.html":{}}}],["ts",{"_index":259,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"dependencies.html":{}}}],["tslib",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":85,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"injectables/ErrorService.html":{},"interfaces/IEndpoint.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":916,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["uid",{"_index":261,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["unit",{"_index":890,"title":{},"body":{"index.html":{}}}],["updatestorage",{"_index":718,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatestorage(key",{"_index":728,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatestorage>(key",{"_index":739,"title":{},"body":{"injectables/StorageService.html":{}}}],["use",{"_index":880,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":711,"title":{},"body":{"modules/SharedModule.html":{}}}],["user",{"_index":514,"title":{},"body":{"components/LoginComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["user.email",{"_index":780,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["userformservice",{"_index":334,"title":{"injectables/UserFormService.html":{}},"body":{"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFormService.html":{},"coverage.html":{},"overview.html":{}}}],["userlogin",{"_index":364,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userlogin(account",{"_index":373,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userlogout",{"_index":365,"title":{},"body":{"injectables/IdentityService.html":{}}}],["username",{"_index":75,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFormService.html":{}}}],["userregister",{"_index":366,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userregister(account",{"_index":376,"title":{},"body":{"injectables/IdentityService.html":{}}}],["usevalue",{"_index":710,"title":{},"body":{"modules/SharedModule.html":{}}}],["validators",{"_index":789,"title":{},"body":{"injectables/UserFormService.html":{}}}],["validators.email",{"_index":791,"title":{},"body":{"injectables/UserFormService.html":{}}}],["validators.required",{"_index":790,"title":{},"body":{"injectables/UserFormService.html":{}}}],["value",{"_index":379,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.email",{"_index":492,"title":{},"body":{"components/LoginComponent.html":{}}}],["value.password",{"_index":491,"title":{},"body":{"components/LoginComponent.html":{}}}],["values",{"_index":726,"title":{},"body":{"injectables/StorageService.html":{}}}],["values.foreach(current",{"_index":742,"title":{},"body":{"injectables/StorageService.html":{}}}],["values.foreach(item",{"_index":759,"title":{},"body":{"injectables/StorageService.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["variable",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":919,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":865,"title":{},"body":{"index.html":{}}}],["via",{"_index":894,"title":{},"body":{"index.html":{}}}],["view",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["warn",{"_index":848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["warning",{"_index":856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["welcome",{"_index":398,"title":{},"body":{"injectables/IdentityService.html":{}}}],["white",{"_index":587,"title":{},"body":{"components/NavigationComponent.html":{}}}],["width",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["works",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/AppointmentsComponent.html":{},"components/HomeComponent.html":{},"components/ScheduleComponent.html":{}}}],["x",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["y",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["yes",{"_index":87,"title":{},"body":{"classes/Account.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{},"injectables/StorageService.html":{}}}],["zone.js",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/sections/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/sections/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/sections/about/about.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  about works!\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  about works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'AppointmentsComponent', 'selector': 'app-appointments'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/account.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ModelBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                userName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userName?: string, password?: string, email?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/account.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/account.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/account.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/account.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelBase } from '@models/base.model'\n\nexport class Account extends ModelBase {\n  public userName: string;\n  public password: string;\n  public email   : string;\n  // ======================================= //\n  constructor(userName?: string, password?: string, email?: string) {\n    super();\n    this.userName = userName ?? userName;\n    this.password = password ?? password;\n    this.email    = email    ?? email   ;\n  }\n  // ======================================= //\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector   :  'app-root'            ,\n  templateUrl:  './app.component.html',\n  styleUrls  : ['./app.component.scss']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import \"themes\";\n@import \"styles\";\n\n.content {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n\n  .content-header {\n    height: 50px;\n  }\n  .content-main {\n    flex: auto;\n    overflow-y: auto;\n  }\n}\n\n.view-port {\n  height: 100vh;\n  max-height: 100vh;\n  width: 100vw;\n  max-width: 100vw;\n  // ======================================= //\n  display: flex;\n  .view-main {\n    flex: auto;\n    display: flex;\n    flex-direction: column;\n    .view-content {\n      flex: auto;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n  }\n  .view-panel {\n    min-width: 50px;\n    max-width: 250px;\n    background: $panel-bg;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n\n    .panel-items {\n      width: 50px;\n\n      .panel-item {\n        height: 50px;\n        width: 50px;\n\n        :hover {\n          background: darken($color: $panel-bg, $amount: 10%);\n          * {\n            color: $secondary;\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'AppointmentsComponent', 'selector': 'app-appointments'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                } from '@angular/core'\nimport { BrowserModule           } from '@angular/platform-browser'\nimport { SharedModule            } from '@common/shared.module'\nimport { environment      as env } from '@env/environment'\nimport { AppRoutingModule        } from './app-routing.module'\nimport { AppComponent            } from './app.component'\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule.forRoot({ environment: env })\n  ],\n  declarations: [AppComponent],\n  bootstrap   : [AppComponent],\n  providers   : [            ],\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule              } from '@angular/core'\nimport { RouterModule , Routes } from '@angular/router'\nimport { IdentityGuard         } from '@services/identity.guard'\n\nconst routes: Routes = [\n  // ======================================= //\n  { path: 'account'  ,                               loadChildren: () => \"import('./identity/identity.module').then(m => m.IdentityModule)\" },\n  { path: 'schedule' , canActivate: [IdentityGuard], loadChildren: () => \"import('./schedule/schedule.module').then(m => m.ScheduleModule)\" },\n  { path: ''         , canActivate: [IdentityGuard], loadChildren: () => \"import('./schedule/schedule.module').then(m => m.ScheduleModule)\" },\n  { path: '**', pathMatch: 'full', redirectTo: '' }\n];\n// ======================================= //\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppSettings.html":{"url":"classes/AppSettings.html","title":"class - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/app.settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                endpoints\n                            \n                            \n                                    Public\n                                environment\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/app.settings.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/app.settings.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Endpoints, IEndpoint } from '@helpers/endpoint.interface'\n\nexport class AppSettings {\n  public endpoints?: { [provider: string]: IEndpoint };\n  public environment: { production: boolean, endpoints: Endpoints };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppointmentComponent.html":{"url":"components/AppointmentComponent.html","title":"component - AppointmentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppointmentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/appointment/appointment.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-appointment\n            \n\n            \n                styleUrls\n                ./appointment.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./appointment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/appointment/appointment.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/appointment/appointment.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.scss']\n})\nexport class AppointmentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  appointment works!\n\n\n    \n\n    \n                \n                    ./appointment.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  appointment works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'AppointmentsComponent', 'selector': 'app-appointments'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppointmentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppointmentModule.html":{"url":"modules/AppointmentModule.html","title":"module - AppointmentModule","body":"\n                   \n\n\n\n\n    Modules\n    AppointmentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppointmentModule\n\n\n\ncluster_AppointmentModule_declarations\n\n\n\n\nAppointmentComponent\n\nAppointmentComponent\n\n\n\nAppointmentModule\n\nAppointmentModule\n\nAppointmentModule -->\n\nAppointmentComponent->AppointmentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/appointment/appointment.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppointmentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule             } from '@angular/core'          ;\nimport { CommonModule         } from '@angular/common'        ;\nimport { AppointmentComponent } from './appointment.component';\n\n@NgModule({\n  imports     : [CommonModule        ],\n  declarations: [AppointmentComponent]\n})\nexport class AppointmentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppointmentsComponent.html":{"url":"components/AppointmentsComponent.html","title":"component - AppointmentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppointmentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/schedule/appointments/appointments.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-appointments\n            \n\n            \n                styleUrls\n                ./appointments.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./appointments.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/schedule/appointments/appointments.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/schedule/appointments/appointments.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appointments',\n  templateUrl: './appointments.component.html',\n  styleUrls: ['./appointments.component.scss']\n})\nexport class AppointmentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  appointments works!\n\n\n    \n\n    \n                \n                    ./appointments.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  appointments works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'AppointmentsComponent', 'selector': 'app-appointments'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppointmentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/error.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/error.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class ErrorService {\n  // ======================================= //\n  constructor(private http: HttpClient) { }\n  // ======================================= //\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/sections/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/sections/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/sections/home/home.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  home works!\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  home works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'AppointmentsComponent', 'selector': 'app-appointments'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEndpoint.html":{"url":"interfaces/IEndpoint.html","title":"interface - IEndpoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEndpoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/endpoint.interface.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface IEndpoint {\n}\nexport type Endpoints = { [key: string]: IEndpoint };\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeyValue.html":{"url":"interfaces/IKeyValue.html","title":"interface - IKeyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/key.value.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    TModel\n\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/helpers/key.value.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface IKeyValue {\n  // ======================================= //\n  [ key: string ]: TModel;\n  // ======================================= //\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILoggerModel.html":{"url":"interfaces/ILoggerModel.html","title":"interface - ILoggerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILoggerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/logger.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        descriptor\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        scope\n                                \n                                \n                                            Optional\n                                        target\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        descriptor\n                                    \n                                \n                                \n                                    \n                                        descriptor:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:         LogScope\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LogScope\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LogScope } from '@enums/log.scope.enum'\nimport { Guid } from 'guid-ts';\n\nexport interface ILoggerModel {\n  message   ?: string  ;\n  descriptor?: any     ;\n  name      ?: any     ;\n  scope     ?: LogScope;\n  target    ?: any     ;\n  items?: { [item: string]: any };\n}\nexport class LoggerModel {\n  // ======================================= //\n  public uid        : string  ;\n  public createdAt  : number  ;\n  public scope      : LogScope;\n  public caller     : string  ;\n  public description: string  ;\n  public class      : string  ;\n  public source     : string  ;\n  public items: { [item: string]: any };\n  // ======================================= //\n  constructor(args?: ILoggerModel) {\n    this.createdAt = new Date().valueOf();\n    this.uid = Guid.newGuid().toString().split('-')[0];\n    // ======================================= //\n    Object.keys(args)\n      .forEach(key => this[key] = args[key] );\n  }\n  // ======================================= //\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IModelBase.html":{"url":"interfaces/IModelBase.html","title":"interface - IModelBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IModelBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/base.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        isActive\n                                \n                                \n                                            Optional\n                                        isDefault\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDefault\n                                    \n                                \n                                \n                                    \n                                        isDefault:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IModelBase {\n  id         ?: number ;\n  name       ?: string ;\n  description?: string ;\n  isActive   ?: boolean;\n  isDefault  ?: boolean;\n}\nexport class ModelBase> {\n  // ======================================= //\n  public id         : number ;\n  public created    : number ;\n  public description: string ;\n  public isActive   : boolean;\n  public isDefault  : boolean;\n  public name       : string ;\n  // ======================================= //\n  constructor(args?: IModelBase) {\n    args ?? Object.keys(this)\n      .forEach(key => this[key] = this[key] ?? args[key]);\n  }\n  // ======================================= //\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Identity.html":{"url":"classes/Identity.html","title":"class - Identity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Identity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/identity.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Account\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                userName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, email: string, token: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/identity.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/identity.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account } from '@models/account.model'\n\nexport class Identity extends Account {\n  public token: string;\n  // ======================================= //\n  constructor(username: string, email: string, token: string) {\n    super(username, null, email);\n    this.token = token;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IdentityComponent.html":{"url":"components/IdentityComponent.html","title":"component - IdentityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IdentityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/identity.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-identity\n            \n\n            \n                styleUrls\n                ./identity.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./identity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/identity.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/identity.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-identity',\n  templateUrl: './identity.component.html',\n  styleUrls: ['./identity.component.scss']\n})\nexport class IdentityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n       Login to continue\n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./identity.component.scss\n                \n                @import \"themes.scss\";\n\n.container {\n  margin: 5% auto 0px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 Login to continue                                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'AppointmentsComponent', 'selector': 'app-appointments'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IdentityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IdentityGuard.html":{"url":"guards/IdentityGuard.html","title":"guard - IdentityGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    IdentityGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/@common/services/identity.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/identity.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable                                                       } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router'\nimport { IdentityService                                                  } from '@services/identity.service'\n\n@Injectable()\nexport class IdentityGuard implements CanActivate {\n  // ======================================= //\n  constructor(private identity: IdentityService, private router: Router) { }\n  // ======================================= //\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!this.identity.authState) {\n      this.router.navigate(['account']);\n      return false;\n    }\n    return true;\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentityModule.html":{"url":"modules/IdentityModule.html","title":"module - IdentityModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentityModule\n\n\n\ncluster_IdentityModule_imports\n\n\n\ncluster_IdentityModule_declarations\n\n\n\ncluster_IdentityModule_providers\n\n\n\n\nIdentityComponent\n\nIdentityComponent\n\n\n\nIdentityModule\n\nIdentityModule\n\nIdentityModule -->\n\nIdentityComponent->IdentityModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nIdentityModule -->\n\nLoginComponent->IdentityModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nIdentityModule -->\n\nRegisterComponent->IdentityModule\n\n\n\n\n\nIdentityRoutingModule\n\nIdentityRoutingModule\n\nIdentityModule -->\n\nIdentityRoutingModule->IdentityModule\n\n\n\n\n\nUserFormService\n\nUserFormService\n\nIdentityModule -->\n\nUserFormService->IdentityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/identity/identity.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IdentityComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            UserFormService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentityRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule          } from '@angular/common'\nimport { NgModule              } from '@angular/core'\nimport { ReactiveFormsModule   } from '@angular/forms'\nimport { IdentityRoutingModule } from '@identity/identity.routing.module'\nimport { LoginComponent        } from '@identity/login/login.component'\nimport { RegisterComponent     } from '@identity/register/register.component'\nimport { UserFormService       } from '@services/user-form.service'\nimport { IdentityComponent     } from './identity.component'\n\n@NgModule({\n  imports     : [CommonModule     , ReactiveFormsModule, IdentityRoutingModule],\n  declarations: [IdentityComponent, LoginComponent, RegisterComponent         ],\n  providers   : [UserFormService                                              ]\n})\nexport class IdentityModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IdentityResolver.html":{"url":"guards/IdentityResolver.html","title":"guard - IdentityResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    IdentityResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/@common/services/identity.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/identity.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.resolver.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable                              } from 'rxjs'\nimport { Injectable                              } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router'\nimport { IdentityService                         } from '@services/identity.service'\n\n@Injectable()\nexport class IdentityResolver implements Resolve {\n  // ======================================= //\n  constructor(private identity: IdentityService, private router: Router) { }\n  // ======================================= //\n\n  resolve(route: ActivatedRouteSnapshot): Observable | Promise | any {\n\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentityRoutingModule.html":{"url":"modules/IdentityRoutingModule.html","title":"module - IdentityRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentityRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/identity/identity.routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                  } from '@angular/core'\nimport { RouterModule     , Routes } from '@angular/router'\nimport { IdentityComponent         } from '@identity/identity.component'         ;\nimport { LoginComponent            } from '@identity/login/login.component'\nimport { RegisterComponent         } from '@identity/register/register.component'\n\nconst routes: Routes = [\n  // ======================================= //\n  { path: ''        , component:         IdentityComponent          },\n  { path: 'login'   , component:         LoginComponent             },\n  { path: 'register', component:         RegisterComponent          },\n  { path: '**'      , pathMatch: 'full', redirectTo       : 'login' }\n];\n// ======================================= //\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IdentityRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentityService.html":{"url":"injectables/IdentityService.html","title":"injectable - IdentityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IdentityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/identity.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authState\n                            \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Public\n                                identity\n                            \n                            \n                                    Public\n                                identity$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkIdentity\n                            \n                            \n                                    Public\n                                setIdentity\n                            \n                            \n                                    Public\n                                userLogin\n                            \n                            \n                                    Public\n                                userLogout\n                            \n                            \n                                    Public\n                                userRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: MessageService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/identity.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            checkIdentity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIdentity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setIdentity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setIdentity(identity?: Identity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identity\n                                    \n                                                Identity\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogin(account: Account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                Account\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userRegister(account: Account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/identity.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                Account\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/identity.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:5000'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/identity.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Identity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/identity.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identity$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/identity.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject        } from 'rxjs'\nimport { HttpClient     } from '@angular/common/http'\nimport { Injectable     } from '@angular/core'\nimport { Account        } from '@models/account.model'\nimport { Identity       } from '@models/identity.model'\nimport { MessageService } from '@services/message.service'\nimport { MessageType    } from '@enums/message.enum'\n\n@Injectable()\nexport class IdentityService {\n  private readonly baseUrl: string = 'http://localhost:5000';\n  // ======================================= //\n  public authState: boolean = false                            ;\n  public identity : Identity                                   ;\n  public identity$: Subject = new Subject();\n  // ======================================= //\n  constructor(private message: MessageService, private http: HttpClient) {\n    this.identity$.subscribe({\n      next: result => this.identity = result\n    });\n    this.checkIdentity();\n  }\n  // ======================================= //\n  public userLogin(account: Account): Promise {\n    return this.http\n      .post(`${this.baseUrl}/auth`, account)\n      .toPromise()\n      .then((result) => {\n        this.message.show('Success!', `Welcome ${this.identity.userName}`, MessageType.Success);\n        return result;\n      })\n      .catch((error) => { this.message.show('Login Failure!', 'Please try again', MessageType.Error); throw error });\n  }\n  public userRegister(account: Account): Promise {\n    return this.http\n      .put(`${this.baseUrl}/auth`, account)\n      .toPromise()\n      .then((result) => {\n        this.message.show('Success!', `Account successfully created`, MessageType.Success)\n        return result;\n      })\n      .catch((error) => { this.message.show('Registration Failed!', '', MessageType.Error); throw error });\n  }\n  public userLogout(): Promise {\n    return Promise.resolve()\n      .then(() => this.message.show('Signing Out', `Goodbye ${this.identity.userName}`, MessageType.Information))\n      .then(() => this.setIdentity());\n  }\n  public async checkIdentity() {\n    const storage: Identity = JSON.parse(localStorage.getItem('identity')) as Identity;\n    this.authState = storage != null;\n    if (storage && !this.identity) {\n      this.identity$.next(storage);\n    }\n  }\n  public setIdentity(identity?: Identity) {\n    identity\n      ? localStorage.setItem('identity', JSON.stringify(identity))\n      : localStorage.removeItem('identity');\n    this.authState = identity != null;\n    this.identity$.next(identity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerModel.html":{"url":"classes/LoggerModel.html","title":"class - LoggerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/logger.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                caller\n                            \n                            \n                                    Public\n                                class\n                            \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                scope\n                            \n                            \n                                    Public\n                                source\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ILoggerModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/helpers/logger.model.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ILoggerModel\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            caller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogScope\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/logger.model.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LogScope } from '@enums/log.scope.enum'\nimport { Guid } from 'guid-ts';\n\nexport interface ILoggerModel {\n  message   ?: string  ;\n  descriptor?: any     ;\n  name      ?: any     ;\n  scope     ?: LogScope;\n  target    ?: any     ;\n  items?: { [item: string]: any };\n}\nexport class LoggerModel {\n  // ======================================= //\n  public uid        : string  ;\n  public createdAt  : number  ;\n  public scope      : LogScope;\n  public caller     : string  ;\n  public description: string  ;\n  public class      : string  ;\n  public source     : string  ;\n  public items: { [item: string]: any };\n  // ======================================= //\n  constructor(args?: ILoggerModel) {\n    this.createdAt = new Date().valueOf();\n    this.uid = Guid.newGuid().toString().split('-')[0];\n    // ======================================= //\n    Object.keys(args)\n      .forEach(key => this[key] = args[key] );\n  }\n  // ======================================= //\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logScopes\n                            \n                            \n                                    Public\n                                logScopes$\n                            \n                            \n                                    Private\n                                stackTrace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Private\n                                logToConsole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/logger.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(scope: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scope\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(args?: ILoggerModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ILoggerModel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            logToConsole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logToConsole()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/logger.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logScopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/logger.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logScopes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue>\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/logger.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stackTrace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/logger.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { Injectable } from '@angular/core'\nimport { AppSettings } from '@helpers/app.settings'\nimport { IKeyValue } from '@helpers/key.value'\nimport { ILoggerModel, LoggerModel } from '@helpers/logger.model'\n\n@Injectable()\nexport class LoggerService {\n  private stackTrace: any = {};\n  // ======================================= //\n  public logScopes: IKeyValue = {};\n  public logScopes$: IKeyValue> = {};\n  // ======================================= //\n  constructor(private config: AppSettings) { }\n  // ======================================= //\n  public log(args?: ILoggerModel) {\n    let logItems = this.logScopes[args?.scope]\n      ? this.logScopes[args?.scope]\n      : new Array();\n\n    if (!this.logScopes$[args?.scope]) {\n      this.logScopes$[args?.scope] = new Subject();\n      this.initialize(args.scope);\n    }\n    logItems.unshift(new LoggerModel(args));\n    this.logScopes$[args?.scope].next(logItems);\n  }\n\n  private initialize(scope: string) {\n    if (!this.config.environment.production) {\n      this.logScopes$[scope]\n        .subscribe({\n          next: (value: LoggerModel[]) => {\n            this.logScopes[scope] = value;\n            this.logToConsole();\n          }\n        });\n    }\n  }\n  private logToConsole() {\n    // console.clear();\n    // Object.keys(this.logScopes).forEach(key => {\n    //   console.groupCollapsed(`%c \\t\\t${key} Scope => ${this.logScopes[key].length \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getErrors\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, formService: UserFormService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        UserFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getErrors(control: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/login/login.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/login/login.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/login/login.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/identity/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpErrorResponse         } from '@angular/common/http'\nimport { Component        , OnInit } from '@angular/core'\nimport { FormGroup                 } from '@angular/forms'\nimport { Router                    } from '@angular/router'\nimport { Account                   } from '@models/account.model'\nimport { IdentityService           } from '@services/identity.service'\nimport { UserFormService           } from '@services/user-form.service'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public formGroup: FormGroup;\n  // ======================================= //\n  constructor(private identity: IdentityService, private formService: UserFormService, private router: Router) { }\n  ngOnInit() { this.formGroup = this.formService.generateLoginForm(); }\n  // ======================================= //\n  public login() {\n    const value = this.formGroup.value;\n    this.identity.userLogin(new Account(value.username, value.password, value.email))\n      .then(result => {\n        this.formGroup.reset();\n        this.router.navigateByUrl('schedule');\n      })\n      .catch((response: HttpErrorResponse) => {\n        if (response.status == 401) {\n          Object.keys(response.error)\n            .forEach(field => {\n              if (this.formGroup.controls[field.toLowerCase()]) {\n                this.formGroup.controls[field.toLowerCase()]?.setErrors(\n                  field.toLowerCase().match('username')\n                    ? { username: response.error[field]['errors'][0]['errorMessage'] }\n                    : { password: response.error[field]['errors'][0]['errorMessage'] });\n              }\n              else this.formGroup.setErrors({ 'credentials': response.error })\n            });\n        }\n        else if (response.status == 400) {\n          Object.keys(response.error.errors)\n            .forEach(field => {\n              this.formGroup.controls[field.toLowerCase()]?.setErrors(field.toLowerCase().match('username')\n                ? { username: response.error.errors[field] }\n                : { password: response.error.errors[field] });\n            });\n        }\n      });\n  }\n  public getErrors(control: string) {\n    return Object.keys(this.formGroup.get(control).errors);\n  }\n}\n    \n\n    \n        \n  \n  \n    \n    Existing User Login\n  \n  \n    \n      \n        \n\n      \n    \n    \n      \n        Username:\n        \n          \n          \n        \n        \n      \n    \n    \n      \n        Password:\n        \n          \n          \n        \n      \n    \n    \n  \n\n  \n    \n       Login\n  \n\n\n\n  \n  \n     Invalid {{field | titlecase}}\n    \n      \n      \n      {{field | titlecase}} is required\n      {{this.formGroup.get(field).errors[message]}}\n    \n    \n    \n       Login Failed!\n      {{this.formGroup.errors[field]}}\n    \n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Existing User Login                                                  Username:                                                                        Password:                                                                 Login           Invalid {{field | titlecase}}                      {{field | titlecase}} is required      {{this.formGroup.get(field).errors[message]}}                   Login Failed!      {{this.formGroup.errors[field]}}      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'AppointmentsComponent', 'selector': 'app-appointments'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/message.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/message.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(title: string, message: string, type: MessageType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/message.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                MessageType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        MessageType.Information\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ToastrService } from 'ngx-toastr'\nimport { Injectable    } from '@angular/core'\nimport { MessageType   } from '@enums/message.enum'\n\n@Injectable()\nexport class MessageService {\n  // ======================================= //\n  constructor(private service: ToastrService) {\n    this.service.toastrConfig.autoDismiss       = true                ;\n    this.service.toastrConfig.closeButton       = true                ;\n    this.service.toastrConfig.easing            = 'ease-in-out'       ;\n    this.service.toastrConfig.newestOnTop       = false               ;\n    this.service.toastrConfig.progressBar       = true                ;\n    this.service.toastrConfig.progressAnimation = 'decreasing'        ;\n    this.service.toastrConfig.maxOpened         = 2                   ;\n    this.service.toastrConfig.tapToDismiss      = true                ;\n    this.service.toastrConfig.preventDuplicates = false               ;\n    this.service.toastrConfig.timeOut           = 1500                ;\n    this.service.toastrConfig.extendedTimeOut   = 1000                ;\n    this.service.toastrConfig.positionClass     = 'toast-bottom-right';\n  }\n  // ======================================= //\n  public show(title: string, message: string, type: MessageType = MessageType.Information) {\n    switch (type) {\n      case MessageType.Error:\n        this.service.error(message, title);\n        break;\n        case MessageType.Information:\n        this.service.info(message, title);\n        break;\n        case MessageType.Success:\n        this.service.success(message, title);\n        break;\n        case MessageType.Warning:\n        this.service.warning(message, title);\n        break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModelBase.html":{"url":"classes/ModelBase.html","title":"class - ModelBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/base.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IModelBase)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/base.model.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IModelBase\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/base.model.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IModelBase {\n  id         ?: number ;\n  name       ?: string ;\n  description?: string ;\n  isActive   ?: boolean;\n  isDefault  ?: boolean;\n}\nexport class ModelBase> {\n  // ======================================= //\n  public id         : number ;\n  public created    : number ;\n  public description: string ;\n  public isActive   : boolean;\n  public isDefault  : boolean;\n  public name       : string ;\n  // ======================================= //\n  constructor(args?: IModelBase) {\n    args ?? Object.keys(this)\n      .forEach(key => this[key] = this[key] ?? args[key]);\n  }\n  // ======================================= //\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/navigation/navigation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                account\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/navigation/navigation.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/navigation/navigation.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/navigation/navigation.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Account\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/navigation/navigation.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component      , OnInit } from '@angular/core'\nimport { Router                  } from '@angular/router'           ;\nimport { Account                 } from '@models/account.model'\nimport { IdentityService         } from '@services/identity.service'\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n  public account: Account;\n  constructor(private identity: IdentityService, private router: Router) {\n    this.account = this.identity.identity;\n    this.identity.identity$.subscribe({\n      next: (result: Account) => this.account = result\n    });\n  }\n\n  ngOnInit() { }\n\n  public logout() {\n    this.identity.userLogout();\n    this.router.navigate(['account']);\n  }\n}\n\n    \n\n    \n        \n  \n     LePooch Shop\n  \n  \n    \n       Api Docs\n    \n    \n      \n        \n           {{this.account?.userName}} \n          \n        \n        \n           Logout\n           Login\n        \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                @import \"themes.scss\";\n\n.navigation {\n  background: $theme;\n  height: 50px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px 30px;\n  color: white;\n\n  .nav-brand {\n    font-size: 20px;\n  }\n  .nav-actions {\n    flex: auto;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    .nav-start {\n      display: flex;\n      .nav-action {\n        margin-left: 20px;\n      }\n    }\n    .nav-end {\n      display: flex;\n    }\n  }\n  .fa {\n    font-size: 18px;\n  }\n  .nav-action {\n    color: white;\n    display: flex;\n    align-items: center;\n  }\n  .nav-action:hover {\n    background: lighten($color: $theme, $amount: 10%);\n  }\n}\n.btn-text {\n  margin-left: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       LePooch Shop               Api Docs                                 {{this.account?.userName}}                                      Logout           Login                          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'AppointmentsComponent', 'selector': 'app-appointments'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkService.html":{"url":"injectables/NetworkService.html","title":"injectable - NetworkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NetworkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/network.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/network.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class NetworkService {\n  // ======================================= //\n  constructor(private http: HttpClient) { }\n  // ======================================= //\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/profile.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ModelBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                pooch\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/profile.model.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/profile.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/profile.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/profile.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pooch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/profile.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelBase } from '@models/base.model';\n\nexport class Profile extends ModelBase {\n  public email    : string;\n  public firstName: string;\n  public lastName : string;\n  public pooch    : string;\n  // ======================================= //\n  constructor() { super(); }\n  // ======================================= //\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, formService: UserFormService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/register/register.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        UserFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getErrors(control: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/register/register.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/register/register.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/register/register.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/identity/register/register.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http'\nimport { Component, OnInit } from '@angular/core'\nimport { FormGroup } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { Account } from '@models/account.model'\nimport { IdentityService } from '@services/identity.service'\nimport { UserFormService } from '@services/user-form.service'\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  public formGroup: FormGroup;\n  // ======================================= //\n  constructor(private identity: IdentityService, private formService: UserFormService, private router: Router) { }\n  ngOnInit() { this.formGroup = this.formService.generateRegisterForm(); }\n  // ======================================= //\n  public register() {\n    this.identity.userRegister(new Account(this.formGroup.value.username, this.formGroup.value.password, this.formGroup.value.email))\n      .then(result => {\n        this.formGroup.reset();\n        this.router.navigateByUrl('schedule');\n      })\n      .catch((response: HttpErrorResponse) => {\n        if (response.status == 401) {\n          Object.keys(response.error)\n            .forEach(field => {\n              if (this.formGroup.controls[field.toLowerCase()]) {\n                this.formGroup.controls[field.toLowerCase()]?.setErrors(\n                  field.toLowerCase().match('username')\n                    ? { username: response.error[field]['errors'][0]['errorMessage'] }\n                    : { password: response.error[field]['errors'][0]['errorMessage'] });\n              }\n              else this.formGroup.setErrors({ 'credentials': response.error })\n            });\n        }\n        else if (response.status == 400) {\n          if (response.error.errors) {\n            Object.keys(response.error.errors)\n              .forEach(field => {\n                switch (field.toLowerCase()) {\n                  case 'username':\n                    this.formGroup\n                      .controls[field.toLowerCase()]\n                      .setErrors({ 'username': response.error.errors[field][0] });\n                    break;\n                  case 'password':\n                    this.formGroup\n                      .controls[field.toLowerCase()]\n                      .setErrors({ 'password': response.error.errors[field][0] });\n                    break;\n                  case 'email':\n                    this.formGroup\n                      .controls[field.toLowerCase()]\n                      .setErrors({ 'email': response.error.errors[field][0] });\n                    break;\n                }\n              });\n          }\n          else {\n            Object.keys(response.error).forEach(field => {\n              switch (field.toLowerCase()) {\n                case 'username':\n                  this.formGroup\n                    .controls[field.toLowerCase()]\n                    .setErrors({ 'username': response.error[field][0] });\n                  break;\n                case 'password':\n                  this.formGroup\n                    .controls[field.toLowerCase()]\n                    .setErrors({ 'password': response.error[field][0] });\n                  break;\n                case 'email':\n                  this.formGroup\n                    .controls[field.toLowerCase()]\n                    .setErrors({ 'email': response.error[field][0] });\n                  break;\n              }\n            });\n          }\n        }\n      });\n  }\n  public getErrors(control: string) {\n    return Object.keys(this.formGroup.get(control).errors);\n  }\n}\n    \n\n    \n        \n  \n  \n    \n    Register a New Account\n  \n  \n\n    \n      \n        Username:\n        \n          \n          \n        \n      \n      \n        Password:\n        \n          \n          \n        \n      \n    \n    \n      \n        \n        \n      \n    \n\n    \n      \n        Email:\n        \n          \n          \n        \n        \n      \n    \n  \n  \n    \n       Register\n    \n       Clear\n  \n\n\n\n  \n     Invalid {{field | titlecase}}\n    \n      \n      \n      {{field | titlecase}} is required\n      {{this.formGroup.get(field).errors[message]}}\n    \n  \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Register a New Account                      Username:                                                        Password:                                                                                                    Email:                                                                     Register           Clear         Invalid {{field | titlecase}}                      {{field | titlecase}} is required      {{this.formGroup.get(field).errors[message]}}      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'AppointmentsComponent', 'selector': 'app-appointments'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/request.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings, identity: IdentityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/request.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/request.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable                                                 } from 'rxjs'\nimport { HttpEvent      , HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable                                                 } from '@angular/core'\nimport { AppSettings                                                } from '@helpers/app.settings'\nimport { IdentityService                                            } from '@services/identity.service'\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  // ======================================= //\n  constructor(private config: AppSettings, private identity: IdentityService) { }\n  // ======================================= //\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    console.log('Authorization', `Bearer ${this.identity.identity?.token}`);\n    const authReq = req.clone({\n      setHeaders: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.identity.identity?.token}`\n      }\n    });\n    return next.handle(authReq);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScheduleComponent.html":{"url":"components/ScheduleComponent.html","title":"component - ScheduleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScheduleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/schedule/schedule.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-schedule\n            \n\n            \n                styleUrls\n                ./schedule.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./schedule.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/schedule/schedule.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/schedule/schedule.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.scss']\n})\nexport class ScheduleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  schedule works!\n\n\n    \n\n    \n                \n                    ./schedule.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  schedule works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'AppointmentsComponent', 'selector': 'app-appointments'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScheduleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScheduleModule.html":{"url":"modules/ScheduleModule.html","title":"module - ScheduleModule","body":"\n                   \n\n\n\n\n    Modules\n    ScheduleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScheduleModule\n\n\n\ncluster_ScheduleModule_imports\n\n\n\ncluster_ScheduleModule_declarations\n\n\n\n\nAppointmentsComponent\n\nAppointmentsComponent\n\n\n\nScheduleModule\n\nScheduleModule\n\nScheduleModule -->\n\nAppointmentsComponent->ScheduleModule\n\n\n\n\n\nScheduleComponent\n\nScheduleComponent\n\nScheduleModule -->\n\nScheduleComponent->ScheduleModule\n\n\n\n\n\nScheduleRoutingModule\n\nScheduleRoutingModule\n\nScheduleModule -->\n\nScheduleRoutingModule->ScheduleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/schedule/schedule.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppointmentsComponent\n                        \n                        \n                            ScheduleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ScheduleRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule              } from '@angular/core'                                 ;\nimport { CommonModule          } from '@angular/common'                               ;\nimport { AppointmentsComponent } from '@schedule/appointments/appointments.component' ;\nimport { ScheduleRoutingModule } from '@schedule/schedule.routing.module'             ;\nimport { ScheduleComponent     } from '@schedule/schedule.component'                  ;\n\n@NgModule({\n  imports      : [CommonModule      , ScheduleRoutingModule],\n  declarations : [ScheduleComponent , AppointmentsComponent]\n})\nexport class ScheduleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScheduleRoutingModule.html":{"url":"modules/ScheduleRoutingModule.html","title":"module - ScheduleRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ScheduleRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/schedule/schedule.routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                  } from '@angular/core'\nimport { RouterModule     , Routes } from '@angular/router'\nimport { ScheduleComponent         } from '@schedule/schedule.component'\n\nconst routes: Routes = [\n  // ======================================= //\n  { path: '', component: ScheduleComponent },\n];\n// ======================================= //\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ScheduleRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAboutComponent->SharedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nSharedModule -->\n\nHomeComponent->SharedModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nAboutComponent \n\nAboutComponent \n\nAboutComponent  -->\n\nSharedModule->AboutComponent \n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nSharedModule->HomeComponent \n\n\n\n\n\nIdentityModule \n\nIdentityModule \n\nIdentityModule  -->\n\nSharedModule->IdentityModule \n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nIdentityModule\n\nIdentityModule\n\nSharedModule -->\n\nIdentityModule->SharedModule\n\n\n\n\n\nErrorService\n\nErrorService\n\nSharedModule -->\n\nErrorService->SharedModule\n\n\n\n\n\nIdentityService\n\nIdentityService\n\nSharedModule -->\n\nIdentityService->SharedModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nSharedModule -->\n\nLoggerService->SharedModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nSharedModule -->\n\nMessageService->SharedModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nSharedModule -->\n\nStorageService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/@common/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            NavigationComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorService\n                        \n                        \n                            IdentityService\n                        \n                        \n                            LoggerService\n                        \n                        \n                            MessageService\n                        \n                        \n                            StorageService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            IdentityModule\n                        \n                        \n                            NavigationComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: AppSettings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/shared.module.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                AppSettings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ToastrModule                              } from 'ngx-toastr'\nimport { CommonModule                              } from '@angular/common'\nimport { HTTP_INTERCEPTORS      , HttpClientModule } from '@angular/common/http'\nimport { ModuleWithProviders    , NgModule         } from '@angular/core'\nimport { BrowserAnimationsModule                   } from '@angular/platform-browser/animations'\nimport { Router                 , RouterModule     } from '@angular/router'\nimport { NavigationComponent                       } from '@common/navigation/navigation.component'\nimport { LogScope                                  } from '@enums/log.scope.enum'\nimport { AppSettings                               } from '@helpers/app.settings'\nimport { IdentityModule                            } from '@identity/identity.module'\nimport { AboutComponent                            } from '@sections/about/about.component'\nimport { HomeComponent                             } from '@sections/home/home.component'\nimport { ErrorService                              } from '@services/error.service'\nimport { IdentityGuard                             } from '@services/identity.guard'\nimport { IdentityService                           } from '@services/identity.service'\nimport { LoggerService                             } from '@services/logger.service'\nimport { MessageService                            } from '@services/message.service'\nimport { RequestInterceptor                        } from '@services/request.interceptor'\nimport { StorageService                            } from '@services/storage.service'\nimport { TokenInterceptor                          } from '@services/token.interceptor'\n\n// ======================================= //\nconst components: any[] = [AboutComponent, HomeComponent          , NavigationComponent                                                                   ];\nconst modules   : any[] = [CommonModule  , BrowserAnimationsModule, HttpClientModule   , IdentityModule, ToastrModule.forRoot(), RouterModule.forChild([])];\nconst services  : any[] = [MessageService, IdentityService        , IdentityGuard      , ErrorService, LoggerService, StorageService                      ];\n// ======================================= //\n@NgModule({\n  declarations:  components,\n  imports     :  modules   ,\n  providers   :  services  ,\n  exports     : [modules   , components]\n})\nexport class SharedModule {\n  constructor(private logger: LoggerService, private router: Router) {\n    this.router.events.subscribe({\n      next: (value) => this.logger.log({ scope: LogScope.Router, items: { value: value } })\n    });\n  }\n\n  static forRoot(config: AppSettings): ModuleWithProviders {\n    return {\n      ngModule: SharedModule,\n      providers: [\n        { provide: AppSettings, useValue: config },\n        services,\n        { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor  , multi: true }\n      ]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                collection\n                            \n                            \n                                    Private\n                                    Readonly\n                                collection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCollection$\n                            \n                            \n                                    Public\n                                getStorage\n                            \n                            \n                                    Private\n                                setStorage\n                            \n                            \n                                    Public\n                                updateStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCollection$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollection$(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/storage.service.ts:41\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/storage.service.ts:15\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(key: string, values?: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/storage.service.ts:47\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    values\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStorage(key: string, values: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/storage.service.ts:27\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    values\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/storage.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            collection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue>\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/storage.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject     } from 'rxjs'\nimport { Injectable  } from '@angular/core'\nimport { AppSettings } from '@helpers/app.settings'\nimport { IKeyValue   } from '@helpers/key.value'\nimport { ModelBase   } from '@models/base.model'\n\n@Injectable()\nexport class StorageService {\n  private readonly collection: IKeyValue = {};\n  private readonly collection$: IKeyValue> = {};\n\n  // ======================================= //\n  constructor(private config: AppSettings) { }\n  // ======================================= //\n  public getStorage>(key: string): Promise {\n    return Promise.resolve().then(async () => {\n\n      const values: IKeyValue = JSON.parse(localStorage.getItem(key));\n      this.collection[key] = values\n        ? Object.keys(values)\n          .map(item => item[key])\n        : new Array();\n\n      return this.collection[key].slice() as T[];\n    });\n  }\n  public updateStorage>(key: string, values: T[]): Promise {\n    return Promise.resolve().then(async () => {\n\n      const storage: T[] = await this.getStorage(key);\n      values.forEach(current => {\n        const index = storage.findIndex(item => item?.id == current?.id || item?.name == current.name);\n        index > -1 ? storage.splice(index, 1, current) : storage.push(current);\n      });\n      this.getCollection$(key)\n        .next(await this.setStorage(key, storage.filter(value => value)));\n\n      return storage.filter(value => value) as T[];\n    });\n  }\n  public getCollection$>(key: string): Subject {\n    if (!this.collection$[key])\n      this.collection$[key] = new Subject();\n\n    return this.collection$[key] as Subject;\n  }\n  private setStorage>(key: string, values?: T[]): Promise {\n    return Promise.resolve().then(async () => {\n\n      const storage: IKeyValue = {};\n      values.forEach(item => storage[item.name] = item);\n      localStorage.setItem(key, JSON.stringify(storage));\n\n      return await this.getStorage(key) as T[];\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/token.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings, identity: IdentityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/token.interceptor.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/token.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable                                                               } from 'rxjs'\nimport { tap                                                                      } from 'rxjs/operators'\nimport { HttpEvent      , HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable                                                               } from '@angular/core'\nimport { AppSettings                                                              } from '@helpers/app.settings'\nimport { Identity                                                                 } from '@models/identity.model'\nimport { IdentityService                                                          } from '@services/identity.service'\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  // ======================================= //\n  constructor(private config: AppSettings, private identity: IdentityService) { }\n  // ======================================= //\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const started = Date.now();\n    return next.handle(req).pipe(\n      tap(event => {\n        if (event instanceof HttpResponse) {\n          if (event.headers.has('Authorization')) {\n            const token = event.headers.get('Authorization').replace('Bearer ', '');\n            const user: any = event.body;\n            this.identity.setIdentity(new Identity(user.userName, user.email, token));\n          }\n        }\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFormService.html":{"url":"injectables/UserFormService.html","title":"injectable - UserFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/user-form.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateLoginForm\n                            \n                            \n                                    Public\n                                generateRegisterForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/user-form.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateLoginForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateLoginForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/user-form.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateRegisterForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRegisterForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/user-form.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Injectable()\nexport class UserFormService {\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n  public generateLoginForm() {\n    return new FormGroup({\n      'username': new FormControl('', Validators.required),\n      'password': new FormControl('', Validators.required)\n    });\n  }\n  public generateRegisterForm() {\n    return new FormGroup({\n      'username': new FormControl('',  Validators.required                   ),\n      'password': new FormControl('',  Validators.required                   ),\n      'email'   : new FormControl('', [Validators.required, Validators.email]),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/@common/helpers/app.settings.ts\n            \n            class\n            AppSettings\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/endpoint.interface.ts\n            \n            interface\n            IEndpoint\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/key.value.ts\n            \n            interface\n            IKeyValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/logger.model.ts\n            \n            class\n            LoggerModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/logger.model.ts\n            \n            interface\n            ILoggerModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/@common/models/account.model.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/@common/models/base.model.ts\n            \n            class\n            ModelBase\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/@common/models/base.model.ts\n            \n            interface\n            IModelBase\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/@common/models/identity.model.ts\n            \n            class\n            Identity\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/@common/models/profile.model.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/@common/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/@common/sections/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/sections/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/@common/services/identity.guard.ts\n            \n            guard\n            IdentityGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/identity.resolver.ts\n            \n            guard\n            IdentityResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/identity.service.ts\n            \n            injectable\n            IdentityService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/@common/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/@common/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/network.service.ts\n            \n            injectable\n            NetworkService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/@common/services/request.interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/@common/services/token.interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/services/user-form.service.ts\n            \n            injectable\n            UserFormService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/@common/shared.module.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/shared.module.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/shared.module.ts\n            \n            variable\n            services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/appointment/appointment.component.ts\n            \n            component\n            AppointmentComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/identity.component.ts\n            \n            component\n            IdentityComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/identity/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/schedule/appointments/appointments.component.ts\n            \n            component\n            AppointmentsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/schedule/schedule.component.ts\n            \n            component\n            ScheduleComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            endpoints\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            endpoints\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            bootstrap : ^4.5.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.2.1\n        \n            guid-ts : ^1.1.0\n        \n            jquery : ^3.5.1\n        \n            ngx-toastr : ^13.2.0\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Context   (src/.../context.enum.ts)\n                        \n                        \n                            LogLevel   (src/.../log.level.enum.ts)\n                        \n                        \n                            LogScope   (src/.../log.scope.enum.ts)\n                        \n                        \n                            MessageType   (src/.../message.enum.ts)\n                        \n                        \n                            Provider   (src/.../providers.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/@common/enums/context.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Context\n                    \n                \n                        \n                            \n                                 Account\n                            \n                        \n                        \n                            \n                                Value : Account\n                            \n                        \n                        \n                            \n                                 Identity\n                            \n                        \n                        \n                            \n                                Value : Identity\n                            \n                        \n            \n        \n\n    src/app/@common/enums/log.level.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : Debug\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : Error\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                Value : Info\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : Warn\n                            \n                        \n            \n        \n\n    src/app/@common/enums/log.scope.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LogScope\n                    \n                \n                        \n                            \n                                 Authentication\n                            \n                        \n                        \n                            \n                                Value : Authentication\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : Error\n                            \n                        \n                        \n                            \n                                 Lifecycle\n                            \n                        \n                        \n                            \n                                Value : Lifecycle\n                            \n                        \n                        \n                            \n                                 Network\n                            \n                        \n                        \n                            \n                                Value : Network\n                            \n                        \n                        \n                            \n                                 Router\n                            \n                        \n                        \n                            \n                                Value : Router\n                            \n                        \n                        \n                            \n                                 Storage\n                            \n                        \n                        \n                            \n                                Value : Storage\n                            \n                        \n            \n        \n\n    src/app/@common/enums/message.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageType\n                    \n                \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                 Information\n                            \n                        \n                        \n                            \n                                 Success\n                            \n                        \n                        \n                            \n                                 Warning\n                            \n                        \n            \n        \n\n    src/app/@common/enums/providers.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Provider\n                    \n                \n                        \n                            \n                                 Server\n                            \n                        \n                        \n                            \n                                Value : Server\n                            \n                        \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : Other\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClient\nThis project was generated with Angular CLI version 11.0.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppointmentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentityRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScheduleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScheduleRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppointmentModule\n\n\n\ncluster_AppointmentModule_declarations\n\n\n\ncluster_IdentityModule\n\n\n\ncluster_IdentityModule_declarations\n\n\n\ncluster_IdentityModule_imports\n\n\n\ncluster_IdentityModule_providers\n\n\n\ncluster_ScheduleModule\n\n\n\ncluster_ScheduleModule_declarations\n\n\n\ncluster_ScheduleModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAboutComponent \n\nAboutComponent \n\nAboutComponent  -->\n\nSharedModule->AboutComponent \n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nSharedModule->HomeComponent \n\n\n\n\n\nIdentityModule \n\nIdentityModule \n\nIdentityModule  -->\n\nSharedModule->IdentityModule \n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nAppointmentComponent\n\nAppointmentComponent\n\n\n\nAppointmentModule\n\nAppointmentModule\n\nAppointmentModule -->\n\nAppointmentComponent->AppointmentModule\n\n\n\n\n\nIdentityComponent\n\nIdentityComponent\n\n\n\nIdentityModule\n\nIdentityModule\n\nIdentityModule -->\n\nIdentityComponent->IdentityModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nIdentityModule -->\n\nLoginComponent->IdentityModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nIdentityModule -->\n\nRegisterComponent->IdentityModule\n\n\n\nSharedModule -->\n\nIdentityModule->SharedModule\n\n\n\n\n\nIdentityRoutingModule\n\nIdentityRoutingModule\n\nIdentityModule -->\n\nIdentityRoutingModule->IdentityModule\n\n\n\n\n\nUserFormService\n\nUserFormService\n\nIdentityModule -->\n\nUserFormService->IdentityModule\n\n\n\n\n\nAppointmentsComponent\n\nAppointmentsComponent\n\n\n\nScheduleModule\n\nScheduleModule\n\nScheduleModule -->\n\nAppointmentsComponent->ScheduleModule\n\n\n\n\n\nScheduleComponent\n\nScheduleComponent\n\nScheduleModule -->\n\nScheduleComponent->ScheduleModule\n\n\n\n\n\nScheduleRoutingModule\n\nScheduleRoutingModule\n\nScheduleModule -->\n\nScheduleRoutingModule->ScheduleModule\n\n\n\n\n\nAboutComponent\n\nAboutComponent\n\nSharedModule -->\n\nAboutComponent->SharedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nSharedModule -->\n\nHomeComponent->SharedModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nErrorService\n\nErrorService\n\nSharedModule -->\n\nErrorService->SharedModule\n\n\n\n\n\nIdentityService\n\nIdentityService\n\nSharedModule -->\n\nIdentityService->SharedModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nSharedModule -->\n\nLoggerService->SharedModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nSharedModule -->\n\nMessageService->SharedModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nSharedModule -->\n\nStorageService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Endpoints   (src/.../endpoint.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/@common/helpers/endpoint.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Endpoints\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            components   (src/.../shared.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            endpoints   (src/.../environment.prod.ts)\n                        \n                        \n                            endpoints   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            modules   (src/.../shared.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            services   (src/.../shared.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/@common/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [AboutComponent, HomeComponent          , NavigationComponent                                                                   ]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [CommonModule  , BrowserAnimationsModule, HttpClientModule   , IdentityModule, ToastrModule.forRoot(), RouterModule.forChild([])]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [MessageService, IdentityService        , IdentityGuard      , ErrorService, LoggerService, StorageService                      ]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Endpoints\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [Provider.Server]: {\n\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  endpoints: endpoints\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Endpoints\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [Provider.Server]: {\n\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  endpoints: endpoints\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
