var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.708,1,1.133]],["body/components/AboutComponent.html",[0,1.096,1,1.887,2,1.631,3,0.202,4,0.202,5,1.517,6,1.517,7,1.517,8,1.517,9,0.202,10,2.97,11,1.73,12,2.529,13,1.517,14,3.004,15,2.654,16,2.078,17,5.448,18,2.078,19,4.777,20,0.472,21,1.293,22,2.72,23,1.03,24,0.743,25,3.487,26,3.487,27,0.891,28,0.022,29,1.263,30,0.343,31,0.506,32,0.229,33,0.102,34,2.975,35,1.06,36,2.078,37,2.078,38,1.517,39,2.55,40,1.517,41,0.694,42,1.517,43,1.191,44,1.517,45,1.191,46,1.517,47,1.123,48,1.517,49,1.06,50,1.517,51,1.191,52,1.517,53,1.123,54,1.517,55,1.123,56,1.517,57,1.123,58,1.517,59,1.191,60,1.425,61,1.517,62,1.517,63,0.011,64,0.015,65,0.011]],["title/classes/Account.html",[33,0.103,66,1.531]],["body/classes/Account.html",[3,0.178,4,0.178,9,0.178,20,0.417,23,0.583,24,1.029,28,0.023,30,0.303,32,0.202,33,0.09,41,0.74,63,0.01,64,0.014,65,0.01,66,1.906,67,1.641,68,2.624,69,3.303,70,3.237,71,1.411,72,2.153,73,4.365,74,4.365,75,4.151,76,2.728,77,2.334,78,2.728,79,2.728,80,2.728,81,3.731,82,2.527,83,4.381,84,0.834,85,1.029,86,0.699,87,3.175,88,3.081,89,3.081,90,2.334,91,4.596,92,2.323,93,2.323,94,2.323,95,2.175,96,2.323,97,2.323,98,2.323,99,2.323,100,2.624,101,3.081,102,3.081,103,3.081]],["title/components/AppComponent.html",[0,0.708,43,1.201]],["body/components/AppComponent.html",[0,0.997,1,0.942,2,1.441,3,0.169,4,0.169,5,1.273,6,1.837,7,1.273,8,1.273,9,0.169,13,1.273,14,2.911,15,2.573,16,1.837,18,1.837,28,0.022,30,0.487,31,0.425,32,0.192,33,0.085,35,0.889,36,1.837,37,1.837,38,1.273,39,2.359,40,1.273,41,0.613,42,1.273,43,1.851,44,1.273,45,0.999,46,1.273,47,0.942,48,1.273,49,0.889,50,1.273,51,0.999,52,1.273,53,0.942,54,1.273,55,0.942,56,1.273,57,0.942,58,1.273,59,0.999,60,1.195,61,1.273,62,1.273,63,0.009,64,0.013,65,0.009,104,2.491,105,4.221,106,4.952,107,4.221,108,2.925,109,5.422,110,2.925,111,4.218,112,4.221,113,4.218,114,5.102,115,4.221,116,4.218,117,5.259,118,2.925,119,4.218,120,4.221,121,4.221,122,3.595,123,4.221,124,2.925,125,2.925,126,2.925,127,5.749,128,2.491,129,4.618,130,2.925,131,3.595,132,4.221,133,2.491,134,2.491,135,2.925,136,2.491,137,2.629,138,2.491,139,1.992,140,2.925,141,2.925,142,2.925,143,2.491,144,2.491,145,2.925]],["title/modules/AppModule.html",[146,1.274,147,2.397]],["body/modules/AppModule.html",[3,0.215,4,0.215,9,0.215,15,1.427,28,0.023,30,0.635,31,0.539,32,0.243,33,0.108,35,1.128,43,2.38,63,0.012,64,0.015,65,0.012,146,1.344,147,4.715,148,1.427,149,1.842,150,3.23,151,3.23,152,2.861,153,1.842,154,3.161,155,3.161,156,3.161,157,3.161,158,4.021,159,3.906,160,2.861,161,2.131,162,1.977,163,3.711,164,2.654,165,4.982,166,3.161,167,2.798,168,2.654,169,3.711,170,3.711,171,3.711,172,3.393,173,4.982,174,3.711,175,3.711]],["title/modules/AppRoutingModule.html",[146,1.274,158,2.192]],["body/modules/AppRoutingModule.html",[3,0.234,4,0.234,9,0.234,28,0.023,30,0.611,31,0.587,32,0.265,33,0.118,49,1.229,60,1.653,63,0.013,64,0.016,65,0.013,66,1.76,148,1.555,153,2.008,158,3.285,164,2.155,168,2.81,176,4.045,177,4.045,178,3.592,179,3.655,180,2.008,181,3.445,182,3.029,183,3.445,184,2.008,185,5.297,186,3.445,187,4.045,188,3.445,189,5.274,190,4.045,191,4.045,192,4.045,193,4.045,194,3.445,195,3.445,196,3.445,197,4.045]],["title/classes/AppSettings.html",[33,0.103,198,1.747]],["body/classes/AppSettings.html",[3,0.259,4,0.259,9,0.259,20,0.605,24,0.876,28,0.022,30,0.44,32,0.293,33,0.131,63,0.014,64,0.017,65,0.014,67,2.385,71,1.813,72,2.065,82,1.621,85,1.005,86,1.278,95,2.222,172,4.193,198,2.794,199,3.813,200,4.231,201,3.505,202,4.477,203,4.477,204,3.833,205,4.477,206,3.813,207,3.375]],["title/components/AppointmentComponent.html",[0,0.708,45,1.201]],["body/components/AppointmentComponent.html",[0,1.1,1,1.13,2,1.637,3,0.203,4,0.203,5,1.526,6,1.526,7,1.526,8,1.526,9,0.203,11,1.737,12,2.536,13,1.526,14,3.007,15,2.657,16,2.087,18,2.087,20,0.474,21,1.298,22,2.726,23,1.033,24,0.746,27,0.896,28,0.022,29,1.27,30,0.345,31,0.509,32,0.23,33,0.102,34,2.987,35,1.066,36,2.087,37,2.087,38,1.526,39,2.556,40,1.526,41,0.696,42,1.526,43,1.197,44,1.526,45,2.005,46,1.526,47,1.13,48,1.526,49,1.066,50,1.526,51,1.197,52,1.526,53,1.13,54,1.526,55,1.13,56,1.526,57,1.13,58,1.526,59,1.197,60,1.434,61,1.526,62,1.526,63,0.011,64,0.015,65,0.011,208,2.987,209,5.874,210,5.464,211,4.796,212,3.508,213,3.508]],["title/modules/AppointmentModule.html",[146,1.274,214,2.397]],["body/modules/AppointmentModule.html",[3,0.259,4,0.259,9,0.259,28,0.022,30,0.605,31,0.65,32,0.293,33,0.131,35,1.36,45,2.319,63,0.014,64,0.017,65,0.014,146,1.621,148,1.721,149,2.222,150,3.536,151,2.571,152,2.571,153,2.222,160,3.233,161,2.571,162,2.385,164,2.385,168,2.999,214,4.627,215,3.813,216,3.813,217,4.477,218,3.505,219,2.788,220,4.477]],["title/components/DialogComponent.html",[0,0.708,47,1.133]],["body/components/DialogComponent.html",[0,0.998,1,0.944,2,1.444,3,0.17,4,0.17,5,1.276,6,1.276,7,1.276,8,1.276,9,0.17,11,1.531,12,2.302,13,1.276,14,2.913,15,2.574,16,1.84,18,1.84,20,0.396,21,1.144,22,2.519,23,0.555,24,0.845,27,1.266,28,0.023,29,1.796,30,0.416,31,0.426,32,0.192,33,0.086,35,0.891,36,1.84,37,1.84,38,1.276,39,2.362,40,1.276,41,0.72,42,1.276,43,1.001,44,1.276,45,1.001,46,1.276,47,1.748,48,1.276,49,0.891,50,1.276,51,1.001,52,1.276,53,0.944,54,1.276,55,0.944,56,1.276,57,0.944,58,1.276,59,1.001,60,1.198,61,1.276,62,1.276,63,0.009,64,0.013,65,0.009,72,1.822,84,0.794,85,0.456,86,0.666,184,2.099,221,2.497,222,4.623,223,4.959,224,4.228,225,4.623,226,4.623,227,2.932,228,2.695,229,2.932,230,4.228,231,2.932,232,2.932,233,2.932,234,2.211,235,1.001,236,2.932,237,1.963,238,2.932,239,2.932,240,2.932,241,4.228,242,4.228,243,2.932,244,2.932,245,2.932]],["title/injectables/DialogService.html",[228,1.747,246,1.009]],["body/injectables/DialogService.html",[3,0.217,4,0.217,9,0.217,20,0.506,21,1.357,23,1.069,24,0.979,27,1.28,28,0.023,29,1.815,30,0.493,31,0.544,32,0.246,33,0.109,63,0.012,64,0.016,65,0.012,71,1.614,72,2.122,85,0.78,225,5.631,226,5.631,228,2.489,246,1.438,247,1.995,248,3.19,249,5.013,250,3.745,251,3.745,252,4.634,253,3.122,254,2.489,255,2.466,256,3.745,257,1.859,258,3.745,259,3.745]],["title/injectables/ErrorService.html",[246,1.009,260,2.021]],["body/injectables/ErrorService.html",[3,0.271,4,0.271,9,0.271,23,0.886,24,0.729,28,0.023,30,0.569,31,0.68,32,0.307,33,0.137,41,0.68,63,0.015,64,0.018,65,0.015,84,1.268,85,0.729,86,1.063,235,1.599,246,1.66,247,2.495,260,3.325,261,3.989,262,3.989,263,4.95,264,4.684,265,4.365,266,2.69]],["title/components/HomeComponent.html",[0,0.708,49,1.069]],["body/components/HomeComponent.html",[0,1.09,1,1.11,2,1.618,3,0.2,4,0.2,5,1.5,6,1.5,7,1.5,8,1.5,9,0.2,11,1.716,12,2.514,13,1.5,14,2.998,15,2.649,16,2.062,18,2.062,20,0.466,21,1.283,22,2.707,23,1.024,24,0.737,27,0.881,28,0.022,29,1.249,30,0.339,31,0.501,32,0.226,33,0.101,34,2.952,35,1.048,36,2.062,37,2.062,38,1.5,39,2.537,40,1.5,41,0.688,42,1.5,43,1.177,44,1.5,45,1.177,46,1.5,47,1.11,48,1.5,49,1.772,50,1.5,51,1.177,52,1.5,53,1.11,54,1.5,55,1.11,56,1.5,57,1.11,58,1.5,59,1.177,60,1.409,61,1.5,62,1.5,63,0.011,64,0.015,65,0.011,186,4.967,267,2.937,268,5.416,269,4.739,270,3.448,271,3.448]],["title/interfaces/IEndpoint.html",[204,2.397,272,1.438]],["body/interfaces/IEndpoint.html",[3,0.3,4,0.3,9,0.3,28,0.022,32,0.404,63,0.016,64,0.019,65,0.016,82,1.877,85,0.806,200,3.228,204,4.472,272,2.118,273,3.228,274,3.908,275,3.908]],["title/interfaces/IKeyValue.html",[272,1.438,276,2.192]],["body/interfaces/IKeyValue.html",[3,0.29,4,0.29,9,0.29,24,0.78,28,0.023,32,0.329,63,0.016,64,0.019,65,0.016,82,2.185,272,2.048,273,3.122,275,4.55,276,3.758,277,4.269,278,5.012,279,6.034,280,5.012]],["title/interfaces/ILoggerModel.html",[272,1.438,281,2.192]],["body/interfaces/ILoggerModel.html",[3,0.183,4,0.258,9,0.183,20,0.427,28,0.023,30,0.439,32,0.292,33,0.13,41,0.816,63,0.01,64,0.014,65,0.01,71,1.437,72,1.96,77,1.684,82,2.408,85,1.004,86,1.541,90,1.684,137,3.689,139,3.038,201,2.778,255,1.292,272,1.292,273,1.969,281,3.22,282,2.383,283,4.783,284,4.783,285,4.034,286,4.783,287,4.034,288,2.383,289,3.364,290,2.383,291,1.969,292,2.692,293,2.692,294,2.692,295,2.153,296,2.692,297,2.692,298,2.692,299,2.692,300,2.383,301,2.692,302,2.153,303,2.153,304,2.153]],["title/interfaces/IModelBase.html",[272,1.438,305,2.397]],["body/interfaces/IModelBase.html",[3,0.204,4,0.204,9,0.204,20,0.476,28,0.023,32,0.315,33,0.103,41,0.894,63,0.011,64,0.015,65,0.011,70,1.746,71,1.547,72,1.931,76,2.191,77,3.28,78,3.835,79,3.835,80,3.835,82,2.398,85,0.958,86,1.543,90,3.28,95,3.288,272,1.438,273,2.191,295,2.396,302,2.396,303,3.273,304,2.396,305,3.727,306,2.652,307,2.396,308,2.996]],["title/classes/Identity.html",[33,0.103,309,1.531]],["body/classes/Identity.html",[3,0.143,4,0.143,9,0.143,20,0.335,23,0.469,24,1.064,27,0.633,28,0.022,29,0.897,30,0.244,32,0.162,33,0.072,41,0.819,63,0.008,64,0.012,65,0.008,66,2.814,67,1.32,69,2.816,70,2.801,71,1.203,72,2.164,73,3.843,74,2.543,75,3.061,76,3.116,77,2.666,78,3.116,79,3.116,80,3.116,81,3.181,82,2.499,84,1.011,85,1.058,86,0.848,90,2.666,91,5.025,92,1.868,93,1.868,94,1.868,95,2.484,96,1.868,97,1.868,98,1.868,254,1.854,309,1.625,310,2.11,311,1.837,312,4.494,313,3.735,314,4.988,315,3.735,316,2.478,317,2.478,318,2.478,319,2.478,320,2.478,321,2.478,322,2.478,323,2.478,324,2.478,325,2.478,326,2.478,327,2.478,328,2.478,329,1.868,330,2.478,331,2.11,332,4.494,333,1.32,334,2.478,335,2.478]],["title/components/IdentityComponent.html",[0,0.708,51,1.201]],["body/components/IdentityComponent.html",[0,1.1,1,1.13,2,1.637,3,0.203,4,0.203,5,1.526,6,1.526,7,1.526,8,1.526,9,0.203,11,1.737,12,2.536,13,1.526,14,3.007,15,2.657,16,2.087,18,2.087,20,0.474,21,1.298,22,2.726,23,1.033,24,0.746,27,0.896,28,0.022,29,1.27,30,0.345,31,0.509,32,0.23,33,0.102,34,2.987,35,1.066,36,2.087,37,2.087,38,1.526,39,2.556,40,1.526,41,0.696,42,1.526,43,1.197,44,1.526,45,1.197,46,1.526,47,1.13,48,1.526,49,1.066,50,1.526,51,2.005,52,1.526,53,1.13,54,1.526,55,1.13,56,1.526,57,1.13,58,1.526,59,1.197,60,1.434,61,1.526,62,1.526,63,0.011,64,0.015,65,0.011,309,2.556,336,2.987,337,5.464,338,4.796,339,3.508,340,3.508]],["title/guards/IdentityGuard.html",[182,2.021,341,2.653]],["body/guards/IdentityGuard.html",[3,0.225,4,0.225,9,0.225,11,1.404,20,0.524,21,1.388,23,0.733,24,0.798,27,0.99,28,0.023,30,0.565,31,0.563,32,0.254,33,0.113,41,0.745,63,0.012,64,0.016,65,0.012,84,1.388,85,0.798,86,1.165,95,1.925,180,1.925,182,2.946,188,5.211,235,1.324,246,1.471,309,2.232,311,1.584,333,2.733,342,2.923,343,3.302,344,2.923,345,2.352,346,3.83,347,3.877,348,5.13,349,5.211,350,5.749,351,6.118,352,3.877,353,3.302,354,2.065,355,3.877,356,3.877,357,2.923,358,2.64]],["title/modules/IdentityModule.html",[146,1.274,359,2.397]],["body/modules/IdentityModule.html",[3,0.222,4,0.222,9,0.222,28,0.023,30,0.654,31,0.558,32,0.252,33,0.112,35,1.167,51,2.226,53,2.1,57,2.1,63,0.012,64,0.016,65,0.012,146,1.391,148,1.476,149,1.906,150,3.286,151,2.205,152,2.205,153,1.906,160,2.927,161,2.205,162,2.046,164,2.716,168,2.716,218,3.175,219,2.392,359,4.774,360,3.271,361,3.271,362,3.271,363,4.061,364,3.84,365,5.097,366,2.615,367,3.84,368,3.271,369,3.271,370,3.84]],["title/guards/IdentityResolver.html",[341,2.653,371,2.653]],["body/guards/IdentityResolver.html",[3,0.227,4,0.227,9,0.227,11,1.418,20,0.529,21,1.397,23,0.74,24,0.803,27,1,28,0.023,30,0.604,31,0.568,32,0.257,33,0.114,41,0.75,63,0.012,64,0.016,65,0.012,84,1.397,85,0.803,86,1.172,180,1.943,235,1.336,246,1.481,257,1.943,309,2.246,311,1.6,342,2.951,344,2.951,345,2.361,346,3.839,349,5.23,353,3.334,354,2.085,371,3.892,372,3.334,373,6.141,374,3.914,375,5.162,376,3.914,377,4.355,378,4.397]],["title/modules/IdentityRoutingModule.html",[146,1.274,363,2.192]],["body/modules/IdentityRoutingModule.html",[0,1.099,3,0.247,4,0.247,9,0.247,28,0.023,30,0.624,31,0.62,32,0.28,33,0.125,53,1.76,57,1.76,63,0.013,64,0.017,65,0.013,148,1.643,153,2.121,164,2.276,168,2.911,178,3.721,179,3.752,180,2.121,184,2.121,185,5.131,194,3.639,195,3.639,196,3.639,363,3.403,368,3.639,369,3.639,379,4.272,380,4.12,381,3.221,382,4.272]],["title/injectables/IdentityService.html",[246,1.009,345,1.353]],["body/injectables/IdentityService.html",[3,0.14,4,0.14,9,0.14,20,0.327,21,0.993,23,0.457,24,0.972,27,1.357,28,0.023,29,0.876,30,0.55,31,0.351,32,0.159,33,0.071,41,0.718,63,0.014,64,0.011,65,0.008,66,2.762,71,1.181,72,2.115,82,1.328,84,1.338,85,0.931,86,1.122,95,1.82,184,1.201,235,0.826,237,1.123,246,1.052,247,1.289,252,3.618,253,2.758,254,2.199,255,1.499,257,1.201,263,3.727,265,3.339,266,1.389,309,2.887,311,2.02,329,1.824,331,2.06,333,2.36,345,1.41,357,2.765,358,1.647,383,2.06,384,4.429,385,3.772,386,4.429,387,4.429,388,4.942,389,3.667,390,3.667,391,4.942,392,3.667,393,2.419,394,2.633,395,3.667,396,4.005,397,2.419,398,3.667,399,2.419,400,3.667,401,2.419,402,2.419,403,3.667,404,2.419,405,2.419,406,3.667,407,2.419,408,2.419,409,2.06,410,2.06,411,2.419,412,3.667,413,2.419,414,2.419,415,2.419,416,2.419,417,2.419,418,3.667,419,2.419,420,2.419,421,2.419,422,2.419]],["title/classes/LoggerModel.html",[33,0.103,291,2.192]],["body/classes/LoggerModel.html",[3,0.167,4,0.312,9,0.167,20,0.391,23,0.547,24,0.999,28,0.023,30,0.411,32,0.274,33,0.158,41,0.608,63,0.009,64,0.013,65,0.009,67,1.54,71,1.348,72,2.157,77,2.621,82,2.44,84,0.782,85,1.015,86,0.656,87,1.8,90,2.229,137,3.358,139,2.85,201,1.8,255,1.181,272,1.181,281,3.358,282,2.179,283,2.462,284,2.462,285,3.672,286,2.462,287,3.672,288,2.179,289,3.155,290,2.179,291,2.606,292,4.189,293,4.189,294,4.189,295,2.85,296,2.462,297,2.462,298,2.462,299,2.462,300,2.179,301,2.462,302,1.968,303,1.968,304,1.968,307,1.968,423,4.185,424,2.89,425,2.89,426,2.89,427,2.89,428,2.89,429,2.89,430,2.89]],["title/injectables/LoggerService.html",[246,1.009,431,2.021]],["body/injectables/LoggerService.html",[3,0.159,4,0.159,9,0.159,20,0.372,21,1.093,23,0.521,24,0.943,27,1.222,28,0.023,29,1.732,30,0.552,31,0.4,32,0.18,33,0.08,41,0.695,63,0.009,64,0.013,65,0.009,71,1.301,72,1.928,82,1.732,84,1.295,85,0.913,86,1.086,87,1.714,198,2.616,235,0.94,237,1.278,246,1.158,247,1.467,252,2.751,253,2.979,254,2.786,255,1.651,257,1.367,276,3.495,281,3.282,285,2.751,291,2.515,307,1.875,311,2.592,431,2.319,432,2.345,433,5.865,434,4.783,435,4.039,436,4.039,437,5.269,438,1.875,439,4.039,440,2.515,441,4.039,442,2.753,443,4.039,444,2.753,445,2.753,446,2.753,447,2.753,448,1.714,449,2.345,450,2.753,451,2.753,452,4.039,453,2.345,454,4.039,455,2.753,456,2.753,457,2.753,458,2.753,459,2.753,460,2.753,461,2.076,462,2.753,463,2.753,464,2.753,465,2.753,466,2.753,467,2.753,468,2.753]],["title/components/LoginComponent.html",[0,0.708,53,1.133]],["body/components/LoginComponent.html",[0,0.96,1,0.882,2,1.374,3,0.159,4,0.159,5,1.192,6,1.192,7,1.192,8,1.192,9,0.159,11,1.458,12,2.214,13,1.192,14,2.874,15,2.54,16,1.751,18,1.751,20,0.371,21,1.09,22,2.44,23,0.518,24,0.818,27,1.028,28,0.022,29,1.458,30,0.517,31,0.398,32,0.18,33,0.08,35,0.833,36,1.751,37,1.751,38,1.192,39,2.288,40,1.192,41,0.693,42,1.192,43,0.936,44,1.192,45,0.936,46,1.192,47,0.882,48,1.192,49,0.833,50,1.192,51,0.936,52,1.192,53,1.693,54,1.192,55,0.882,56,1.192,57,0.882,58,1.192,59,0.936,60,1.12,61,1.192,62,1.192,63,0.012,64,0.012,65,0.009,66,1.751,71,1.296,72,1.779,74,3.249,75,3.249,84,0.742,85,0.626,86,0.622,180,1.36,235,0.936,237,1.272,255,1.95,311,1.12,345,2.022,346,3.476,354,1.46,366,1.866,380,4.681,381,3.035,461,2.066,469,2.334,470,4.771,471,4.025,472,4.771,473,2.334,474,4.025,475,2.74,476,2.74,477,4.478,478,4.063,479,2.334,480,2.74,481,3.428,482,2.74,483,2.74,484,3.035,485,2.334,486,3.428,487,3.428,488,3.428]],["title/classes/ModelBase.html",[33,0.103,70,1.747]],["body/classes/ModelBase.html",[3,0.192,4,0.192,9,0.192,20,0.447,23,0.625,24,0.995,28,0.023,32,0.302,33,0.097,41,0.875,63,0.01,64,0.014,65,0.01,67,1.762,70,2.286,71,1.483,72,2.149,76,3.299,77,3.052,78,3.568,79,3.568,80,3.568,82,2.258,84,0.895,85,0.995,86,0.751,87,2.06,90,3.209,95,3.096,272,1.352,295,3.136,302,2.252,303,3.136,304,2.252,305,3.902,306,2.494,307,3.136,308,2.817,489,4.605,490,3.307,491,3.307,492,3.307,493,3.307,494,3.307]],["title/components/NavigationComponent.html",[0,0.708,55,1.133]],["body/components/NavigationComponent.html",[0,0.872,1,0.752,2,1.219,3,0.135,4,0.135,5,1.016,6,1.016,7,1.016,8,1.016,9,0.135,11,1.293,12,2.012,13,1.016,14,2.778,15,2.454,16,1.553,18,1.553,20,0.316,21,0.966,22,2.253,23,0.442,24,0.755,27,0.912,28,0.023,29,1.293,30,0.514,31,0.339,32,0.153,33,0.068,35,0.71,36,1.553,37,1.553,38,1.016,39,2.112,40,1.016,41,0.629,42,1.016,43,0.797,44,1.016,45,0.797,46,1.016,47,0.752,48,1.016,49,0.71,50,1.016,51,0.797,52,1.016,53,0.752,54,1.016,55,1.563,56,1.016,57,0.752,58,1.016,59,0.797,60,0.954,61,1.016,62,1.016,63,0.013,64,0.011,65,0.007,66,2.399,71,1.15,72,1.676,84,0.632,85,0.555,86,0.53,111,3.041,113,1.989,114,1.989,116,3.691,117,4.134,119,1.989,122,3.041,128,1.989,129,3.691,131,1.989,133,3.041,134,3.041,136,4.134,137,2.699,138,4.134,144,3.041,222,3.691,228,2.409,234,1.761,235,0.797,237,1.084,309,1.553,311,0.954,329,1.761,344,1.761,345,1.866,354,1.244,495,1.989,496,4.334,497,4.334,498,3.57,499,4.854,500,3.57,501,2.335,502,2.335,503,2.335,504,2.335,505,3.57,506,2.335,507,2.335,508,2.335,509,3.57,510,3.57,511,3.57,512,2.335,513,2.335,514,3.57,515,2.335,516,3.57,517,4.334,518,5.738,519,2.335,520,3.57,521,2.335,522,3.041,523,3.57,524,2.335,525,2.335,526,2.335,527,2.335,528,2.335,529,2.335,530,2.335,531,2.335,532,2.335,533,2.335,534,2.335,535,2.335]],["title/injectables/NetworkService.html",[246,1.009,536,2.653]],["body/injectables/NetworkService.html",[3,0.271,4,0.271,9,0.271,23,0.886,24,0.729,28,0.023,30,0.569,31,0.68,32,0.307,33,0.137,41,0.68,63,0.015,64,0.018,65,0.015,84,1.268,85,0.729,86,1.063,235,1.599,246,1.66,247,2.495,262,3.989,263,4.95,265,4.365,266,2.69,536,4.365,537,3.989,538,4.684]],["title/classes/Profile.html",[33,0.103,539,2.653]],["body/classes/Profile.html",[3,0.191,4,0.191,9,0.191,20,0.446,23,1,24,1.055,28,0.022,30,0.324,32,0.216,33,0.096,41,0.667,63,0.01,64,0.014,65,0.01,67,1.757,69,3.466,70,3.288,71,1.48,72,2.185,73,3.603,76,2.862,77,2.449,78,2.862,79,2.862,80,2.862,82,2.429,85,1.044,90,2.449,91,4.698,92,2.487,93,2.487,94,2.487,95,2.282,96,2.487,97,2.487,98,2.487,99,2.487,100,2.809,539,3.466,540,2.809,541,5.29,542,5.29,543,5.29,544,4.596,545,3.298,546,3.298,547,3.298]],["title/components/RegisterComponent.html",[0,0.708,57,1.133]],["body/components/RegisterComponent.html",[0,0.951,1,0.869,2,1.358,3,0.156,4,0.156,5,1.174,6,1.174,7,1.174,8,1.174,9,0.156,11,1.441,12,2.194,13,1.174,14,2.865,15,2.532,16,1.731,18,1.731,20,0.365,21,1.077,22,2.422,23,0.51,24,0.812,27,1.016,28,0.022,29,1.441,30,0.513,31,0.392,32,0.177,33,0.079,35,0.82,36,1.731,37,1.731,38,1.174,39,2.27,40,1.174,41,0.687,42,1.174,43,0.921,44,1.174,45,0.921,46,1.174,47,0.869,48,1.174,49,0.82,50,1.174,51,0.921,52,1.174,53,0.869,54,1.174,55,0.869,56,1.174,57,1.68,58,1.174,59,0.921,60,1.103,61,1.174,62,1.174,63,0.012,64,0.012,65,0.008,66,1.731,71,1.281,72,1.769,73,3.22,74,3.22,75,3.22,84,0.73,85,0.619,86,0.613,180,1.339,235,0.921,237,1.252,255,2.133,311,1.103,345,2.006,346,3.459,354,1.437,366,1.837,380,3,381,4.66,461,2.034,473,2.298,477,4.444,478,4.444,479,2.298,481,4.026,484,3,485,2.298,486,3.389,487,3.389,488,3.389,548,2.298,549,4.727,550,3.979,551,4.727,552,3.979,553,2.698,554,2.698,555,2.698,556,2.698,557,2.698,558,2.698]],["title/interceptors/RequestInterceptor.html",[559,2.653,560,2.397]],["body/interceptors/RequestInterceptor.html",[3,0.222,4,0.222,9,0.222,11,1.386,20,0.518,21,1.377,23,0.724,24,0.791,27,0.978,28,0.023,30,0.598,31,0.556,32,0.251,33,0.112,41,0.739,63,0.012,64,0.016,65,0.012,84,1.377,85,0.889,86,1.155,184,1.9,198,3.022,235,1.307,237,2.652,246,1.459,255,1.564,257,1.9,266,2.198,333,2.039,377,4.308,438,2.607,440,3.168,448,2.384,560,3.464,561,3.26,562,3.26,563,4.332,564,3.828,565,4.332,566,5.185,567,5.185,568,3.828,569,3.26,570,3.26,571,3.828,572,4.332,573,3.828,574,3.828,575,3.828,576,3.828,577,3.828,578,3.828]],["title/components/ScheduleComponent.html",[0,0.708,59,1.201]],["body/components/ScheduleComponent.html",[0,1.1,1,1.13,2,1.637,3,0.203,4,0.203,5,1.526,6,1.526,7,1.526,8,1.526,9,0.203,11,1.737,12,2.536,13,1.526,14,3.007,15,2.657,16,2.087,18,2.087,20,0.474,21,1.298,22,2.726,23,1.033,24,0.746,27,0.896,28,0.022,29,1.27,30,0.345,31,0.509,32,0.23,33,0.102,34,2.987,35,1.066,36,2.087,37,2.087,38,1.526,39,2.556,40,1.526,41,0.696,42,1.526,43,1.197,44,1.526,45,1.197,46,1.526,47,1.13,48,1.526,49,1.066,50,1.526,51,1.197,52,1.526,53,1.13,54,1.526,55,1.13,56,1.526,57,1.13,58,1.526,59,2.005,60,2.514,61,1.526,62,1.526,63,0.011,64,0.015,65,0.011,579,2.987,580,5.464,581,4.796,582,3.508,583,3.508]],["title/modules/ScheduleModule.html",[146,1.274,584,2.397]],["body/modules/ScheduleModule.html",[3,0.259,4,0.259,9,0.259,28,0.022,30,0.605,31,0.65,32,0.293,33,0.131,35,1.36,59,2.319,63,0.014,64,0.017,65,0.014,146,1.621,148,1.721,149,2.222,150,3.536,151,2.571,152,2.571,153,2.222,160,3.233,161,2.571,162,2.385,164,2.385,168,2.999,218,3.505,219,2.788,584,4.627,585,3.813,586,3.813,587,4.477,588,4.477]],["title/modules/SharedModule.html",[146,1.274,159,2.192]],["body/modules/SharedModule.html",[1,1.986,2,1.406,3,0.125,4,0.125,9,0.125,21,0.583,24,0.335,27,0.55,28,0.023,30,0.653,31,0.313,32,0.141,33,0.063,35,0.654,41,0.313,47,1.986,49,1.874,55,1.986,63,0.007,64,0.01,65,0.007,84,0.583,85,0.335,86,0.489,137,1.341,146,0.78,148,1.788,149,1.069,150,2.365,151,1.236,152,2.67,153,2.045,159,4.317,160,1.926,161,1.236,162,1.147,164,1.147,168,2.194,178,2.284,180,1.069,181,1.834,182,1.926,183,1.834,184,2.045,198,2.501,218,2.088,219,1.341,228,2.649,234,1.623,235,0.735,237,0.999,254,2.045,260,3.065,266,1.236,285,1.466,287,1.466,288,1.623,311,0.88,333,1.147,345,2.052,346,2.365,354,1.147,358,2.284,394,2.843,410,1.834,431,3.2,440,2.088,448,1.341,560,2.284,589,1.834,590,1.834,591,1.834,592,1.834,593,1.623,594,3.353,595,2.153,596,3.353,597,2.153,598,4.119,599,4.119,600,2.856,601,2.153,602,2.153,603,2.153,604,2.153,605,2.153,606,2.153,607,2.284,608,2.153,609,1.834,610,3.106,611,2.153,612,2.153,613,2.153,614,2.153,615,4.119,616,2.153,617,3.353,618,3.353]],["title/injectables/StorageService.html",[246,1.009,394,1.875]],["body/injectables/StorageService.html",[3,0.128,4,0.128,9,0.128,20,0.566,21,0.927,23,0.418,24,0.876,27,1.205,28,0.023,30,0.502,31,0.321,32,0.145,33,0.065,41,0.741,63,0.007,64,0.011,65,0.007,70,1.098,71,1.103,72,1.814,82,2.283,84,1.616,85,0.966,86,1.158,87,1.377,99,1.668,139,1.506,184,2.342,198,2.342,235,0.755,246,0.982,247,1.178,252,3.475,253,2.133,254,2.342,255,1.399,257,1.098,275,3.557,276,3.505,311,2.439,333,2.998,378,4.596,385,4.596,394,1.824,396,2.582,438,1.506,440,2.133,448,1.377,449,1.884,453,1.884,619,1.884,620,5.396,621,3.424,622,3.424,623,3.424,624,3.424,625,3.424,626,2.212,627,2.212,628,6.459,629,2.212,630,2.212,631,2.212,632,5.815,633,2.212,634,2.212,635,2.212,636,2.212,637,2.212,638,4.19,639,2.212,640,2.212,641,2.212,642,2.212,643,2.212,644,2.212,645,2.212,646,3.424,647,3.424,648,2.212,649,2.212,650,2.212,651,2.212,652,2.212,653,2.212,654,3.424,655,2.212,656,2.212,657,2.212,658,2.212,659,2.212,660,2.212,661,3.424,662,2.212,663,4.19,664,2.212,665,2.212,666,2.212,667,2.212,668,2.212]],["title/interceptors/TokenInterceptor.html",[559,2.653,607,2.397]],["body/interceptors/TokenInterceptor.html",[3,0.195,4,0.195,9,0.195,11,1.221,20,0.456,21,1.263,23,0.638,24,0.726,27,0.861,28,0.023,30,0.632,31,0.49,32,0.221,33,0.099,41,0.678,63,0.01,64,0.014,65,0.01,84,1.263,85,0.726,86,1.06,184,2.657,198,2.868,235,1.151,237,2.484,246,1.338,257,1.674,266,1.936,309,2.513,311,1.378,314,3.975,333,1.796,345,2.221,354,1.796,377,4.036,409,2.871,438,2.296,440,2.906,448,2.1,561,2.871,563,3.975,565,3.975,566,4.92,567,4.92,569,2.871,570,2.871,572,3.975,607,3.178,669,2.871,670,3.371,671,3.371,672,3.371,673,3.371,674,4.667,675,2.871,676,3.371,677,3.371,678,3.371,679,3.371,680,3.371,681,3.371,682,3.371,683,3.371,684,3.371,685,3.371,686,3.371,687,3.371]],["title/coverage.html",[688,4.093]],["body/coverage.html",[0,1.287,1,0.855,2,0.907,9,0.154,10,2.263,28,0.023,33,0.169,43,0.907,45,0.907,47,0.855,49,0.807,51,0.907,53,0.855,55,0.855,57,0.855,59,0.907,63,0.008,64,0.012,65,0.008,66,1.156,68,2.263,70,1.319,85,0.413,104,2.263,148,1.021,172,2.679,182,1.526,198,1.319,199,2.263,200,2.45,204,1.809,208,2.263,221,2.263,228,1.319,246,1.661,248,2.263,255,1.086,260,1.526,261,2.263,267,2.263,272,2.117,274,2.003,276,1.655,277,2.263,281,1.655,282,2.966,291,1.655,300,5.455,305,1.809,306,2.966,309,1.156,310,2.263,336,2.263,341,2.966,343,2.263,345,1.021,371,2.003,372,2.263,383,2.263,394,1.415,431,1.526,432,2.263,469,2.263,495,2.263,536,2.003,537,2.263,539,2.003,540,2.263,548,2.263,559,2.966,560,1.809,562,2.263,579,2.263,593,3.533,607,1.809,610,2.003,619,2.263,669,2.263,688,2.263,689,2.657,690,2.657,691,2.657,692,5.179,693,6.394,694,6.285,695,6.565,696,2.657,697,2.657,698,3.934,699,4.685,700,3.934,701,2.657,702,2.657,703,3.934,704,3.351,705,3.351,706,3.351,707,2.003,708,2.263,709,2.657,710,2.657]],["title/dependencies.html",[149,2.102,711,2.937]],["body/dependencies.html",[28,0.023,31,0.672,63,0.014,64,0.018,65,0.014,149,2.299,166,4.896,167,4.334,180,2.299,219,2.884,257,2.299,289,3.491,290,3.491,366,3.153,522,3.944,712,4.63,713,5.979,714,4.63,715,4.63,716,4.63,717,4.63,718,4.63,719,4.63,720,4.63,721,4.63,722,4.63,723,4.63,724,4.63,725,4.63]],["title/miscellaneous/enumerations.html",[726,1.687,727,3.605]],["body/miscellaneous/enumerations.html",[3,0.314,20,0.572,28,0.022,63,0.013,64,0.017,65,0.013,66,2.361,206,4.623,254,3.561,287,3.696,309,2.361,346,3.117,396,4.092,484,4.769,707,4.092,726,2.428,727,3.601,728,4.227,729,5.427,730,4.227,731,4.227,732,4.227,733,4.227,734,4.227,735,5.427,736,5.427,737,4.227,738,5.427,739,5.427,740,5.427,741,4.227,742,4.623]],["title/index.html",[20,0.397,675,2.501,743,2.937]],["body/index.html",[0,1.164,4,0.227,15,1.51,28,0.016,41,0.57,63,0.012,64,0.016,65,0.012,162,2.092,207,2.961,255,1.605,713,3.345,742,4.406,744,3.927,745,5.173,746,3.927,747,5.785,748,5.785,749,3.927,750,3.927,751,6.39,752,6.69,753,3.927,754,3.927,755,3.927,756,3.927,757,3.927,758,3.927,759,3.927,760,3.927,761,3.927,762,3.927,763,5.785,764,5.785,765,3.927,766,6.39,767,3.927,768,3.927,769,3.927,770,3.927,771,3.927,772,3.927,773,5.173,774,5.173,775,6.149,776,3.927,777,5.173,778,5.173,779,3.927,780,6.149,781,3.927,782,3.927,783,3.927,784,5.785,785,3.927,786,3.927,787,3.927,788,2.961,789,3.927,790,3.927,791,3.927]],["title/modules.html",[148,1.848]],["body/modules.html",[28,0.018,63,0.015,64,0.018,65,0.015,147,3.331,148,1.881,158,3.046,159,3.046,167,5.148,214,3.331,359,3.331,363,3.046,584,3.331,792,6.828,793,6.828,794,7.027,795,5.945,796,5.945]],["title/overview.html",[788,3.624]],["body/overview.html",[1,2.009,2,1.033,28,0.022,35,0.92,43,2.13,45,1.723,47,2.009,49,1.896,51,1.723,53,1.626,55,2.009,57,1.626,59,1.723,63,0.009,64,0.013,65,0.009,67,1.613,143,3.685,146,1.096,147,4.423,148,1.164,149,1.503,150,1.738,151,1.738,152,1.738,153,1.503,154,2.578,155,2.578,156,2.578,157,2.578,158,3.144,159,4.452,160,2.485,161,1.738,162,1.613,179,1.885,214,3.751,215,2.578,216,2.578,228,2.506,247,1.613,260,2.899,273,1.885,342,2.282,345,1.941,359,4.487,360,2.578,361,2.578,362,2.578,363,3.144,394,2.69,431,2.899,584,3.751,585,2.578,586,2.578,589,2.578,590,2.578,591,2.578,592,2.578,788,2.282,797,3.027,798,4.326,799,3.027,800,3.027]],["title/routes.html",[179,2.993]],["body/routes.html",[28,0.02,63,0.018,64,0.02,65,0.018,179,3.513]],["title/miscellaneous/typealiases.html",[726,1.687,801,4.233]],["body/miscellaneous/typealiases.html",[20,0.732,28,0.02,63,0.017,64,0.02,65,0.017,85,0.983,200,3.934,201,3.372,274,4.082,726,3.109,802,5.414,803,5.414]],["title/miscellaneous/variables.html",[726,1.687,804,3.605]],["body/miscellaneous/variables.html",[1,1.143,2,1.65,20,0.48,28,0.023,47,1.143,49,1.078,55,1.143,63,0.011,64,0.015,65,0.011,85,1.047,148,1.858,172,4.02,178,2.417,182,2.038,200,4.239,201,2.21,207,3.645,218,2.21,228,1.762,253,4.133,254,3.295,260,2.038,345,1.364,357,2.676,358,3.292,394,1.891,431,2.038,593,2.676,600,3.022,609,3.022,610,3.645,704,3.022,705,3.022,706,3.022,707,3.645,708,4.117,726,2.038,804,3.022,805,5.497,806,4.834,807,4.834,808,4.834,809,3.549,810,3.549,811,4.834,812,4.834]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":300,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"coverage.html":{}}}],["0.10.2",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":516,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1",{"_index":654,"title":{},"body":{"injectables/StorageService.html":{}}}],["1.1.0",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["100vh",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["100vw",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["11.0.0",{"_index":713,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["15px",{"_index":517,"title":{},"body":{"components/NavigationComponent.html":{}}}],["2",{"_index":799,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":532,"title":{},"body":{"components/NavigationComponent.html":{}}}],["24px",{"_index":524,"title":{},"body":{"components/NavigationComponent.html":{}}}],["250px",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":800,"title":{},"body":{"overview.html":{}}}],["4.7.0",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["50px",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["6",{"_index":798,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":797,"title":{},"body":{"overview.html":{}}}],["_token",{"_index":312,"title":{},"body":{"classes/Identity.html":{}}}],["about'},{'name",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":313,"title":{},"body":{"classes/Identity.html":{}}}],["account",{"_index":66,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"modules/AppRoutingModule.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["account:11",{"_index":321,"title":{},"body":{"classes/Identity.html":{}}}],["account:12",{"_index":319,"title":{},"body":{"classes/Identity.html":{}}}],["account:13",{"_index":320,"title":{},"body":{"classes/Identity.html":{}}}],["account:14",{"_index":322,"title":{},"body":{"classes/Identity.html":{}}}],["account:15",{"_index":323,"title":{},"body":{"classes/Identity.html":{}}}],["account:16",{"_index":324,"title":{},"body":{"classes/Identity.html":{}}}],["account:4",{"_index":318,"title":{},"body":{"classes/Identity.html":{}}}],["account:5",{"_index":317,"title":{},"body":{"classes/Identity.html":{}}}],["account:6",{"_index":316,"title":{},"body":{"classes/Identity.html":{}}}],["action",{"_index":529,"title":{},"body":{"components/NavigationComponent.html":{}}}],["action::after",{"_index":533,"title":{},"body":{"components/NavigationComponent.html":{}}}],["action:active",{"_index":535,"title":{},"body":{"components/NavigationComponent.html":{}}}],["action:hover",{"_index":534,"title":{},"body":{"components/NavigationComponent.html":{}}}],["actions",{"_index":527,"title":{},"body":{"components/NavigationComponent.html":{}}}],["activatedroutesnapshot",{"_index":349,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{}}}],["actual_component",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["aliases",{"_index":802,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["amount",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["angular",{"_index":747,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":219,"title":{},"body":{"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":266,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/NetworkService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["angular/compiler",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":366,"title":{},"body":{"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"index.html":{}}}],["app.component",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":43,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":577,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["appmodule",{"_index":147,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointment",{"_index":209,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointment'},{'name",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["appointment.component",{"_index":220,"title":{},"body":{"modules/AppointmentModule.html":{}}}],["appointment.component.html",{"_index":211,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointment.component.scss",{"_index":210,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["appointmentcomponent",{"_index":45,"title":{"components/AppointmentComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appointmentmodule",{"_index":214,"title":{"modules/AppointmentModule.html":{}},"body":{"modules/AppointmentModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":158,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":198,"title":{"classes/AppSettings.html":{}},"body":{"classes/AppSettings.html":{},"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["args",{"_index":307,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{}}}],["args[key",{"_index":304,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["around",{"_index":528,"title":{},"body":{"components/NavigationComponent.html":{}}}],["array",{"_index":453,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/StorageService.html":{}}}],["artifacts",{"_index":767,"title":{},"body":{"index.html":{}}}],["async",{"_index":387,"title":{},"body":{"injectables/IdentityService.html":{}}}],["authentication",{"_index":738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authreq",{"_index":573,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authstate",{"_index":384,"title":{},"body":{"injectables/IdentityService.html":{}}}],["auto",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["automatically",{"_index":757,"title":{},"body":{"index.html":{}}}],["available",{"_index":796,"title":{},"body":{"modules.html":{}}}],["await",{"_index":646,"title":{},"body":{"injectables/StorageService.html":{}}}],["awesome",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["baseurl",{"_index":386,"title":{},"body":{"injectables/IdentityService.html":{}}}],["between",{"_index":526,"title":{},"body":{"components/NavigationComponent.html":{}}}],["bg",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["block",{"_index":243,"title":{},"body":{"components/DialogComponent.html":{}}}],["boolean",{"_index":95,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["bootstrap",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["brand",{"_index":519,"title":{},"body":{"components/NavigationComponent.html":{}}}],["browse",{"_index":794,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":766,"title":{},"body":{"index.html":{}}}],["caller",{"_index":294,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["canactivate",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/IdentityGuard.html":{}}}],["canactivate(route",{"_index":348,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["center",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["change",{"_index":759,"title":{},"body":{"index.html":{}}}],["check",{"_index":787,"title":{},"body":{"index.html":{}}}],["checkidentity",{"_index":388,"title":{},"body":{"injectables/IdentityService.html":{}}}],["class",{"_index":33,"title":{"classes/Account.html":{},"classes/AppSettings.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["classes",{"_index":67,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"overview.html":{}}}],["cli",{"_index":748,"title":{},"body":{"index.html":{}}}],["click",{"_index":487,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["client",{"_index":744,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appointmentmodule",{"_index":215,"title":{},"body":{"modules/AppointmentModule.html":{},"overview.html":{}}}],["cluster_appointmentmodule_declarations",{"_index":216,"title":{},"body":{"modules/AppointmentModule.html":{},"overview.html":{}}}],["cluster_identitymodule",{"_index":360,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_identitymodule_declarations",{"_index":362,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_identitymodule_imports",{"_index":361,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_schedulemodule",{"_index":585,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_schedulemodule_declarations",{"_index":586,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":589,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":592,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":590,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":591,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":761,"title":{},"body":{"index.html":{}}}],["collection",{"_index":620,"title":{},"body":{"injectables/StorageService.html":{}}}],["color",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["column",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":789,"title":{},"body":{"index.html":{}}}],["common/shared.module",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":218,"title":{},"body":{"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:homecomponent",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["components/dialog/dialog.component",{"_index":601,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/navigation/navigation.component",{"_index":602,"title":{},"body":{"modules/SharedModule.html":{}}}],["config",{"_index":440,"title":{},"body":{"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["console.clear",{"_index":464,"title":{},"body":{"injectables/LoggerService.html":{}}}],["console.groupcollapsed(`%c",{"_index":466,"title":{},"body":{"injectables/LoggerService.html":{}}}],["console.log(error",{"_index":485,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(result",{"_index":504,"title":{},"body":{"components/NavigationComponent.html":{}}}],["console.log(this.account",{"_index":506,"title":{},"body":{"components/NavigationComponent.html":{}}}],["const",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DialogComponent.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(account",{"_index":473,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(args",{"_index":295,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["constructor(config",{"_index":438,"title":{},"body":{"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(http",{"_index":262,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/NetworkService.html":{}}}],["constructor(identity",{"_index":344,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/NavigationComponent.html":{}}}],["constructor(private",{"_index":235,"title":{},"body":{"components/DialogComponent.html":{},"injectables/ErrorService.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(service",{"_index":227,"title":{},"body":{"components/DialogComponent.html":{}}}],["constructor(storage",{"_index":393,"title":{},"body":{"injectables/IdentityService.html":{}}}],["constructor(username",{"_index":81,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{}}}],["content",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["context",{"_index":707,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":688,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":76,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["createdat",{"_index":293,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["current",{"_index":656,"title":{},"body":{"injectables/StorageService.html":{}}}],["current.name",{"_index":653,"title":{},"body":{"injectables/StorageService.html":{}}}],["current?.id",{"_index":651,"title":{},"body":{"injectables/StorageService.html":{}}}],["darken($color",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["date().valueof",{"_index":297,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["date.now",{"_index":676,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["debug",{"_index":735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["default",{"_index":253,"title":{},"body":{"injectables/DialogService.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IKeyValue.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["dependencies",{"_index":149,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":77,"title":{},"body":{"classes/Account.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["descriptor",{"_index":283,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["dev",{"_index":754,"title":{},"body":{"index.html":{}}}],["development",{"_index":750,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":222,"title":{},"body":{"components/DialogComponent.html":{},"components/NavigationComponent.html":{}}}],["dialog'},{'name",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["dialog.component.html",{"_index":224,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialog.component.scss",{"_index":223,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialog.style.display",{"_index":242,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialogcomponent",{"_index":47,"title":{"components/DialogComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dialogservice",{"_index":228,"title":{"injectables/DialogService.html":{}},"body":{"components/DialogComponent.html":{},"injectables/DialogService.html":{},"components/NavigationComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["direction",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["directives",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":765,"title":{},"body":{"index.html":{}}}],["directory",{"_index":770,"title":{},"body":{"index.html":{}}}],["display",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["dist",{"_index":769,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(\"dialog",{"_index":241,"title":{},"body":{"components/DialogComponent.html":{}}}],["documentation",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["dynamic",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":781,"title":{},"body":{"index.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["email",{"_index":73,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{}}}],["end",{"_index":780,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":200,"title":{},"body":{"classes/AppSettings.html":{},"interfaces/IEndpoint.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":727,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/log.scope.enum",{"_index":288,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"modules/SharedModule.html":{}}}],["env",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["env/environment",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":484,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["errorservice",{"_index":260,"title":{"injectables/ErrorService.html":{}},"body":{"injectables/ErrorService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["evenly",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["event",{"_index":679,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["event.body",{"_index":684,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["event.headers.get('authorization').replace('bearer",{"_index":682,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["event.headers.has('authorization",{"_index":681,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["execute",{"_index":777,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["exports",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["extends",{"_index":69,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["fa",{"_index":531,"title":{},"body":{"components/NavigationComponent.html":{}}}],["false",{"_index":357,"title":{},"body":{"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["files",{"_index":760,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":541,"title":{},"body":{"classes/Profile.html":{}}}],["flag",{"_index":772,"title":{},"body":{"index.html":{}}}],["flex",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["font",{"_index":522,"title":{},"body":{"components/NavigationComponent.html":{},"dependencies.html":{}}}],["forchild",{"_index":609,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["foreach(key",{"_index":302,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["formcontrol",{"_index":478,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":477,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["forroot",{"_index":595,"title":{},"body":{"modules/SharedModule.html":{}}}],["forroot(config",{"_index":596,"title":{},"body":{"modules/SharedModule.html":{}}}],["fsevents",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["further",{"_index":783,"title":{},"body":{"index.html":{}}}],["generate",{"_index":763,"title":{},"body":{"index.html":{}}}],["generated",{"_index":746,"title":{},"body":{"index.html":{}}}],["getcollection",{"_index":621,"title":{},"body":{"injectables/StorageService.html":{}}}],["getcollection$(key",{"_index":626,"title":{},"body":{"injectables/StorageService.html":{}}}],["getcollection$>(key",{"_index":662,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstorage",{"_index":622,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstorage(key",{"_index":629,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstorage>(key",{"_index":637,"title":{},"body":{"injectables/StorageService.html":{}}}],["getting",{"_index":743,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":325,"title":{},"body":{"classes/Identity.html":{}}}],["go",{"_index":786,"title":{},"body":{"index.html":{}}}],["graph",{"_index":795,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":341,"title":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":342,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"overview.html":{}}}],["guid",{"_index":289,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"dependencies.html":{}}}],["guid.newguid().tostring().split",{"_index":299,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["headers",{"_index":575,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["height",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["help",{"_index":784,"title":{},"body":{"index.html":{}}}],["helpers/app.settings",{"_index":448,"title":{},"body":{"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["helpers/endpoint.interface",{"_index":205,"title":{},"body":{"classes/AppSettings.html":{}}}],["helpers/key.value",{"_index":449,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/StorageService.html":{}}}],["helpers/logger.model",{"_index":450,"title":{},"body":{"injectables/LoggerService.html":{}}}],["here",{"_index":488,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["hidden",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["hidedialog",{"_index":225,"title":{},"body":{"components/DialogComponent.html":{},"injectables/DialogService.html":{}}}],["home",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["home.component.html",{"_index":269,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":268,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":49,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["hover",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["http",{"_index":265,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/NetworkService.html":{}}}],["http://localhost:4200",{"_index":756,"title":{},"body":{"index.html":{}}}],["http://localhost:5000",{"_index":406,"title":{},"body":{"injectables/IdentityService.html":{}}}],["http_interceptors",{"_index":599,"title":{},"body":{"modules/SharedModule.html":{}}}],["httpclient",{"_index":263,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/NetworkService.html":{}}}],["httpclientmodule",{"_index":600,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httpevent",{"_index":570,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":567,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpheaders",{"_index":571,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["httpheaders({'content",{"_index":576,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["httpinterceptor",{"_index":572,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httprequest",{"_index":566,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpresponse",{"_index":674,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["id",{"_index":78,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["identifier",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":309,"title":{"classes/Identity.html":{}},"body":{"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"components/NavigationComponent.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["identity'},{'name",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["identity(user.username",{"_index":686,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["identity.component",{"_index":370,"title":{},"body":{"modules/IdentityModule.html":{}}}],["identity.component.html",{"_index":338,"title":{},"body":{"components/IdentityComponent.html":{}}}],["identity.component.scss",{"_index":337,"title":{},"body":{"components/IdentityComponent.html":{}}}],["identity/identity.routing.module",{"_index":367,"title":{},"body":{"modules/IdentityModule.html":{}}}],["identity/login/login.component",{"_index":368,"title":{},"body":{"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["identity/register/register.component",{"_index":369,"title":{},"body":{"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["identitycomponent",{"_index":51,"title":{"components/IdentityComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["identityguard",{"_index":182,"title":{"guards/IdentityGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/IdentityGuard.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identitymodule",{"_index":359,"title":{"modules/IdentityModule.html":{}},"body":{"modules/IdentityModule.html":{},"modules.html":{},"overview.html":{}}}],["identityresolver",{"_index":371,"title":{"guards/IdentityResolver.html":{}},"body":{"guards/IdentityResolver.html":{},"coverage.html":{}}}],["identityroutingmodule",{"_index":363,"title":{"modules/IdentityRoutingModule.html":{}},"body":{"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["identityservice",{"_index":345,"title":{"injectables/IdentityService.html":{}},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["iendpoint",{"_index":204,"title":{"interfaces/IEndpoint.html":{}},"body":{"classes/AppSettings.html":{},"interfaces/IEndpoint.html":{},"coverage.html":{}}}],["ikeyvalue",{"_index":276,"title":{"interfaces/IKeyValue.html":{}},"body":{"interfaces/IKeyValue.html":{},"injectables/LoggerService.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["iloggermodel",{"_index":281,"title":{"interfaces/ILoggerModel.html":{}},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["imodelbase",{"_index":305,"title":{"interfaces/IModelBase.html":{}},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["import('./identity/identity.module').then(m",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./schedule/schedule.module').then(m",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":278,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["inherited",{"_index":91,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["initialize",{"_index":435,"title":{},"body":{"injectables/LoggerService.html":{}}}],["initialize(scope",{"_index":441,"title":{},"body":{"injectables/LoggerService.html":{}}}],["injectable",{"_index":246,"title":{"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/NetworkService.html":{},"injectables/StorageService.html":{}},"body":{"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/NetworkService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":247,"title":{},"body":{"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/NetworkService.html":{},"injectables/StorageService.html":{},"overview.html":{}}}],["instanceof",{"_index":680,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercept",{"_index":563,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["intercept(req",{"_index":565,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":559,"title":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":561,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interface",{"_index":272,"title":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{}},"body":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["interfaces",{"_index":273,"title":{},"body":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"overview.html":{}}}],["isactive",{"_index":79,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["isdefault",{"_index":80,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["item",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/StorageService.html":{}}}],["item?.id",{"_index":650,"title":{},"body":{"injectables/StorageService.html":{}}}],["item?.name",{"_index":652,"title":{},"body":{"injectables/StorageService.html":{}}}],["item[key",{"_index":643,"title":{},"body":{"injectables/StorageService.html":{}}}],["items",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"components/NavigationComponent.html":{},"modules/SharedModule.html":{}}}],["json.parse(localstorage.getitem('identity",{"_index":417,"title":{},"body":{"injectables/IdentityService.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":639,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(identity",{"_index":421,"title":{},"body":{"injectables/IdentityService.html":{}}}],["json.stringify(storage",{"_index":668,"title":{},"body":{"injectables/StorageService.html":{}}}],["justify",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["karma",{"_index":779,"title":{},"body":{"index.html":{}}}],["key",{"_index":275,"title":{},"body":{"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"injectables/StorageService.html":{}}}],["lastname",{"_index":542,"title":{},"body":{"classes/Profile.html":{}}}],["left",{"_index":521,"title":{},"body":{"components/NavigationComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["lepooch",{"_index":509,"title":{},"body":{"components/NavigationComponent.html":{}}}],["lifecycle",{"_index":739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightskyblue",{"_index":513,"title":{},"body":{"components/NavigationComponent.html":{}}}],["literal",{"_index":201,"title":{},"body":{"classes/AppSettings.html":{},"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.setitem('identity",{"_index":420,"title":{},"body":{"injectables/IdentityService.html":{}}}],["localstorage.setitem(key",{"_index":667,"title":{},"body":{"injectables/StorageService.html":{}}}],["log",{"_index":436,"title":{},"body":{"injectables/LoggerService.html":{}}}],["log(args",{"_index":443,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logger",{"_index":611,"title":{},"body":{"modules/SharedModule.html":{}}}],["loggermodel",{"_index":291,"title":{"classes/LoggerModel.html":{}},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["loggermodel(args",{"_index":457,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerservice",{"_index":431,"title":{"injectables/LoggerService.html":{}},"body":{"injectables/LoggerService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":380,"title":{},"body":{"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["login'},{'name",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["login.component.html",{"_index":471,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":470,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":53,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":472,"title":{},"body":{"components/LoginComponent.html":{}}}],["logitems",{"_index":451,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logitems.unshift(new",{"_index":456,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel",{"_index":729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logscope",{"_index":287,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"modules/SharedModule.html":{},"miscellaneous/enumerations.html":{}}}],["logscope.router",{"_index":614,"title":{},"body":{"modules/SharedModule.html":{}}}],["logscopes",{"_index":433,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logtoconsole",{"_index":437,"title":{},"body":{"injectables/LoggerService.html":{}}}],["m.identitymodule",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.schedulemodule",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["map(item",{"_index":642,"title":{},"body":{"injectables/StorageService.html":{}}}],["margin",{"_index":520,"title":{},"body":{"components/NavigationComponent.html":{}}}],["matching",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["message",{"_index":284,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["min",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["miscellaneous",{"_index":726,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modelbase",{"_index":70,"title":{"classes/ModelBase.html":{}},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["modelbase:11",{"_index":94,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:12",{"_index":92,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:13",{"_index":93,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:14",{"_index":96,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:15",{"_index":97,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:16",{"_index":98,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["models/account.model",{"_index":329,"title":{},"body":{"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/NavigationComponent.html":{}}}],["models/base.model",{"_index":99,"title":{},"body":{"classes/Account.html":{},"classes/Profile.html":{},"injectables/StorageService.html":{}}}],["models/identity.model",{"_index":409,"title":{},"body":{"injectables/IdentityService.html":{},"interceptors/TokenInterceptor.html":{}}}],["module",{"_index":146,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":148,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithproviders",{"_index":598,"title":{},"body":{"modules/SharedModule.html":{}}}],["more",{"_index":785,"title":{},"body":{"index.html":{}}}],["multi",{"_index":618,"title":{},"body":{"modules/SharedModule.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"index.html":{}}}],["nav",{"_index":518,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigate",{"_index":755,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":496,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["navigation.component.html",{"_index":498,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":497,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigationcomponent",{"_index":55,"title":{"components/NavigationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["network",{"_index":740,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["networkservice",{"_index":536,"title":{"injectables/NetworkService.html":{}},"body":{"injectables/NetworkService.html":{},"coverage.html":{}}}],["new",{"_index":255,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/ILoggerModel.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":237,"title":{},"body":{"components/DialogComponent.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["next(await",{"_index":659,"title":{},"body":{"injectables/StorageService.html":{}}}],["next.handle(authreq",{"_index":578,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":677,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["ng",{"_index":752,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["none",{"_index":244,"title":{},"body":{"components/DialogComponent.html":{}}}],["null",{"_index":331,"title":{},"body":{"classes/Identity.html":{},"injectables/IdentityService.html":{}}}],["number",{"_index":90,"title":{},"body":{"classes/Account.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["object",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(args",{"_index":301,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["object.keys(this",{"_index":308,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{}}}],["object.keys(this.logscopes).foreach(key",{"_index":465,"title":{},"body":{"injectables/LoggerService.html":{}}}],["object.keys(values",{"_index":641,"title":{},"body":{"injectables/StorageService.html":{}}}],["observable",{"_index":377,"title":{},"body":{"guards/IdentityResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["optional",{"_index":86,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"components/DialogComponent.html":{},"injectables/ErrorService.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["out",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":788,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":711,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":515,"title":{},"body":{"components/NavigationComponent.html":{}}}],["page",{"_index":791,"title":{},"body":{"index.html":{}}}],["panel",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"classes/Account.html":{},"components/DialogComponent.html":{},"injectables/ErrorService.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["password",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["path",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["pathmatch",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["pooch",{"_index":543,"title":{},"body":{"classes/Profile.html":{}}}],["port",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":311,"title":{},"body":{"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["prod",{"_index":771,"title":{},"body":{"index.html":{}}}],["production",{"_index":207,"title":{},"body":{"classes/AppSettings.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":539,"title":{"classes/Profile.html":{}},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["project",{"_index":745,"title":{},"body":{"index.html":{}}}],["promise",{"_index":378,"title":{},"body":{"guards/IdentityResolver.html":{},"injectables/StorageService.html":{}}}],["promise.resolve().then(async",{"_index":638,"title":{},"body":{"injectables/StorageService.html":{}}}],["properties",{"_index":71,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"injectables/DialogService.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{}}}],["protractor",{"_index":782,"title":{},"body":{"index.html":{}}}],["provide",{"_index":615,"title":{},"body":{"modules/SharedModule.html":{}}}],["provider",{"_index":206,"title":{},"body":{"classes/AppSettings.html":{},"miscellaneous/enumerations.html":{}}}],["provider.server",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["public",{"_index":72,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{}}}],["reactiveformsmodule",{"_index":365,"title":{},"body":{"modules/IdentityModule.html":{}}}],["readonly",{"_index":385,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/StorageService.html":{}}}],["redirectto",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{}}}],["reference",{"_index":790,"title":{},"body":{"index.html":{}}}],["register",{"_index":381,"title":{},"body":{"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["register.component.html",{"_index":550,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":549,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":57,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"modules/IdentityModule.html":{},"modules/IdentityRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerform",{"_index":551,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reload",{"_index":758,"title":{},"body":{"index.html":{}}}],["req",{"_index":569,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["req.clone",{"_index":574,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["requestinterceptor",{"_index":560,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["require",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resolve",{"_index":373,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["resolve(route",{"_index":375,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["result",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":333,"title":{},"body":{"classes/Identity.html":{},"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"components/HomeComponent.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{}}}],["root",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["route",{"_index":353,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{}}}],["router",{"_index":346,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"miscellaneous/enumerations.html":{}}}],["routermodule",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild(routes",{"_index":382,"title":{},"body":{"modules/IdentityRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":351,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["routes",{"_index":179,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/IdentityRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":751,"title":{},"body":{"index.html":{}}}],["running",{"_index":773,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":257,"title":{},"body":{"injectables/DialogService.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":673,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["scaffolding",{"_index":762,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["schedule.component",{"_index":588,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["schedule.component.html",{"_index":581,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["schedule.component.scss",{"_index":580,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["schedulecomponent",{"_index":59,"title":{"components/ScheduleComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"coverage.html":{},"overview.html":{}}}],["schedulemodule",{"_index":584,"title":{"modules/ScheduleModule.html":{}},"body":{"modules/ScheduleModule.html":{},"modules.html":{},"overview.html":{}}}],["scope",{"_index":285,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"modules/SharedModule.html":{}}}],["secondary",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["sections",{"_index":525,"title":{},"body":{"components/NavigationComponent.html":{}}}],["sections/about/about.component",{"_index":603,"title":{},"body":{"modules/SharedModule.html":{}}}],["sections/home/home.component",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["serve",{"_index":753,"title":{},"body":{"index.html":{}}}],["server",{"_index":742,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["service",{"_index":230,"title":{},"body":{"components/DialogComponent.html":{}}}],["services",{"_index":610,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/dialog.service",{"_index":234,"title":{},"body":{"components/DialogComponent.html":{},"components/NavigationComponent.html":{},"modules/SharedModule.html":{}}}],["services/error.service",{"_index":604,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/identity.guard",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["services/identity.service",{"_index":354,"title":{},"body":{"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["services/logger.service",{"_index":605,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/request.interceptor",{"_index":606,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/storage.service",{"_index":410,"title":{},"body":{"injectables/IdentityService.html":{},"modules/SharedModule.html":{}}}],["services/token.interceptor",{"_index":608,"title":{},"body":{"modules/SharedModule.html":{}}}],["set",{"_index":334,"title":{},"body":{"classes/Identity.html":{}}}],["setidentity",{"_index":389,"title":{},"body":{"injectables/IdentityService.html":{}}}],["setidentity(identity",{"_index":398,"title":{},"body":{"injectables/IdentityService.html":{}}}],["setstorage",{"_index":623,"title":{},"body":{"injectables/StorageService.html":{}}}],["setstorage(key",{"_index":631,"title":{},"body":{"injectables/StorageService.html":{}}}],["setstorage>(key",{"_index":664,"title":{},"body":{"injectables/StorageService.html":{}}}],["settoken(value",{"_index":327,"title":{},"body":{"classes/Identity.html":{}}}],["sharedmodule",{"_index":159,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedmodule.forroot",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["showdialog",{"_index":226,"title":{},"body":{"components/DialogComponent.html":{},"injectables/DialogService.html":{}}}],["showmessage",{"_index":499,"title":{},"body":{"components/NavigationComponent.html":{}}}],["size",{"_index":523,"title":{},"body":{"components/NavigationComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"components/AppointmentComponent.html":{},"modules/AppointmentModule.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"components/HomeComponent.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"guards/IdentityGuard.html":{},"modules/IdentityModule.html":{},"guards/IdentityResolver.html":{},"modules/IdentityRoutingModule.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ScheduleComponent.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"index.html":{}}}],["space",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["spec\\.ts",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../context.enum.ts",{"_index":728,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../endpoint.interface.ts",{"_index":803,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log.level.enum.ts",{"_index":730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../log.scope.enum.ts",{"_index":731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../providers.enum.ts",{"_index":732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../shared.module.ts",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/@common/components/dialog/dialog.component.ts",{"_index":221,"title":{},"body":{"components/DialogComponent.html":{},"coverage.html":{}}}],["src/app/@common/components/dialog/dialog.component.ts:15",{"_index":232,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/@common/components/dialog/dialog.component.ts:17",{"_index":233,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/@common/components/dialog/dialog.component.ts:21",{"_index":231,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/@common/components/dialog/dialog.component.ts:9",{"_index":229,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/@common/components/navigation/navigation.component.ts",{"_index":495,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/@common/components/navigation/navigation.component.ts:12",{"_index":500,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/@common/components/navigation/navigation.component.ts:24",{"_index":501,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/@common/components/navigation/navigation.component.ts:26",{"_index":502,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/@common/sections/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/@common/sections/about/about.component.ts:13",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/@common/sections/about/about.component.ts:8",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/@common/sections/home/home.component.ts",{"_index":267,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/@common/sections/home/home.component.ts:13",{"_index":271,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/@common/sections/home/home.component.ts:8",{"_index":270,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/@common/shared.module.ts",{"_index":593,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/@common/shared.module.ts:38",{"_index":597,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/app",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/appointment/appointment.component.ts",{"_index":208,"title":{},"body":{"components/AppointmentComponent.html":{},"coverage.html":{}}}],["src/app/appointment/appointment.component.ts:12",{"_index":213,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.component.ts:8",{"_index":212,"title":{},"body":{"components/AppointmentComponent.html":{}}}],["src/app/appointment/appointment.module.ts",{"_index":217,"title":{},"body":{"modules/AppointmentModule.html":{}}}],["src/app/identity/identity.component.ts",{"_index":336,"title":{},"body":{"components/IdentityComponent.html":{},"coverage.html":{}}}],["src/app/identity/identity.component.ts:12",{"_index":340,"title":{},"body":{"components/IdentityComponent.html":{}}}],["src/app/identity/identity.component.ts:8",{"_index":339,"title":{},"body":{"components/IdentityComponent.html":{}}}],["src/app/identity/identity.module.ts",{"_index":364,"title":{},"body":{"modules/IdentityModule.html":{}}}],["src/app/identity/identity.routing.module.ts",{"_index":379,"title":{},"body":{"modules/IdentityRoutingModule.html":{}}}],["src/app/identity/login/login.component.ts",{"_index":469,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/identity/login/login.component.ts:12",{"_index":474,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:21",{"_index":476,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/login/login.component.ts:23",{"_index":475,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/identity/register/register.component.ts",{"_index":548,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/identity/register/register.component.ts:12",{"_index":552,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/identity/register/register.component.ts:21",{"_index":553,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/identity/register/register.component.ts:23",{"_index":554,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/schedule/schedule.component.ts",{"_index":579,"title":{},"body":{"components/ScheduleComponent.html":{},"coverage.html":{}}}],["src/app/schedule/schedule.component.ts:12",{"_index":583,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["src/app/schedule/schedule.component.ts:8",{"_index":582,"title":{},"body":{"components/ScheduleComponent.html":{}}}],["src/app/schedule/schedule.module.ts",{"_index":587,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["src/assets/enums/context.enum.ts",{"_index":733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/assets/enums/log.level.enum.ts",{"_index":734,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/assets/enums/log.scope.enum.ts",{"_index":737,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/assets/enums/providers.enum.ts",{"_index":741,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/assets/helpers/app.settings.ts",{"_index":199,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["src/assets/helpers/app.settings.ts:4",{"_index":202,"title":{},"body":{"classes/AppSettings.html":{}}}],["src/assets/helpers/app.settings.ts:5",{"_index":203,"title":{},"body":{"classes/AppSettings.html":{}}}],["src/assets/helpers/endpoint.interface.ts",{"_index":274,"title":{},"body":{"interfaces/IEndpoint.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/assets/helpers/key.value.ts",{"_index":277,"title":{},"body":{"interfaces/IKeyValue.html":{},"coverage.html":{}}}],["src/assets/helpers/key.value.ts:1",{"_index":280,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["src/assets/helpers/logger.model.ts",{"_index":282,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"coverage.html":{}}}],["src/assets/helpers/logger.model.ts:14",{"_index":430,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/assets/helpers/logger.model.ts:15",{"_index":426,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/assets/helpers/logger.model.ts:16",{"_index":428,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/assets/helpers/logger.model.ts:17",{"_index":424,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/assets/helpers/logger.model.ts:18",{"_index":427,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/assets/helpers/logger.model.ts:19",{"_index":425,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/assets/helpers/logger.model.ts:20",{"_index":429,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/assets/helpers/logger.model.ts:21",{"_index":423,"title":{},"body":{"classes/LoggerModel.html":{}}}],["src/assets/models/account.model.ts",{"_index":68,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["src/assets/models/account.model.ts:4",{"_index":89,"title":{},"body":{"classes/Account.html":{}}}],["src/assets/models/account.model.ts:5",{"_index":88,"title":{},"body":{"classes/Account.html":{}}}],["src/assets/models/account.model.ts:6",{"_index":83,"title":{},"body":{"classes/Account.html":{}}}],["src/assets/models/base.model.ts",{"_index":306,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["src/assets/models/base.model.ts:11",{"_index":492,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/assets/models/base.model.ts:12",{"_index":490,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/assets/models/base.model.ts:13",{"_index":491,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/assets/models/base.model.ts:14",{"_index":493,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/assets/models/base.model.ts:15",{"_index":494,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/assets/models/base.model.ts:16",{"_index":489,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/assets/models/identity.model.ts",{"_index":310,"title":{},"body":{"classes/Identity.html":{},"coverage.html":{}}}],["src/assets/models/identity.model.ts:10",{"_index":326,"title":{},"body":{"classes/Identity.html":{}}}],["src/assets/models/identity.model.ts:11",{"_index":328,"title":{},"body":{"classes/Identity.html":{}}}],["src/assets/models/identity.model.ts:3",{"_index":315,"title":{},"body":{"classes/Identity.html":{}}}],["src/assets/models/profile.model.ts",{"_index":540,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/assets/models/profile.model.ts:4",{"_index":545,"title":{},"body":{"classes/Profile.html":{}}}],["src/assets/models/profile.model.ts:5",{"_index":546,"title":{},"body":{"classes/Profile.html":{}}}],["src/assets/models/profile.model.ts:6",{"_index":547,"title":{},"body":{"classes/Profile.html":{}}}],["src/assets/models/profile.model.ts:7",{"_index":544,"title":{},"body":{"classes/Profile.html":{}}}],["src/assets/services/dialog.service.ts",{"_index":248,"title":{},"body":{"injectables/DialogService.html":{},"coverage.html":{}}}],["src/assets/services/dialog.service.ts:11",{"_index":251,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/assets/services/dialog.service.ts:14",{"_index":250,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/assets/services/dialog.service.ts:6",{"_index":256,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/assets/services/dialog.service.ts:7",{"_index":249,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/assets/services/error.service.ts",{"_index":261,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["src/assets/services/error.service.ts:5",{"_index":264,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/assets/services/identity.guard.ts",{"_index":343,"title":{},"body":{"guards/IdentityGuard.html":{},"coverage.html":{}}}],["src/assets/services/identity.guard.ts:12",{"_index":352,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["src/assets/services/identity.guard.ts:7",{"_index":347,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["src/assets/services/identity.resolver.ts",{"_index":372,"title":{},"body":{"guards/IdentityResolver.html":{},"coverage.html":{}}}],["src/assets/services/identity.resolver.ts:12",{"_index":376,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["src/assets/services/identity.resolver.ts:7",{"_index":374,"title":{},"body":{"guards/IdentityResolver.html":{}}}],["src/assets/services/identity.service.ts",{"_index":383,"title":{},"body":{"injectables/IdentityService.html":{},"coverage.html":{}}}],["src/assets/services/identity.service.ts:10",{"_index":407,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/assets/services/identity.service.ts:12",{"_index":405,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/assets/services/identity.service.ts:13",{"_index":408,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/assets/services/identity.service.ts:14",{"_index":395,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/assets/services/identity.service.ts:23",{"_index":401,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/assets/services/identity.service.ts:26",{"_index":404,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/assets/services/identity.service.ts:29",{"_index":402,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/assets/services/identity.service.ts:32",{"_index":397,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/assets/services/identity.service.ts:39",{"_index":399,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/assets/services/logger.service.ts",{"_index":432,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/assets/services/logger.service.ts:11",{"_index":446,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/assets/services/logger.service.ts:12",{"_index":439,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/assets/services/logger.service.ts:16",{"_index":444,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/assets/services/logger.service.ts:29",{"_index":442,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/assets/services/logger.service.ts:40",{"_index":445,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/assets/services/logger.service.ts:9",{"_index":447,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/assets/services/network.service.ts",{"_index":537,"title":{},"body":{"injectables/NetworkService.html":{},"coverage.html":{}}}],["src/assets/services/network.service.ts:5",{"_index":538,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/assets/services/request.interceptor.ts",{"_index":562,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/assets/services/request.interceptor.ts:12",{"_index":568,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/assets/services/request.interceptor.ts:7",{"_index":564,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/assets/services/storage.service.ts",{"_index":619,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/assets/services/storage.service.ts:10",{"_index":625,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/assets/services/storage.service.ts:15",{"_index":630,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/assets/services/storage.service.ts:27",{"_index":635,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/assets/services/storage.service.ts:41",{"_index":627,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/assets/services/storage.service.ts:47",{"_index":633,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/assets/services/storage.service.ts:9",{"_index":636,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/assets/services/token.interceptor.ts",{"_index":669,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["src/assets/services/token.interceptor.ts:10",{"_index":670,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/assets/services/token.interceptor.ts:15",{"_index":671,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/environments/environment.prod.ts",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stacktrace",{"_index":434,"title":{},"body":{"injectables/LoggerService.html":{}}}],["started",{"_index":675,"title":{"index.html":{}},"body":{"interceptors/TokenInterceptor.html":{}}}],["state",{"_index":350,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["statements",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":594,"title":{},"body":{"modules/SharedModule.html":{}}}],["storage",{"_index":396,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{}}}],["storage.filter(value",{"_index":661,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.findindex(item",{"_index":649,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.push(current",{"_index":657,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.splice(index",{"_index":655,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage[item.name",{"_index":666,"title":{},"body":{"injectables/StorageService.html":{}}}],["storageservice",{"_index":394,"title":{"injectables/StorageService.html":{}},"body":{"injectables/IdentityService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":768,"title":{},"body":{"index.html":{}}}],["string",{"_index":82,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"interfaces/IEndpoint.html":{},"interfaces/IKeyValue.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"injectables/StorageService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["subject",{"_index":252,"title":{},"body":{"injectables/DialogService.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"injectables/StorageService.html":{}}}],["submit",{"_index":486,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe",{"_index":461,"title":{},"body":{"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["super",{"_index":100,"title":{},"body":{"classes/Account.html":{},"classes/Profile.html":{}}}],["super(username",{"_index":330,"title":{},"body":{"classes/Identity.html":{}}}],["support",{"_index":792,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":793,"title":{},"body":{"modules.html":{}}}],["t",{"_index":628,"title":{},"body":{"injectables/StorageService.html":{}}}],["t\\t${key",{"_index":467,"title":{},"body":{"injectables/LoggerService.html":{}}}],["table",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":672,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["tap(event",{"_index":678,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["target",{"_index":286,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["test",{"_index":776,"title":{},"body":{"index.html":{}}}],["tests",{"_index":775,"title":{},"body":{"index.html":{}}}],["text",{"_index":530,"title":{},"body":{"components/NavigationComponent.html":{}}}],["themes",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["themes.scss",{"_index":512,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this._token",{"_index":332,"title":{},"body":{"classes/Identity.html":{}}}],["this.account",{"_index":505,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.account.userlogin(this.loginform.value",{"_index":482,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.account.username",{"_index":511,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.account.userregister(this.registerform.value",{"_index":557,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authstate",{"_index":418,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.checkidentity",{"_index":413,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.collection$[key",{"_index":663,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.collection[key",{"_index":640,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.collection[key].slice",{"_index":644,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.config.environment.production",{"_index":459,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.createdat",{"_index":296,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["this.dialog.showdialog",{"_index":508,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.email",{"_index":103,"title":{},"body":{"classes/Account.html":{}}}],["this.getcollection$(key",{"_index":658,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.getstorage(key",{"_index":647,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.hidedialog",{"_index":238,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.hidedialog$.next",{"_index":259,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.http.post(`${this.baseurl}/auth",{"_index":414,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.http.post(`${this.baseurl}/auth/logout",{"_index":416,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.http.put(`${this.baseurl}/auth",{"_index":415,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity",{"_index":412,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.next(identity",{"_index":422,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.next(storage",{"_index":419,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.subscribe",{"_index":411,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity.authstate",{"_index":355,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["this.identity.identity",{"_index":507,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.identity.identity$.subscribe",{"_index":503,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.identity.setidentity(new",{"_index":685,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.initialize(args.scope",{"_index":455,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.log",{"_index":613,"title":{},"body":{"modules/SharedModule.html":{}}}],["this.loginform",{"_index":480,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logscopes$[args?.scope",{"_index":454,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes$[args?.scope].next(logitems",{"_index":458,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes$[scope",{"_index":460,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes[args?.scope",{"_index":452,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes[key].length",{"_index":468,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logscopes[scope",{"_index":462,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logtoconsole",{"_index":463,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.password",{"_index":102,"title":{},"body":{"classes/Account.html":{}}}],["this.registerform",{"_index":555,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.events.subscribe",{"_index":612,"title":{},"body":{"modules/SharedModule.html":{}}}],["this.router.navigate(['../../schedule",{"_index":483,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/account/login",{"_index":356,"title":{},"body":{"guards/IdentityGuard.html":{}}}],["this.router.navigate(['account/login",{"_index":558,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.service.hidedialog$.subscribe",{"_index":236,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.service.showdialog$.subscribe",{"_index":239,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.setstorage(key",{"_index":660,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.showdialog",{"_index":240,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.showdialog$.next",{"_index":258,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.uid",{"_index":298,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["this.username",{"_index":101,"title":{},"body":{"classes/Account.html":{}}}],["this[key",{"_index":303,"title":{},"body":{"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/LoggerModel.html":{},"classes/ModelBase.html":{}}}],["times",{"_index":245,"title":{},"body":{"components/DialogComponent.html":{}}}],["tmodel",{"_index":279,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["token",{"_index":314,"title":{},"body":{"classes/Identity.html":{},"interceptors/TokenInterceptor.html":{}}}],["token(value",{"_index":335,"title":{},"body":{"classes/Identity.html":{}}}],["tokeninterceptor",{"_index":607,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["true",{"_index":358,"title":{},"body":{"guards/IdentityGuard.html":{},"injectables/IdentityService.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":290,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{},"dependencies.html":{}}}],["tslib",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":85,"title":{},"body":{"classes/Account.html":{},"classes/AppSettings.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"injectables/ErrorService.html":{},"interfaces/IEndpoint.html":{},"interfaces/ILoggerModel.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"guards/IdentityGuard.html":{},"guards/IdentityResolver.html":{},"injectables/IdentityService.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"components/NavigationComponent.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":801,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["uid",{"_index":292,"title":{},"body":{"interfaces/ILoggerModel.html":{},"classes/LoggerModel.html":{}}}],["unit",{"_index":774,"title":{},"body":{"index.html":{}}}],["updatestorage",{"_index":624,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatestorage(key",{"_index":634,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatestorage>(key",{"_index":645,"title":{},"body":{"injectables/StorageService.html":{}}}],["use",{"_index":764,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":617,"title":{},"body":{"modules/SharedModule.html":{}}}],["user",{"_index":683,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["user.email",{"_index":687,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["userlogin",{"_index":390,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userlogin(account",{"_index":400,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userlogout",{"_index":391,"title":{},"body":{"injectables/IdentityService.html":{}}}],["username",{"_index":75,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["userregister",{"_index":392,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userregister(account",{"_index":403,"title":{},"body":{"injectables/IdentityService.html":{}}}],["usevalue",{"_index":616,"title":{},"body":{"modules/SharedModule.html":{}}}],["validators",{"_index":479,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":556,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":481,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":254,"title":{},"body":{"injectables/DialogService.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":632,"title":{},"body":{"injectables/StorageService.html":{}}}],["values.foreach(current",{"_index":648,"title":{},"body":{"injectables/StorageService.html":{}}}],["values.foreach(item",{"_index":665,"title":{},"body":{"injectables/StorageService.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["variable",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":804,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":749,"title":{},"body":{"index.html":{}}}],["via",{"_index":778,"title":{},"body":{"index.html":{}}}],["view",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/DialogComponent.html":{},"injectables/DialogService.html":{},"components/HomeComponent.html":{},"classes/Identity.html":{},"components/IdentityComponent.html":{},"injectables/IdentityService.html":{},"injectables/LoggerService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/ScheduleComponent.html":{}}}],["warn",{"_index":736,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["welcome",{"_index":510,"title":{},"body":{"components/NavigationComponent.html":{}}}],["white",{"_index":514,"title":{},"body":{"components/NavigationComponent.html":{}}}],["width",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["works",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"components/AppointmentComponent.html":{},"components/HomeComponent.html":{},"components/IdentityComponent.html":{},"components/ScheduleComponent.html":{}}}],["x",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["y",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["yes",{"_index":87,"title":{},"body":{"classes/Account.html":{},"classes/LoggerModel.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{},"injectables/StorageService.html":{}}}],["zone.js",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentModule.html":{},"modules/IdentityModule.html":{},"modules/ScheduleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/sections/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/sections/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/sections/about/about.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  about works!\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  about works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/models/account.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ModelBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                userName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userName?: string, password?: string, email?: string)\n                    \n                \n                        \n                            \n                                Defined in src/assets/models/account.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/account.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/account.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/account.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelBase } from '@models/base.model'\n\nexport class Account extends ModelBase {\n  public userName: string;\n  public password: string;\n  public email   : string;\n  // ======================================= //\n  constructor(userName?: string, password?: string, email?: string) {\n    super();\n    this.userName = userName ?? userName;\n    this.password = password ?? password;\n    this.email    = email    ?? email   ;\n  }\n  // ======================================= //\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import \"themes\";\n@import \"styles\";\n\n.view-port {\n  height: 100vh;\n  max-height: 100vh;\n  width: 100vw;\n  max-width: 100vw;\n  // ======================================= //\n  display: flex;\n  .view-main {\n    flex: auto;\n    display: flex;\n    flex-direction: column;\n    .view-content {\n      flex: auto;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n  }\n  .view-panel {\n    min-width: 50px;\n    max-width: 250px;\n    background: $panel-bg;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n\n    .panel-items {\n      width: 50px;\n\n      .panel-item {\n        height: 50px;\n        width: 50px;\n\n        :hover {\n          background: darken($color: $panel-bg, $amount: 10%);\n          * {\n            color: $secondary;\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule           } from '@angular/platform-browser';\nimport { NgModule                } from '@angular/core'            ;\nimport { AppRoutingModule        } from './app-routing.module'     ;\nimport { AppComponent            } from './app.component'          ;\nimport { SharedModule            } from '@common/shared.module'    ;\nimport { environment as env      } from '@env/environment'\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule.forRoot({ environment: env })\n  ],\n  declarations: [AppComponent],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { HomeComponent } from '@sections/home/home.component';\nimport { IdentityGuard } from '@services/identity.guard';\n\nconst routes: Routes = [\n  // ======================================= //\n  { path: 'home', component:HomeComponent },\n  { path: 'schedule', canActivate: [IdentityGuard], loadChildren: () => \"import('./schedule/schedule.module').then(m => m.ScheduleModule)\" },\n  { path: 'account', loadChildren: () => \"import('./identity/identity.module').then(m => m.IdentityModule)\" },\n  { path: '**', pathMatch: 'full', redirectTo: '' }\n];\n// ======================================= //\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppSettings.html":{"url":"classes/AppSettings.html","title":"class - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/helpers/app.settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                endpoints\n                            \n                            \n                                    Public\n                                environment\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/helpers/app.settings.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/helpers/app.settings.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Endpoints, IEndpoint } from '@helpers/endpoint.interface'\n\nexport class AppSettings {\n  public endpoints?: { [provider: string]: IEndpoint };\n  public environment: { production: boolean, endpoints: Endpoints };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppointmentComponent.html":{"url":"components/AppointmentComponent.html","title":"component - AppointmentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppointmentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/appointment/appointment.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-appointment\n            \n\n            \n                styleUrls\n                ./appointment.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./appointment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/appointment/appointment.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/appointment/appointment.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.scss']\n})\nexport class AppointmentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  appointment works!\n\n\n    \n\n    \n                \n                    ./appointment.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  appointment works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppointmentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppointmentModule.html":{"url":"modules/AppointmentModule.html","title":"module - AppointmentModule","body":"\n                   \n\n\n\n\n    Modules\n    AppointmentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppointmentModule\n\n\n\ncluster_AppointmentModule_declarations\n\n\n\n\nAppointmentComponent\n\nAppointmentComponent\n\n\n\nAppointmentModule\n\nAppointmentModule\n\nAppointmentModule -->\n\nAppointmentComponent->AppointmentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/appointment/appointment.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppointmentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AppointmentComponent } from './appointment.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [AppointmentComponent]\n})\nexport class AppointmentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogComponent.html":{"url":"components/DialogComponent.html","title":"component - DialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/components/dialog/dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog\n            \n\n            \n                styleUrls\n                ./dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hideDialog\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                showDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: DialogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/components/dialog/dialog.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hideDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/components/dialog/dialog.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/components/dialog/dialog.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/components/dialog/dialog.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { DialogService } from '@services/dialog.service'\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n  constructor(private service: DialogService) {\n    this.service.hideDialog$.subscribe({ next: () => this.hideDialog() });\n    this.service.showDialog$.subscribe({ next: () => this.showDialog() });\n  }\n\n  ngOnInit() { }\n\n  public showDialog() {\n    const dialog = document.getElementById(\"dialog\");\n    dialog.style.display = \"block\";\n  }\n  public hideDialog() {\n    const dialog = document.getElementById(\"dialog\");\n    dialog.style.display = \"none\";\n  }\n}\n    \n\n    \n        \n  \n    &times;\n    \n  \n\n\n    \n\n    \n                \n                    ./dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      ×      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/services/dialog.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hideDialog$\n                            \n                            \n                                    Public\n                                showDialog$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hideDialog\n                            \n                            \n                                    Public\n                                showDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/assets/services/dialog.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hideDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/dialog.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/dialog.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideDialog$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/services/dialog.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showDialog$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/services/dialog.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class DialogService {\n  public showDialog$: Subject = new Subject();\n  public hideDialog$: Subject = new Subject();\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n  public showDialog() {\n    this.showDialog$.next();\n  }\n  public hideDialog() {\n    this.hideDialog$.next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/services/error.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/assets/services/error.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class ErrorService {\n  // ======================================= //\n  constructor(private http: HttpClient) { }\n  // ======================================= //\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/sections/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/sections/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/sections/home/home.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  home works!\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  home works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEndpoint.html":{"url":"interfaces/IEndpoint.html","title":"interface - IEndpoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEndpoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/helpers/endpoint.interface.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface IEndpoint {\n}\nexport type Endpoints = { [key: string]: IEndpoint };\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeyValue.html":{"url":"interfaces/IKeyValue.html","title":"interface - IKeyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/helpers/key.value.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    TModel\n\n                    \n                \n                        \n                            \n                                Defined in src/assets/helpers/key.value.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface IKeyValue {\n  // ======================================= //\n  [ key: string ]: TModel;\n  // ======================================= //\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILoggerModel.html":{"url":"interfaces/ILoggerModel.html","title":"interface - ILoggerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILoggerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/helpers/logger.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        descriptor\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        scope\n                                \n                                \n                                            Optional\n                                        target\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        descriptor\n                                    \n                                \n                                \n                                    \n                                        descriptor:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:         LogScope\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LogScope\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LogScope } from '@enums/log.scope.enum'\nimport { Guid } from 'guid-ts';\n\nexport interface ILoggerModel {\n  message   ?: string  ;\n  descriptor?: any     ;\n  name      ?: any     ;\n  scope     ?: LogScope;\n  target    ?: any     ;\n  items?: { [item: string]: any };\n}\nexport class LoggerModel {\n  // ======================================= //\n  public uid        : string  ;\n  public createdAt  : number  ;\n  public scope      : LogScope;\n  public caller     : string  ;\n  public description: string  ;\n  public class      : string  ;\n  public source     : string  ;\n  public items: { [item: string]: any };\n  // ======================================= //\n  constructor(args?: ILoggerModel) {\n    this.createdAt = new Date().valueOf();\n    this.uid = Guid.newGuid().toString().split('-')[0];\n    // ======================================= //\n    Object.keys(args)\n      .forEach(key => this[key] = args[key] );\n  }\n  // ======================================= //\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IModelBase.html":{"url":"interfaces/IModelBase.html","title":"interface - IModelBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IModelBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/models/base.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        isActive\n                                \n                                \n                                            Optional\n                                        isDefault\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDefault\n                                    \n                                \n                                \n                                    \n                                        isDefault:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IModelBase {\n  id         ?: number ;\n  name       ?: string ;\n  description?: string ;\n  isActive   ?: boolean;\n  isDefault  ?: boolean;\n}\nexport class ModelBase> {\n  // ======================================= //\n  public id         : number ;\n  public created    : number ;\n  public description: string ;\n  public isActive   : boolean;\n  public isDefault  : boolean;\n  public name       : string ;\n  // ======================================= //\n  constructor(args?: IModelBase) {\n    args ?? Object.keys(this)\n      .forEach(key => this[key] = this[key] ?? args[key]);\n  }\n  // ======================================= //\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Identity.html":{"url":"classes/Identity.html","title":"class - Identity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Identity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/models/identity.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Account\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _token\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                userName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, email: string, token: string)\n                    \n                \n                        \n                            \n                                Defined in src/assets/models/identity.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/identity.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/assets/models/identity.model.ts:10\n                                \n                            \n\n                \n                    \n                        settoken(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/assets/models/identity.model.ts:11\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Account } from '@models/account.model'\nexport class Identity extends Account {\n  private _token: string;\n  // ======================================= //\n  constructor(username: string, email: string, token: string) {\n    super(username, null, email);\n    this._token = token;\n  }\n  // ======================================= //\n  public get token() { return this._token; };\n  public set token(value: string) { this._token = value; }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IdentityComponent.html":{"url":"components/IdentityComponent.html","title":"component - IdentityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IdentityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/identity.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-identity\n            \n\n            \n                styleUrls\n                ./identity.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./identity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/identity.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/identity.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-identity',\n  templateUrl: './identity.component.html',\n  styleUrls: ['./identity.component.scss']\n})\nexport class IdentityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  identity works!\n\n\n    \n\n    \n                \n                    ./identity.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  identity works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IdentityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IdentityGuard.html":{"url":"guards/IdentityGuard.html","title":"guard - IdentityGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    IdentityGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/assets/services/identity.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/assets/services/identity.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/identity.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router'\nimport { IdentityService } from '@services/identity.service'\n\n@Injectable()\nexport class IdentityGuard implements CanActivate {\n  // ======================================= //\n  constructor(private identity: IdentityService, private router: Router) { }\n  // ======================================= //\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!this.identity.authState) {\n      this.router.navigate(['/account/login']);\n      return false;\n    }\n    return true;\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentityModule.html":{"url":"modules/IdentityModule.html","title":"module - IdentityModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentityModule\n\n\n\ncluster_IdentityModule_imports\n\n\n\ncluster_IdentityModule_declarations\n\n\n\n\nIdentityComponent\n\nIdentityComponent\n\n\n\nIdentityModule\n\nIdentityModule\n\nIdentityModule -->\n\nIdentityComponent->IdentityModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nIdentityModule -->\n\nLoginComponent->IdentityModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nIdentityModule -->\n\nRegisterComponent->IdentityModule\n\n\n\n\n\nIdentityRoutingModule\n\nIdentityRoutingModule\n\nIdentityModule -->\n\nIdentityRoutingModule->IdentityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/identity/identity.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IdentityComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentityRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { IdentityRoutingModule } from '@identity/identity.routing.module'\nimport { LoginComponent } from '@identity/login/login.component'\nimport { RegisterComponent } from '@identity/register/register.component'\nimport { IdentityComponent } from './identity.component'\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, IdentityRoutingModule],\n  declarations: [IdentityComponent, LoginComponent, RegisterComponent]\n})\nexport class IdentityModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IdentityResolver.html":{"url":"guards/IdentityResolver.html","title":"guard - IdentityResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    IdentityResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/assets/services/identity.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/assets/services/identity.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/identity.resolver.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable } from 'rxjs'\nimport { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router'\nimport { IdentityService } from '@services/identity.service'\n\n@Injectable()\nexport class IdentityResolver implements Resolve {\n  // ======================================= //\n  constructor(private identity: IdentityService, private router: Router) { }\n  // ======================================= //\n\n  resolve(route: ActivatedRouteSnapshot): Observable | Promise | any {\n\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentityRoutingModule.html":{"url":"modules/IdentityRoutingModule.html","title":"module - IdentityRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentityRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/identity/identity.routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { LoginComponent } from '@identity/login/login.component'\nimport { RegisterComponent } from '@identity/register/register.component'\n\nconst routes: Routes = [\n  // ======================================= //\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: '**', pathMatch: 'full', redirectTo: 'login' }\n];\n// ======================================= //\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IdentityRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentityService.html":{"url":"injectables/IdentityService.html","title":"injectable - IdentityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IdentityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/services/identity.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authState\n                            \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Public\n                                identity\n                            \n                            \n                                    Public\n                                identity$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkIdentity\n                            \n                            \n                                    Public\n                                setIdentity\n                            \n                            \n                                    Public\n                                userLogin\n                            \n                            \n                                    Public\n                                userLogout\n                            \n                            \n                                    Public\n                                userRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/assets/services/identity.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            checkIdentity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIdentity()\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/identity.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setIdentity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setIdentity(identity: Identity)\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/identity.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identity\n                                    \n                                                Identity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogin(account: Account)\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/identity.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                Account\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/identity.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userRegister(account: Account)\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/identity.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                Account\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/services/identity.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:5000'\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/services/identity.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Identity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/services/identity.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identity$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/services/identity.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Account } from '@models/account.model'\nimport { Identity } from '@models/identity.model'\nimport { StorageService } from '@services/storage.service'\n\n@Injectable()\nexport class IdentityService {\n  private readonly baseUrl: string = 'http://localhost:5000';\n  // ======================================= //\n  public authState: boolean = false;\n  public identity: Identity;\n  public identity$: Subject = new Subject();\n  // ======================================= //\n  constructor(private storage: StorageService, private http: HttpClient) {\n    this.identity$.subscribe({\n      next: result => this.identity = result\n    });\n    this.checkIdentity();\n  }\n  // ======================================= //\n  public userLogin(account: Account) {\n    return this.http.post(`${this.baseUrl}/auth`, account);\n  }\n  public userRegister(account: Account) {\n    return this.http.put(`${this.baseUrl}/auth`, account);\n  }\n  public userLogout() {\n    return this.http.post(`${this.baseUrl}/auth/logout`, {});\n  }\n  public async checkIdentity() {\n    const storage: Identity = JSON.parse(localStorage.getItem('identity')) as Identity;\n    this.authState = storage != null;\n    if (storage && !this.identity) {\n      this.identity$.next(storage);\n    }\n  }\n  public setIdentity(identity: Identity) {\n    localStorage.setItem('identity', JSON.stringify(identity));\n    this.authState = true;\n    this.identity$.next(identity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerModel.html":{"url":"classes/LoggerModel.html","title":"class - LoggerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/helpers/logger.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                caller\n                            \n                            \n                                    Public\n                                class\n                            \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                scope\n                            \n                            \n                                    Public\n                                source\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ILoggerModel)\n                    \n                \n                        \n                            \n                                Defined in src/assets/helpers/logger.model.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ILoggerModel\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            caller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/helpers/logger.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/helpers/logger.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/helpers/logger.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/helpers/logger.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/helpers/logger.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogScope\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/helpers/logger.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/helpers/logger.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/helpers/logger.model.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LogScope } from '@enums/log.scope.enum'\nimport { Guid } from 'guid-ts';\n\nexport interface ILoggerModel {\n  message   ?: string  ;\n  descriptor?: any     ;\n  name      ?: any     ;\n  scope     ?: LogScope;\n  target    ?: any     ;\n  items?: { [item: string]: any };\n}\nexport class LoggerModel {\n  // ======================================= //\n  public uid        : string  ;\n  public createdAt  : number  ;\n  public scope      : LogScope;\n  public caller     : string  ;\n  public description: string  ;\n  public class      : string  ;\n  public source     : string  ;\n  public items: { [item: string]: any };\n  // ======================================= //\n  constructor(args?: ILoggerModel) {\n    this.createdAt = new Date().valueOf();\n    this.uid = Guid.newGuid().toString().split('-')[0];\n    // ======================================= //\n    Object.keys(args)\n      .forEach(key => this[key] = args[key] );\n  }\n  // ======================================= //\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/services/logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logScopes\n                            \n                            \n                                    Public\n                                logScopes$\n                            \n                            \n                                    Private\n                                stackTrace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Private\n                                logToConsole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/assets/services/logger.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(scope: string)\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scope\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(args?: ILoggerModel)\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ILoggerModel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            logToConsole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logToConsole()\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/logger.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logScopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/services/logger.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logScopes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue>\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/services/logger.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stackTrace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/services/logger.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { Injectable } from '@angular/core'\nimport { AppSettings } from '@helpers/app.settings'\nimport { IKeyValue } from '@helpers/key.value'\nimport { ILoggerModel, LoggerModel } from '@helpers/logger.model'\n\n@Injectable()\nexport class LoggerService {\n  private stackTrace: any = {};\n  // ======================================= //\n  public logScopes: IKeyValue = {};\n  public logScopes$: IKeyValue> = {};\n  // ======================================= //\n  constructor(private config: AppSettings) { }\n  // ======================================= //\n  public log(args?: ILoggerModel) {\n    let logItems = this.logScopes[args?.scope]\n      ? this.logScopes[args?.scope]\n      : new Array();\n\n    if (!this.logScopes$[args?.scope]) {\n      this.logScopes$[args?.scope] = new Subject();\n      this.initialize(args.scope);\n    }\n    logItems.unshift(new LoggerModel(args));\n    this.logScopes$[args?.scope].next(logItems);\n  }\n\n  private initialize(scope: string) {\n    if (!this.config.environment.production) {\n      this.logScopes$[scope]\n        .subscribe({\n          next: (value: LoggerModel[]) => {\n            this.logScopes[scope] = value;\n            this.logToConsole();\n          }\n        });\n    }\n  }\n  private logToConsole() {\n    // console.clear();\n    // Object.keys(this.logScopes).forEach(key => {\n    //   console.groupCollapsed(`%c \\t\\t${key} Scope => ${this.logScopes[key].length \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(account: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/login/login.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        account\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/login/login.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/login/login.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/identity/login/login.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IdentityService } from '@services/identity.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n\n  constructor(private account: IdentityService, private router: Router) {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    })\n  }\n\n  ngOnInit() { }\n\n  public login() {\n    this.account.userLogin(this.loginForm.value)\n      .subscribe({\n        next: result => this.router.navigate(['../../schedule']),\n        error: error => console.log(error)\n      });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n     Login\n    \n      \n        \n           Username:\n          \n        \n        \n           Password:\n          \n        \n        \n          Submit! \n        \n      \n      \n        Click here to register!\n      \n    \n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           Login                             Username:                                     Password:                                    Submit!                             Click here to register!            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModelBase.html":{"url":"classes/ModelBase.html","title":"class - ModelBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/models/base.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IModelBase)\n                    \n                \n                        \n                            \n                                Defined in src/assets/models/base.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IModelBase\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/base.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/base.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/base.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/base.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/base.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/base.model.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IModelBase {\n  id         ?: number ;\n  name       ?: string ;\n  description?: string ;\n  isActive   ?: boolean;\n  isDefault  ?: boolean;\n}\nexport class ModelBase> {\n  // ======================================= //\n  public id         : number ;\n  public created    : number ;\n  public description: string ;\n  public isActive   : boolean;\n  public isDefault  : boolean;\n  public name       : string ;\n  // ======================================= //\n  constructor(args?: IModelBase) {\n    args ?? Object.keys(this)\n      .forEach(key => this[key] = this[key] ?? args[key]);\n  }\n  // ======================================= //\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@common/components/navigation/navigation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                account\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                showMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, dialog: DialogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/components/navigation/navigation.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/components/navigation/navigation.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/components/navigation/navigation.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Account\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/components/navigation/navigation.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { Account } from '@models/account.model'\nimport { DialogService } from '@services/dialog.service';\nimport { IdentityService } from '@services/identity.service'\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n  public account: Account;\n  constructor(private identity: IdentityService, private dialog: DialogService) {\n    this.identity.identity$.subscribe({\n      next: result => {\n        console.log(result)\n        this.account = result;\n        console.log(this.account);\n      }\n    });\n    this.account = this.identity.identity;\n  }\n\n  ngOnInit() { }\n\n  public showMessage() {\n    this.dialog.showDialog()\n  }\n}\n\n    \n\n    \n        \n   LePooch\n  \n    \n    \n    \n      \n      Welcome {{this.account.userName}}! \n    \n  \n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                @import \"themes.scss\";\n\n.navigation {\n  display: flex;\n  align-items: center;\n  background: lightskyblue;\n  height: 50px;\n  color: white;\n  max-height: 50px;\n  padding: 0px 15px;\n\n  .nav-brand {\n    margin-left: 15px;\n    font-size: 24px;\n  }\n  .nav-sections {\n    margin: 0px 15px;\n    flex: auto;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n}\n.nav-actions {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n}\n.nav-action {\n  text-align: center;\n  min-width: 50px;\n  color: white;\n  .fa {\n    font-size: 20px;\n  }\n}\n.nav-action::after {\n}\n.nav-action:hover {\n  ::after {\n  }\n}\n.nav-action:active {\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   LePooch                          Welcome {{this.account.userName}}!       '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkService.html":{"url":"injectables/NetworkService.html","title":"injectable - NetworkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NetworkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/services/network.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/assets/services/network.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class NetworkService {\n  // ======================================= //\n  constructor(private http: HttpClient) { }\n  // ======================================= //\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/models/profile.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ModelBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                pooch\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/assets/models/profile.model.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/profile.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/profile.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/profile.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pooch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/models/profile.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelBase } from '@models/base.model';\n\nexport class Profile extends ModelBase {\n  public email    : string;\n  public firstName: string;\n  public lastName : string;\n  public pooch    : string;\n  // ======================================= //\n  constructor() { super(); }\n  // ======================================= //\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/identity/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(account: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/identity/register/register.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        account\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/register/register.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/identity/register/register.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/identity/register/register.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IdentityService } from '@services/identity.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  public registerForm: FormGroup;\n  constructor(private account: IdentityService, private router: Router) {\n    this.registerForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required)\n    })\n  }\n\n  ngOnInit() { }\n\n  public register() {\n    this.account.userRegister(this.registerForm.value)\n    .subscribe({\n      next: result => this.router.navigate(['account/login']),\n      error: error => console.log(error)\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n     Register\n    \n      \n        \n           Username:\n          \n        \n        \n           Password:\n          \n        \n        \n           Email:\n          \n        \n        \n          Submit! \n        \n      \n      \n        Click here to login!\n      \n    \n  \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           Register                             Username:                                     Password:                                     Email:                                    Submit!                             Click here to login!            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/services/request.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/assets/services/request.interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/request.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { AppSettings } from '@helpers/app.settings'\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  // ======================================= //\n  constructor(private config: AppSettings) { }\n  // ======================================= //\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const authReq = req.clone({\n      headers: new HttpHeaders({'Content-Type': 'application/json'}),\n    });\n    return next.handle(authReq);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScheduleComponent.html":{"url":"components/ScheduleComponent.html","title":"component - ScheduleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScheduleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/schedule/schedule.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-schedule\n            \n\n            \n                styleUrls\n                ./schedule.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./schedule.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/schedule/schedule.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/schedule/schedule.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.scss']\n})\nexport class ScheduleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  schedule works!\n\n\n    \n\n    \n                \n                    ./schedule.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  schedule works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppointmentComponent', 'selector': 'app-appointment'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IdentityComponent', 'selector': 'app-identity'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScheduleComponent', 'selector': 'app-schedule'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScheduleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScheduleModule.html":{"url":"modules/ScheduleModule.html","title":"module - ScheduleModule","body":"\n                   \n\n\n\n\n    Modules\n    ScheduleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScheduleModule\n\n\n\ncluster_ScheduleModule_declarations\n\n\n\n\nScheduleComponent\n\nScheduleComponent\n\n\n\nScheduleModule\n\nScheduleModule\n\nScheduleModule -->\n\nScheduleComponent->ScheduleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/schedule/schedule.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ScheduleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScheduleComponent } from './schedule.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ScheduleComponent]\n})\nexport class ScheduleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAboutComponent->SharedModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nSharedModule -->\n\nDialogComponent->SharedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nSharedModule -->\n\nHomeComponent->SharedModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nAboutComponent \n\nAboutComponent \n\nAboutComponent  -->\n\nSharedModule->AboutComponent \n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nSharedModule->DialogComponent \n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nSharedModule->HomeComponent \n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nDialogService\n\nDialogService\n\nSharedModule -->\n\nDialogService->SharedModule\n\n\n\n\n\nErrorService\n\nErrorService\n\nSharedModule -->\n\nErrorService->SharedModule\n\n\n\n\n\nIdentityService\n\nIdentityService\n\nSharedModule -->\n\nIdentityService->SharedModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nSharedModule -->\n\nLoggerService->SharedModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nSharedModule -->\n\nStorageService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/@common/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            DialogComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            NavigationComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DialogService\n                        \n                        \n                            ErrorService\n                        \n                        \n                            IdentityService\n                        \n                        \n                            LoggerService\n                        \n                        \n                            StorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            DialogComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            NavigationComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: AppSettings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/shared.module.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                AppSettings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule                          } from '@angular/common'\nimport { HTTP_INTERCEPTORS  , HttpClientModule } from '@angular/common/http'\nimport { ModuleWithProviders, NgModule         } from '@angular/core'\nimport { Router             , RouterModule     } from '@angular/router'\nimport { DialogComponent                       } from '@components/dialog/dialog.component'\nimport { NavigationComponent                   } from '@components/navigation/navigation.component'\nimport { LogScope                              } from '@enums/log.scope.enum'\nimport { AppSettings                           } from '@helpers/app.settings'\nimport { AboutComponent                        } from '@sections/about/about.component'\nimport { HomeComponent                         } from '@sections/home/home.component'\nimport { DialogService                         } from '@services/dialog.service'\nimport { ErrorService                          } from '@services/error.service'\nimport { IdentityGuard                         } from '@services/identity.guard'\nimport { IdentityService                       } from '@services/identity.service'\nimport { LoggerService                         } from '@services/logger.service'\nimport { RequestInterceptor                    } from '@services/request.interceptor'\nimport { StorageService                        } from '@services/storage.service'\nimport { TokenInterceptor                      } from '@services/token.interceptor'\n\n// ======================================= //\nconst components: any[] = [AboutComponent, HomeComponent   , NavigationComponent, DialogComponent                               ];\nconst modules   : any[] = [CommonModule  , HttpClientModule, RouterModule       . forChild       ([])                           ];\nconst services  : any[] = [IdentityGuard , ErrorService    , LoggerService      , IdentityService, StorageService, DialogService];\n// ======================================= //\n@NgModule({\n  declarations:  components,\n  imports     :  modules   ,\n  exports     : [modules   , components],\n  providers   :  services  ,\n})\nexport class SharedModule {\n  constructor(private logger: LoggerService, private router: Router) {\n    this.router.events.subscribe({\n      next: (value) => this.logger.log({ scope: LogScope.Router, items: { value: value } })\n    });\n  }\n\n  static forRoot(config: AppSettings): ModuleWithProviders {\n    return {\n      ngModule: SharedModule,\n      providers: [\n        { provide: AppSettings, useValue: config },\n        services,\n        { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true }\n      ]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/services/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                collection\n                            \n                            \n                                    Private\n                                    Readonly\n                                collection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCollection$\n                            \n                            \n                                    Public\n                                getStorage\n                            \n                            \n                                    Private\n                                setStorage\n                            \n                            \n                                    Public\n                                updateStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/assets/services/storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCollection$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollection$(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/storage.service.ts:41\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/storage.service.ts:15\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(key: string, values?: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/storage.service.ts:47\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    values\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStorage(key: string, values: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/storage.service.ts:27\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    values\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/services/storage.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            collection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue>\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/assets/services/storage.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { Injectable } from '@angular/core'\nimport { AppSettings } from '@helpers/app.settings'\nimport { IKeyValue } from '@helpers/key.value'\nimport { ModelBase } from '@models/base.model'\n\n@Injectable()\nexport class StorageService {\n  private readonly collection: IKeyValue = {};\n  private readonly collection$: IKeyValue> = {};\n\n  // ======================================= //\n  constructor(private config: AppSettings) { }\n  // ======================================= //\n  public getStorage>(key: string): Promise {\n    return Promise.resolve().then(async () => {\n\n      const values: IKeyValue = JSON.parse(localStorage.getItem(key));\n      this.collection[key] = values\n        ? Object.keys(values)\n          .map(item => item[key])\n        : new Array();\n\n      return this.collection[key].slice() as T[];\n    });\n  }\n  public updateStorage>(key: string, values: T[]): Promise {\n    return Promise.resolve().then(async () => {\n\n      const storage: T[] = await this.getStorage(key);\n      values.forEach(current => {\n        const index = storage.findIndex(item => item?.id == current?.id || item?.name == current.name);\n        index > -1 ? storage.splice(index, 1, current) : storage.push(current);\n      });\n      this.getCollection$(key)\n        .next(await this.setStorage(key, storage.filter(value => value)));\n\n      return storage.filter(value => value) as T[];\n    });\n  }\n  public getCollection$>(key: string): Subject {\n    if (!this.collection$[key])\n      this.collection$[key] = new Subject();\n\n    return this.collection$[key] as Subject;\n  }\n  private setStorage>(key: string, values?: T[]): Promise {\n    return Promise.resolve().then(async () => {\n\n      const storage: IKeyValue = {};\n      values.forEach(item => storage[item.name] = item);\n      localStorage.setItem(key, JSON.stringify(storage));\n\n      return await this.getStorage(key) as T[];\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/services/token.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppSettings, identity: IdentityService)\n                    \n                \n                        \n                            \n                                Defined in src/assets/services/token.interceptor.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/assets/services/token.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { tap } from 'rxjs/operators'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { AppSettings } from '@helpers/app.settings'\nimport { IdentityService } from '@services/identity.service'\nimport { Identity } from '@models/identity.model'\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  // ======================================= //\n  constructor(private config: AppSettings, private identity: IdentityService) { }\n  // ======================================= //\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const started = Date.now();\n    return next.handle(req).pipe(\n      tap(event => {\n        if (event instanceof HttpResponse) {\n          if (event.headers.has('Authorization')) {\n            const token = event.headers.get('Authorization').replace('Bearer ', '');\n            const user: any = event.body;\n            this.identity.setIdentity(new Identity(user.userName, user.email, token));\n          }\n        }\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/@common/components/dialog/dialog.component.ts\n            \n            component\n            DialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/@common/components/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/@common/sections/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/sections/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/shared.module.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/shared.module.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/shared.module.ts\n            \n            variable\n            services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/appointment/appointment.component.ts\n            \n            component\n            AppointmentComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/identity.component.ts\n            \n            component\n            IdentityComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/identity/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/identity/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/schedule/schedule.component.ts\n            \n            component\n            ScheduleComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/assets/helpers/app.settings.ts\n            \n            class\n            AppSettings\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/assets/helpers/endpoint.interface.ts\n            \n            interface\n            IEndpoint\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/assets/helpers/key.value.ts\n            \n            interface\n            IKeyValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/assets/helpers/logger.model.ts\n            \n            class\n            LoggerModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/assets/helpers/logger.model.ts\n            \n            interface\n            ILoggerModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/assets/models/account.model.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/assets/models/base.model.ts\n            \n            class\n            ModelBase\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/assets/models/base.model.ts\n            \n            interface\n            IModelBase\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/assets/models/identity.model.ts\n            \n            class\n            Identity\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/assets/models/profile.model.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/assets/services/dialog.service.ts\n            \n            injectable\n            DialogService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/assets/services/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/assets/services/identity.guard.ts\n            \n            guard\n            IdentityGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/assets/services/identity.resolver.ts\n            \n            guard\n            IdentityResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/assets/services/identity.service.ts\n            \n            injectable\n            IdentityService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/assets/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/assets/services/network.service.ts\n            \n            injectable\n            NetworkService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/assets/services/request.interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/assets/services/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/assets/services/token.interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            endpoints\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            endpoints\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.2.1\n        \n            guid-ts : ^1.1.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Context   (src/.../context.enum.ts)\n                        \n                        \n                            LogLevel   (src/.../log.level.enum.ts)\n                        \n                        \n                            LogScope   (src/.../log.scope.enum.ts)\n                        \n                        \n                            Provider   (src/.../providers.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/assets/enums/context.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Context\n                    \n                \n                        \n                            \n                                 Account\n                            \n                        \n                        \n                            \n                                Value : Account\n                            \n                        \n                        \n                            \n                                 Identity\n                            \n                        \n                        \n                            \n                                Value : Identity\n                            \n                        \n            \n        \n\n    src/assets/enums/log.level.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : Debug\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : Error\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                Value : Info\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : Warn\n                            \n                        \n            \n        \n\n    src/assets/enums/log.scope.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LogScope\n                    \n                \n                        \n                            \n                                 Authentication\n                            \n                        \n                        \n                            \n                                Value : Authentication\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : Error\n                            \n                        \n                        \n                            \n                                 Lifecycle\n                            \n                        \n                        \n                            \n                                Value : Lifecycle\n                            \n                        \n                        \n                            \n                                 Network\n                            \n                        \n                        \n                            \n                                Value : Network\n                            \n                        \n                        \n                            \n                                 Router\n                            \n                        \n                        \n                            \n                                Value : Router\n                            \n                        \n                        \n                            \n                                 Storage\n                            \n                        \n                        \n                            \n                                Value : Storage\n                            \n                        \n            \n        \n\n    src/assets/enums/providers.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Provider\n                    \n                \n                        \n                            \n                                 Server\n                            \n                        \n                        \n                            \n                                Value : Server\n                            \n                        \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : Other\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClient\nThis project was generated with Angular CLI version 11.0.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppointmentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentityRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScheduleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppointmentModule\n\n\n\ncluster_AppointmentModule_declarations\n\n\n\ncluster_IdentityModule\n\n\n\ncluster_IdentityModule_declarations\n\n\n\ncluster_IdentityModule_imports\n\n\n\ncluster_ScheduleModule\n\n\n\ncluster_ScheduleModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAboutComponent \n\nAboutComponent \n\nAboutComponent  -->\n\nSharedModule->AboutComponent \n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nSharedModule->DialogComponent \n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nSharedModule->HomeComponent \n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nAppointmentComponent\n\nAppointmentComponent\n\n\n\nAppointmentModule\n\nAppointmentModule\n\nAppointmentModule -->\n\nAppointmentComponent->AppointmentModule\n\n\n\n\n\nIdentityComponent\n\nIdentityComponent\n\n\n\nIdentityModule\n\nIdentityModule\n\nIdentityModule -->\n\nIdentityComponent->IdentityModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nIdentityModule -->\n\nLoginComponent->IdentityModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nIdentityModule -->\n\nRegisterComponent->IdentityModule\n\n\n\n\n\nIdentityRoutingModule\n\nIdentityRoutingModule\n\nIdentityModule -->\n\nIdentityRoutingModule->IdentityModule\n\n\n\n\n\nScheduleComponent\n\nScheduleComponent\n\n\n\nScheduleModule\n\nScheduleModule\n\nScheduleModule -->\n\nScheduleComponent->ScheduleModule\n\n\n\n\n\nAboutComponent\n\nAboutComponent\n\nSharedModule -->\n\nAboutComponent->SharedModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nSharedModule -->\n\nDialogComponent->SharedModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nSharedModule -->\n\nHomeComponent->SharedModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nDialogService\n\nDialogService\n\nSharedModule -->\n\nDialogService->SharedModule\n\n\n\n\n\nErrorService\n\nErrorService\n\nSharedModule -->\n\nErrorService->SharedModule\n\n\n\n\n\nIdentityService\n\nIdentityService\n\nSharedModule -->\n\nIdentityService->SharedModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nSharedModule -->\n\nLoggerService->SharedModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nSharedModule -->\n\nStorageService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Endpoints   (src/.../endpoint.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/assets/helpers/endpoint.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Endpoints\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            components   (src/.../shared.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            endpoints   (src/.../environment.prod.ts)\n                        \n                        \n                            endpoints   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            modules   (src/.../shared.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            services   (src/.../shared.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/@common/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [AboutComponent, HomeComponent   , NavigationComponent, DialogComponent                               ]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [CommonModule  , HttpClientModule, RouterModule       . forChild       ([])                           ]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [IdentityGuard , ErrorService    , LoggerService      , IdentityService, StorageService, DialogService]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Endpoints\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [Provider.Server]: {\n\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  endpoints: endpoints\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Endpoints\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [Provider.Server]: {\n\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  endpoints: endpoints\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
